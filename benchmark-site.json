{"posts":[{"id":1,"pageId":"1","nr":0,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510000132,"createdById":100,"currRevById":100,"currRevStartedAt":1555510000132,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"Porting from Nashorn to Graal.js","approvedHtmlSanitized":"Porting from Nashorn to Graal.js","approvedAt":1555510000132,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":3,"pageId":"2","nr":0,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510000949,"createdById":1,"currRevById":1,"currRevStartedAt":1555510000949,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Description of the Staff category","approvedHtmlSanitized":"Description of the Staff category","approvedAt":1555510000949,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":4,"pageId":"2","nr":1,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510000949,"createdById":1,"currRevById":1,"currRevStartedAt":1555510000949,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Private category for staff discussions.","approvedHtmlSanitized":"<p>Private category for staff discussions.</p>\n","approvedAt":1555510000949,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":5,"pageId":"3","nr":0,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001011,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001011,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Description of the General category","approvedHtmlSanitized":"Description of the General category","approvedAt":1555510001011,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":6,"pageId":"3","nr":1,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001011,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001011,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"For topics that don't fit in other categories.","approvedHtmlSanitized":"<p>For topics that don't fit in other categories.</p>\n","approvedAt":1555510001011,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":7,"pageId":"4","nr":0,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001047,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001047,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Description of the Sample Topics category","approvedHtmlSanitized":"Description of the Sample Topics category","approvedAt":1555510001047,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":8,"pageId":"4","nr":1,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001047,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001047,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Sample topics of different types, okay to delete.","approvedHtmlSanitized":"<p>Sample topics of different types, okay to delete.</p>\n","approvedAt":1555510001047,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":9,"pageId":"5","nr":0,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001073,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001073,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Welcome to this community","approvedHtmlSanitized":"Welcome to this community","approvedAt":1555510001073,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":10,"pageId":"5","nr":1,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001073,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001073,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"\n[ Edit this to clarify what this community is about. This first paragraph\nis shown to everyone, on the forum homepage. ]\n\nHere, below the first paragraph, add details like:\n- Who is this community for?\n- What can they do or find here?\n- Link to additional info, for example, any FAQ, or main website of yours.\n\nTo edit this, click the <b class=\"icon-edit\"></b> icon below.\n","approvedHtmlSanitized":"\n<p>[ Edit this to clarify what this community is about. This first paragraph is shown to everyone, on the forum homepage. ]</p>\n<p>Here, below the first paragraph, add details like:</p>\n<ol><li>Who is this community for?</li><li>What can they do or find here?</li><li>Link to additional info, for example, any FAQ, or main website of yours.</li></ol>\n<p>To edit this, click the <b class=\"icon-edit\"></b> icon below.</p>\n        ","approvedAt":1555510001073,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":11,"pageId":"6","nr":0,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001219,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001219,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Sample discussion","approvedHtmlSanitized":"Sample discussion","approvedAt":1555510001219,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":12,"pageId":"6","nr":1,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001219,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001219,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"This is an open ended discussion. Good comments rise to the top, and people can click Disagree to show that they disagree about something.","approvedHtmlSanitized":"<p>This is an open ended discussion. Good comments rise to the top, and people can click Disagree to show that they disagree about something.</p>","approvedAt":1555510001219,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":13,"pageId":"6","nr":2,"parentNr":1,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001240,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001240,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.","approvedHtmlSanitized":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>","approvedAt":1555510001240,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":14,"pageId":"6","nr":3,"parentNr":2,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001311,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001311,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua","approvedHtmlSanitized":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p>","approvedAt":1555510001311,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":15,"pageId":"6","nr":4,"parentNr":3,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001331,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001331,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua","approvedHtmlSanitized":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p>","approvedAt":1555510001331,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":16,"pageId":"7","nr":0,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001350,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001350,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Sample idea","approvedHtmlSanitized":"Sample idea","approvedAt":1555510001350,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":17,"pageId":"7","nr":1,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001350,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001350,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"\nThis is a sample idea. Click the idea icon to the left of the title (i.e. <span class=\"icon-idea\"></span>) to change status from New Idea, to Planned-to-do, to Doing-now, to Done.\n\nIn the topic list, everyone sees the status of the idea at a glance — the status icon is shown to the left (e.g. <span class=\"icon-idea\"></span> or <span class=\"icon-check\"></span>).</div>\n\n(To delete this example topic, click Tools at the top, and then click Delete.)\n","approvedHtmlSanitized":"\n<p>This is a sample idea. Click the idea icon to the left of the title (i.e. <span class=\"icon-idea\"></span>) to change status from New Idea, to Planned-to-do, to Doing-now, to Done.</p>\n<p>In the topic list, everyone sees the status of the idea at a glance — the status icon is shown to the left (e.g. <span class=\"icon-idea\"></span> or <span class=\"icon-check\"></span>).</div></p>\n<p>(To delete this example topic, click Tools at the top, and then click Delete.)</p>\n        ","approvedAt":1555510001350,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":18,"pageId":"7","nr":2,"parentNr":1,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001383,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001383,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Sample reply, discussing if the idea is a good idea.","approvedHtmlSanitized":"<p>Sample reply, discussing if the idea is a good idea.</p>","approvedAt":1555510001383,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":19,"pageId":"7","nr":3,"parentNr":2,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001397,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001397,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"More thoughts about the idea.","approvedHtmlSanitized":"<p>More thoughts about the idea.</p>","approvedAt":1555510001397,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":20,"pageId":"7","nr":4,"parentNr":3,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001410,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001410,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"These Discussion section replies are always threaded. Whilst the Progress section replies below, are flat.","approvedHtmlSanitized":"<p>These Discussion section replies are always threaded. Whilst the Progress section replies below, are flat.</p>","approvedAt":1555510001410,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":21,"pageId":"7","nr":5,"parentNr":1,"multireplyPostNrs":[],"postType":4,"createdAt":1555510001422,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001422,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Here, in the Progress section, you can step by step update others, about how you're making progress with actually implementing the idea.","approvedHtmlSanitized":"<p>Here, in the Progress section, you can step by step update others, about how you're making progress with actually implementing the idea.</p>","approvedAt":1555510001422,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":22,"pageId":"7","nr":6,"parentNr":1,"multireplyPostNrs":[],"postType":4,"createdAt":1555510001436,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001436,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Now we have: ..., and next we will: ... (just some sample text, this).","approvedHtmlSanitized":"<p>Now we have: ..., and next we will: ... (just some sample text, this).</p>","approvedAt":1555510001436,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":23,"pageId":"8","nr":0,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001449,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001449,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Sample question","approvedHtmlSanitized":"Sample question","approvedAt":1555510001449,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":24,"pageId":"8","nr":1,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001449,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001449,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"\nThis is an sample question. Click \"Solution\" below to accept an answer. In the topic list, everyone sees that this is a question, and if it's new (the <span class=\"icon-help-circled\"></span> icon), or if it's been answered ( the <span class=\"icon-ok-circled-empty\"></span> icon).\n\nIn the topic list: To see all unanswered questions, click \"All topic\" and then choose \"Only waiting\", look:\n\n<img class=\"no-lightbox\" src=\"/-/media/tips/how-click-show-waiting-680px.jpg\">\n\n(To delete this example topic, click Tools at the top, and then click Delete.)\n","approvedHtmlSanitized":"\n<p>This is an sample question. Click \"Solution\" below to accept an answer. In the topic list, everyone sees that this is a question, and if it's new (the <span class=\"icon-help-circled\"></span> icon), or if it's been answered ( the <span class=\"icon-ok-circled-empty\"></span> icon).</p>\n<p>In the topic list: To see all unanswered questions, click \"All topic\" and then choose \"Only waiting\", look:</p>\n<img class=\"no-lightbox\" src=\"/-/media/tips/how-click-show-waiting-680px.jpg\">\n<p>(To delete this example topic, click Tools at the top, and then click Delete.)</p>\n        ","approvedAt":1555510001449,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":25,"pageId":"8","nr":2,"parentNr":1,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001523,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001523,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Sample answer. The one who posted the question, and the staff (you?), can click Solution below, to accept this answer and mark the question as solved.","approvedHtmlSanitized":"<p>Sample answer. The one who posted the question, and the staff (you?), can click Solution below, to accept this answer and mark the question as solved.</p>","approvedAt":1555510001523,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":26,"pageId":"8","nr":3,"parentNr":2,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001540,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001540,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Here, someone has posted a comment, to start discussing the sample answers just above.","approvedHtmlSanitized":"<p>Here, someone has posted a comment, to start discussing the sample answers just above.</p>","approvedAt":1555510001540,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":27,"pageId":"8","nr":4,"parentNr":1,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001552,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001552,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Another sample answer. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat","approvedHtmlSanitized":"<p>Another sample answer. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat</p>","approvedAt":1555510001552,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":28,"pageId":"9","nr":0,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001567,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001567,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"Staff chat","approvedHtmlSanitized":"Staff chat","approvedAt":1555510001567,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":29,"pageId":"9","nr":1,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510001567,"createdById":1,"currRevById":1,"currRevStartedAt":1555510001567,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"This is a private chat for staff.","approvedHtmlSanitized":"<p>This is a private chat for staff.</p>","approvedAt":1555510001567,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":2,"pageId":"1","nr":1,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1555510000132,"createdById":100,"currRevById":100,"currRevStartedAt":1555510000132,"currRevLastEditedAt":1555510307568,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":1555510307568,"lastApprovedEditById":100,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"This is a testing server where I try to migrate Talkyard from Nashorn to Graal.js.","approvedHtmlSanitized":"<p>This is a testing server where I try to migrate Talkyard from Nashorn to Graal.js.</p>\n","approvedAt":1555510307568,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":30,"pageId":"9","nr":2,"parentNr":null,"multireplyPostNrs":[],"postType":3,"createdAt":1555510377307,"createdById":100,"currRevById":100,"currRevStartedAt":1555510377307,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":"I am chatting now.","approvedHtmlSanitized":"<p>I am chatting now.</p>\n","approvedAt":1555510377307,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":31,"pageId":"5","nr":2,"parentNr":1,"multireplyPostNrs":[],"postType":31,"createdAt":1555510416010,"createdById":100,"currRevById":100,"currRevStartedAt":1555510416010,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":" closed this topic","approvedHtmlSanitized":" closed this topic","approvedAt":1555510416010,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":32,"pageId":"5","nr":3,"parentNr":1,"multireplyPostNrs":[],"postType":31,"createdAt":1555510420297,"createdById":100,"currRevById":100,"currRevStartedAt":1555510420297,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":" reopened this topic","approvedHtmlSanitized":" reopened this topic","approvedAt":1555510420297,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":33,"pageId":"7","nr":7,"parentNr":1,"multireplyPostNrs":[],"postType":31,"createdAt":1555510586197,"createdById":100,"currRevById":100,"currRevStartedAt":1555510586197,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":null,"approvedSource":" marked this topic as Planned","approvedHtmlSanitized":" marked this topic as Planned","approvedAt":1555510586197,"approvedById":1,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":34,"pageId":"6","nr":5,"parentNr":1,"multireplyPostNrs":[],"postType":4,"createdAt":1557147835487,"createdById":100,"currRevById":100,"currRevStartedAt":1557147835487,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"Adding more stuff here.","approvedHtmlSanitized":"<p>Adding more stuff here.</p>\n","approvedAt":1557147835487,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":35,"pageId":"10","nr":0,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1557151140217,"createdById":100,"currRevById":100,"currRevStartedAt":1557151140217,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"The standard Lorem Ipsum passage, used since the 1500s","approvedHtmlSanitized":"The standard Lorem Ipsum passage, used since the 1500s","approvedAt":1557151140217,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":36,"pageId":"10","nr":1,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1557151140217,"createdById":100,"currRevById":100,"currRevStartedAt":1557151140217,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"","approvedHtmlSanitized":"<p>&quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&quot;</p>\n","approvedAt":1557151140217,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":37,"pageId":"10","nr":2,"parentNr":1,"multireplyPostNrs":[],"postType":4,"createdAt":1557151152294,"createdById":100,"currRevById":100,"currRevStartedAt":1557151152294,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"\"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\"","approvedHtmlSanitized":"<p>&quot;Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?&quot;</p>\n","approvedAt":1557151152294,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":38,"pageId":"10","nr":3,"parentNr":2,"multireplyPostNrs":[],"postType":4,"createdAt":1557151175749,"createdById":100,"currRevById":100,"currRevStartedAt":1557151175749,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"1914 translation by H. Rackham\n\n\"But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?\"","approvedHtmlSanitized":"<p>1914 translation by H. Rackham</p>\n<p>&quot;But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?&quot;</p>\n","approvedAt":1557151175749,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":39,"pageId":"10","nr":4,"parentNr":1,"multireplyPostNrs":[],"postType":4,"createdAt":1557151184968,"createdById":100,"currRevById":100,"currRevStartedAt":1557151184968,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"Section 1.10.33 of \"de Finibus Bonorum et Malorum\", written by Cicero in 45 BC\n\n\"At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.\"","approvedHtmlSanitized":"<p>Section 1.10.33 of &quot;de Finibus Bonorum et Malorum&quot;, written by Cicero in 45 BC</p>\n<p>&quot;At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.&quot;</p>\n","approvedAt":1557151184968,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":40,"pageId":"10","nr":5,"parentNr":4,"multireplyPostNrs":[],"postType":4,"createdAt":1557151204416,"createdById":100,"currRevById":100,"currRevStartedAt":1557151204416,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"1914 translation by H. Rackham\n\n\"On the other hand, we denounce with righteous indignation and dislike men who are so beguiled and demoralized by the charms of pleasure of the moment, so blinded by desire, that they cannot foresee the pain and trouble that are bound to ensue; and equal blame belongs to those who fail in their duty through weakness of will, which is the same as saying through shrinking from toil and pain. These cases are perfectly simple and easy to distinguish. In a free hour, when our power of choice is untrammelled and when nothing prevents our being able to do what we like best, every pleasure is to be welcomed and every pain avoided. But in certain circumstances and owing to the claims of duty or the obligations of business it will frequently occur that pleasures have to be repudiated and annoyances accepted. The wise man therefore always holds in these matters to this principle of selection: he rejects pleasures to secure other greater pleasures, or else he endures pains to avoid worse pains.\"","approvedHtmlSanitized":"<p>1914 translation by H. Rackham</p>\n<p>&quot;On the other hand, we denounce with righteous indignation and dislike men who are so beguiled and demoralized by the charms of pleasure of the moment, so blinded by desire, that they cannot foresee the pain and trouble that are bound to ensue; and equal blame belongs to those who fail in their duty through weakness of will, which is the same as saying through shrinking from toil and pain. These cases are perfectly simple and easy to distinguish. In a free hour, when our power of choice is untrammelled and when nothing prevents our being able to do what we like best, every pleasure is to be welcomed and every pain avoided. But in certain circumstances and owing to the claims of duty or the obligations of business it will frequently occur that pleasures have to be repudiated and annoyances accepted. The wise man therefore always holds in these matters to this principle of selection: he rejects pleasures to secure other greater pleasures, or else he endures pains to avoid worse pains.&quot;</p>\n","approvedAt":1557151204416,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":41,"pageId":"10","nr":6,"parentNr":5,"multireplyPostNrs":[],"postType":4,"createdAt":1557151221374,"createdById":100,"currRevById":100,"currRevStartedAt":1557151221374,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"","approvedHtmlSanitized":"<p>&quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&quot;</p>\n","approvedAt":1557151221374,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":42,"pageId":"10","nr":7,"parentNr":1,"multireplyPostNrs":[],"postType":1,"createdAt":1557151254244,"createdById":100,"currRevById":100,"currRevStartedAt":1557151254244,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"\"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\"","approvedHtmlSanitized":"<p>&quot;Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?&quot;</p>\n","approvedAt":1557151254244,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":43,"pageId":"10","nr":8,"parentNr":7,"multireplyPostNrs":[],"postType":1,"createdAt":1557151262302,"createdById":100,"currRevById":100,"currRevStartedAt":1557151262302,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"1914 translation by H. Rackham\n\n\"But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?\"","approvedHtmlSanitized":"<p>1914 translation by H. Rackham</p>\n<p>&quot;But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?&quot;</p>\n","approvedAt":1557151262302,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":46,"pageId":"10","nr":11,"parentNr":6,"multireplyPostNrs":[],"postType":4,"createdAt":1557151286430,"createdById":100,"currRevById":100,"currRevStartedAt":1557151286430,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"Section 1.10.33 of \"de Finibus Bonorum et Malorum\", written by Cicero in 45 BC\n\n\"At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.\"","approvedHtmlSanitized":"<p>Section 1.10.33 of &quot;de Finibus Bonorum et Malorum&quot;, written by Cicero in 45 BC</p>\n<p>&quot;At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.&quot;</p>\n","approvedAt":1557151286430,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":47,"pageId":"10","nr":12,"parentNr":8,"multireplyPostNrs":[],"postType":1,"createdAt":1557151388288,"createdById":100,"currRevById":100,"currRevStartedAt":1557151388288,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"An h1 header\n============\n\nParagraphs are separated by a blank line.\n\n2nd paragraph. *Italic*, **bold**, and `monospace`. Itemized lists\nlook like:\n\n  * this one\n  * that one\n  * the other one\n\nNote that --- not considering the asterisk --- the actual text\ncontent starts at 4-columns in.\n\n> Block quotes are\n> written like so.\n>\n> They can span multiple paragraphs,\n> if you like.\n\nUse 3 dashes for an em-dash. Use 2 dashes for ranges (ex., \"it's all\nin chapters 12--14\"). Three dots ... will be converted to an ellipsis.\nUnicode is supported. ☺","approvedHtmlSanitized":"<h1>An h1 header</h1>\n<p>Paragraphs are separated by a blank line.</p>\n<p>2nd paragraph. <em>Italic</em>, <strong>bold</strong>, and <code>monospace</code>. Itemized lists<br>\nlook like:</p>\n<ul>\n<li>this one</li>\n<li>that one</li>\n<li>the other one</li>\n</ul>\n<p>Note that --- not considering the asterisk --- the actual text<br>\ncontent starts at 4-columns in.</p>\n<blockquote>\n<p>Block quotes are<br>\nwritten like so.</p>\n<p>They can span multiple paragraphs,<br>\nif you like.</p>\n</blockquote>\n<p>Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., &quot;it's all<br>\nin chapters 12--14&quot;). Three dots ... will be converted to an ellipsis.<br>\nUnicode is supported. ☺</p>\n","approvedAt":1557151388288,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":48,"pageId":"10","nr":13,"parentNr":8,"multireplyPostNrs":[],"postType":1,"createdAt":1557151401440,"createdById":100,"currRevById":100,"currRevStartedAt":1557151401440,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"An h2 header\n------------\n\nHere's a numbered list:\n\n 1. first item\n 2. second item\n 3. third item\n\nNote again how the actual text starts at 4 columns in (4 characters\nfrom the left side). Here's a code sample:\n\n    # Let me re-iterate ...\n    for i in 1 .. 10 { do-something(i) }\n\nAs you probably guessed, indented 4 spaces. By the way, instead of\nindenting the block, you can use delimited blocks, if you like:\n\n~~~\ndefine foobar() {\n    print \"Welcome to flavor country!\";\n}\n~~~","approvedHtmlSanitized":"<h2>An h2 header</h2>\n<p>Here's a numbered list:</p>\n<ol>\n<li>first item</li>\n<li>second item</li>\n<li>third item</li>\n</ol>\n<p>Note again how the actual text starts at 4 columns in (4 characters<br>\nfrom the left side). Here's a code sample:</p>\n<pre><code># Let me re-iterate ...\nfor i in 1 .. 10 { do-something(i) }\n</code></pre>\n<p>As you probably guessed, indented 4 spaces. By the way, instead of<br>\nindenting the block, you can use delimited blocks, if you like:</p>\n<pre><code>define foobar() {\n    print &quot;Welcome to flavor country!&quot;;\n}\n</code></pre>\n","approvedAt":1557151401440,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":44,"pageId":"10","nr":9,"parentNr":8,"multireplyPostNrs":[],"postType":1,"createdAt":1557151267298,"createdById":100,"currRevById":100,"currRevStartedAt":1557151267298,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"1914 translation by H. Rackham\n\n\"But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?\"","approvedHtmlSanitized":"<p>1914 translation by H. Rackham</p>\n<p>&quot;But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?&quot;</p>\n","approvedAt":1557151267298,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":45,"pageId":"10","nr":10,"parentNr":4,"multireplyPostNrs":[],"postType":4,"createdAt":1557151275823,"createdById":100,"currRevById":100,"currRevStartedAt":1557151275823,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"1914 translation by H. Rackham\n\n\"But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?\"","approvedHtmlSanitized":"<p>1914 translation by H. Rackham</p>\n<p>&quot;But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?&quot;</p>\n","approvedAt":1557151275823,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":49,"pageId":"10","nr":14,"parentNr":5,"multireplyPostNrs":[],"postType":4,"createdAt":1557151419021,"createdById":100,"currRevById":100,"currRevStartedAt":1557151419021,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"### An h3 header ###\n\nNow a nested list:\n\n 1. First, get these ingredients:\n\n      * carrots\n      * celery\n      * lentils\n\n 2. Boil some water.\n\n 3. Dump everything in the pot and follow\n    this algorithm:\n\n        find wooden spoon\n        uncover pot\n        stir\n        cover pot\n        balance wooden spoon precariously on pot handle\n        wait 10 minutes\n        goto first step (or shut off burner when done)\n\n    Do not bump wooden spoon or it will fall.\n\nNotice again how text always lines up on 4-space indents (including\nthat last line which continues item 3 above).\n\nHere's a link to [a website](http://foo.bar), to a [local\ndoc](local-doc.html), and to a [section heading in the current\ndoc](#an-h2-header). Here's a footnote [^1].\n\n[^1]: Some footnote text.","approvedHtmlSanitized":"<h3>An h3 header</h3>\n<p>Now a nested list:</p>\n<ol>\n<li>\n<p>First, get these ingredients:</p>\n<ul>\n<li>carrots</li>\n<li>celery</li>\n<li>lentils</li>\n</ul>\n</li>\n<li>\n<p>Boil some water.</p>\n</li>\n<li>\n<p>Dump everything in the pot and follow<br>\nthis algorithm:</p>\n<pre><code>find wooden spoon\nuncover pot\nstir\ncover pot\nbalance wooden spoon precariously on pot handle\nwait 10 minutes\ngoto first step (or shut off burner when done)\n</code></pre>\n<p>Do not bump wooden spoon or it will fall.</p>\n</li>\n</ol>\n<p>Notice again how text always lines up on 4-space indents (including<br>\nthat last line which continues item 3 above).</p>\n<p>Here's a link to <a href=\"http://foo.bar\" rel=\"nofollow\">a website</a>, to a <a href=\"local-doc.html\" rel=\"nofollow\">local<br>\ndoc</a>, and to a <a href=\"#an-h2-header\" rel=\"nofollow\">section heading in the current<br>\ndoc</a>. Here's a footnote [^1].</p>\n<p>[^1]: Some footnote text.</p>\n","approvedAt":1557151419021,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":50,"pageId":"10","nr":15,"parentNr":4,"multireplyPostNrs":[],"postType":4,"createdAt":1557151435221,"createdById":100,"currRevById":100,"currRevStartedAt":1557151435221,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"Tables can look like this:\n\nName           Size  Material      Color\n------------- -----  ------------  ------------\nAll Business      9  leather       brown\nRoundabout       10  hemp canvas   natural\nCinderella       11  glass         transparent\n\nTable: Shoes sizes, materials, and colors.\n\n(The above is the caption for the table.) Pandoc also supports\nmulti-line tables:\n\n--------  -----------------------\nKeyword   Text\n--------  -----------------------\nred       Sunsets, apples, and\n          other red or reddish\n          things.\n\ngreen     Leaves, grass, frogs\n          and other things it's\n          not easy being.\n--------  -----------------------\n\nA horizontal rule follows.\n\n***\n\nHere's a definition list:\n\napples\n  : Good for making applesauce.\n\noranges\n  : Citrus!\n\ntomatoes\n  : There's no \"e\" in tomatoe.\n\nAgain, text is indented 4 spaces. (Put a blank line between each\nterm and  its definition to spread things out more.)\n\nHere's a \"line block\" (note how whitespace is honored):\n\n| Line one\n|   Line too\n| Line tree\n\nand images can be specified like so:\n\n![example image](example-image.jpg \"An exemplary image\")\n\nInline math equation: $\\omega = d\\phi / dt$. Display\nmath should get its own line like so:\n\n$$I = \\int \\rho R^{2} dV$$\n\nAnd note that you can backslash-escape any punctuation characters\nwhich you wish to be displayed literally, ex.: \\`foo\\`, \\*bar\\*, etc.","approvedHtmlSanitized":"<p>Tables can look like this:</p>\n<p>Name           Size  Material      Color</p>\n<hr>\n<p>All Business      9  leather       brown<br>\nRoundabout       10  hemp canvas   natural<br>\nCinderella       11  glass         transparent</p>\n<p>Table: Shoes sizes, materials, and colors.</p>\n<p>(The above is the caption for the table.) Pandoc also supports<br>\nmulti-line tables:</p>\n<hr>\n<p>Keyword   Text</p>\n<hr>\n<p>red       Sunsets, apples, and<br>\nother red or reddish<br>\nthings.</p>\n<p>green     Leaves, grass, frogs<br>\nand other things it's<br>\nnot easy being.</p>\n<hr>\n<p>A horizontal rule follows.</p>\n<hr>\n<p>Here's a definition list:</p>\n<p>apples<br>\n: Good for making applesauce.</p>\n<p>oranges<br>\n: Citrus!</p>\n<p>tomatoes<br>\n: There's no &quot;e&quot; in tomatoe.</p>\n<p>Again, text is indented 4 spaces. (Put a blank line between each<br>\nterm and  its definition to spread things out more.)</p>\n<p>Here's a &quot;line block&quot; (note how whitespace is honored):</p>\n<p>| Line one<br>\n|   Line too<br>\n| Line tree</p>\n<p>and images can be specified like so:</p>\n<p><img src=\"example-image.jpg\"></p>\n<p>Inline math equation: $\\omega = d\\phi / dt$. Display<br>\nmath should get its own line like so:</p>\n<p>$$I = \\int \\rho R^{2} dV$$</p>\n<p>And note that you can backslash-escape any punctuation characters<br>\nwhich you wish to be displayed literally, ex.: `foo`, *bar*, etc.</p>\n","approvedAt":1557151435221,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":51,"pageId":"10","nr":16,"parentNr":11,"multireplyPostNrs":[],"postType":4,"createdAt":1557151460376,"createdById":100,"currRevById":100,"currRevStartedAt":1557151460376,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"<!--\nOld GitHub one-line description:\n- Discussion forums with Question & Answers and Team Chat features. Plus embedded comments for your blog.\n\nCurrent:\n- Open source StackOverflow, Slack, Discourse, Reddit, Disqus hybrid — for your online community.\n\nOther alternatives?:\n- Community software, brings together the best from StackOverflow + Slack + Reddit + Discourse.\n- Online community software. Find ideas and answers together, and pick the right things\nto do, to change society, or grow your startup.\n-->\n\n\nTalkyard\n=============================\n\nDiscussion software, a place for questions and answers, ideas and feedback.\n\n<!--\nCreate a place to talk,\nwhere your audience find answers to their questions, and discuss ideas.<br>\nPlace it at `talkyard.Your-Website.org`.\n-->\n\n - **Get unstuck** by finding answers in Question-Answers topics, like at StackOverflow.\n - **Discuss ideas** in open-ended topics, like at Reddit and Hacker News.\n - **Solve problems** step by step, in traditional flat forum topics.\n - **Collaborate** in real time chat, like Slack.\n - **Talk with your blog visitors** in embedded comments, like Disqus.\n\nThis is for development;\n**installation instructions** are elsewhere: https://github.com/debiki/talkyard-prod-one\n\n<!--\nFor your students / volunteers / colleagues / customers / donors /\nopen source users / city / community. -->\n\n\n<!--\n - **Improve your API docs**, by embedding comments at the end of each docs page, to make it easy for people to ask and tell you if something is unclear.\n   -->\n\n<!-- (The staff configure the topic type just once, in a per category setting.) -->\n\n[**Support forum here**](https://www.talkyard.io/forum/latest/support), at Talkyard<i></i>.io — and report bugs there too.\n\n<!--\nUse Talkyard for your workplace, as a self building FAQ. Or for customer support.\nOr for your teachers and students, to help each other. Or your non-profit volunteers.\nOr an open source project and its users.\nWe'd like to build a tool tha *people who change the world or their neighborhood* can use\nto solve problems and pick the right things to do. That's why we have\nfind-solutions Question-Answers topics, and HackerNews & Reddit type topics\nwhere good ideas rise to the top.<! - — And you can use this tool,\nfor your workplace and your colleagues & customers,\nor your non-profit and its volunteers,\nor an open source project and its users,\nor a school and its students, etc.  -->\n\n<!--\nTalkyard (formerly EffectiveDiscussions) is discussion forum software, with chat and question-answers features.\nAnd embedded comments for static websites / blogs.\nInspired by Discourse, Slack, StackOverflow, Reddit and Hacker News, Disqus. -->\n\nScreenshots a bit below.<br>\nSee it live: https://www.talkyard.io/forum/latest<br>\nRead about it, and demo forums: https://www.talkyard.io\n\nYou'll find **Docker image** build files in: <code>./images/<i>image-name</i>/</code>\n\nThis is beta software; there might be bugs.\n\n\n### Screenshots\n\n**Topic list:**\n\n<!--\n![topic-list-borders](https://user-images.githubusercontent.com/7477359/44306130-a3930080-a388-11e8-9cbc-e569f5ddb7a1.jpg)\n the old demo forum looks better? so use instead.  -->\n\n![ed-demo-forum-index](https://cloud.githubusercontent.com/assets/7477359/19650764/bb3a1450-9a0a-11e6-884d-d23c93476db3.jpg)\n\n<br>\n\n**Question-Answers:**\n\n\n![how-work-from-home-vpn-broken-borders](https://user-images.githubusercontent.com/7477359/44306101-0041eb80-a388-11e8-92e8-b8d417c47139.jpg)\n\n<br>\n\n**Chat:**\n\nCurrently, Talkyard is a mobile friendly web app.\nWithin half a year or a year (today is August 2018),\nthe plan is that there'll be a white labelled mobile app.\nMeaning, people will be able to install your community, on their mobile phones,\nas a separate app with your custom icon.\nPush notifications for Android\n(however, initially not for iPhone — iPhone currently cannot do PWA mobile app push notifications).\n\n![ed-e2e-chat-owen-maria](https://cloud.githubusercontent.com/assets/7477359/19674424/608c49aa-9a88-11e6-8ccd-c2e7ceebd0c2.jpg)\n\n<br>\n<!--\n![Q&A about how to wake up on time](https://user-images.githubusercontent.com/7477359/39368115-0549fad0-4a39-11e8-9bba-703d595d2b96.jpg)\n-->\n<!--\nHacker News / Reddit style discussion:\n![ed-discussion-semantics-of-upvote-2013](https://cloud.githubusercontent.com/assets/7477359/19650769/bea906aa-9a0a-11e6-8ea2-9ad771981f46.jpg)\n-->\n\n**Admin-getting-started guide:**\n\n![ed-admin-intro-guide](https://cloud.githubusercontent.com/assets/7477359/19679591/99a12098-9aa2-11e6-8b65-705c2548cbea.jpg)\n\n<br>\n\n**Users online:**\n\n![ed-online-users](https://cloud.githubusercontent.com/assets/7477359/19680424/f0353f86-9aa5-11e6-84d9-94d46f228b93.jpg)\n\n<br>\n\n\nContributing\n-----------------------------\n\nWant to contribute? Feel free to say hello in our community: <https://www.talkyard.io/forum/>.\nGood for you if you ask the people there what is currently being worked on, so you won't\naccidentally re-implement something that's almost done already — people\nmight be working in their own work-in-progress topic branches that you\ndon't know about.\n\nHere's how to translate to a new language: [i18n-README](translations/i18n-README.md) (step 1 and 2 only).\n\nYou need to read and agree to our [Contributor License Agreement](./docs/CLA-v2.txt). You do that by\nreading it (please do — there's a human friendly intro) and appending a single line\nparagraph with your real name (no pseudonyms) and the following text, to all your commit messages:\n\n> I, Your Full Name \\<your@<i></i>email.address\\>, agree to the Contributor License Agreement, docs/CLA-v2.txt.\n\nPlease squash your commits to just one (unless you're doing something complicated that's easier\nto review in separate commits).\n\n\n\n\nGetting Started\n-----------------------------\n\nThis is for **development**. To install and *use* the software, instead go here:\n[talkyard-prod-one](https://github.com/debiki/talkyard-prod-one)\n\n\n#### Before you start\n\nYou need about 6 GB RAM for the development environment (whereas the production environment needs about 2 GB).\nAnd an internet connection — you'll download perhaps 1 GB Docker images and other files.\n\nInstall Docker and Docker-Compose, see: https://docs.docker.com/compose/install/.\nOn Linux, you can:\n\n```\nsudo -i\ncurl -fsSL https://get.docker.com -o install-docker.sh\nsh install-docker.sh\ncurl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\ndocker-compose --version  # should print \"docker-compose version ... build ...\"\n```\n\nRead [A brief intro to Docker-Compose](docs/intro-to-docker-compose.md) — unless you know\nhow to use docker-compose already.\n\n#### The instructions\n\n\n1. Append some settings to the system config so that ElasticSearch will work:\n   (run this as one single command, not one line at a time)\n\n       sudo tee -a /etc/sysctl.conf <<EOF\n\n       ###################################################################\n       # Talkyard settings\n       #\n       # Up the max backlog queue size (num connections per port), default = 128\n       net.core.somaxconn=8192\n       # ElasticSearch requires (at least) this, default = 65530\n       # Docs: https://www.kernel.org/doc/Documentation/sysctl/vm.txt\n       vm.max_map_count=262144\n       EOF\n\n    Reload the system config:\n\n       sudo sysctl --system\n\n\n1. Clone the repository, install GNU Make (and `jq` for viewing logs), and type `make up`:\n\n       git clone https://github.com/debiki/talkyard.git talkyard\n       cd talkyard\n       apt install make jq\n       make up\n\n\n1. Wait. `make up` takes a while: Git submodules and Node.js packages will get downloaded,\n   Typescript, Stylus and Scala code gets compiled and packaged, Docker images get built. \n   You can tail the log messages, by typing `make tail`,\n   or `sudo s/d logs -f`.  (s/d means \"scripts\" and \"docker-compose\")\n\n   The following log message might take 10 - 20 minutes: (to download things)\n\n       Loading project definition from /opt/talkyard/app/project\n\n   Wait for these \"Server started\" log messages to appear:\n\n       app_1     |\n       app_1     | --- (Running the application, auto-reloading is enabled) ---\n       app_1     |\n       app_1     | [info] p.c.s.NettyServer - Listening for HTTP on /0:0:0:0:0:0:0:0:9000\n       app_1     | [info] p.c.s.NettyServer - Listening for HTTPS on /0:0:0:0:0:0:0:0:9443\n       app_1     |\n       app_1     | (Server started, use Ctrl+D to stop and go back to the console...)\n       app_1     |\n\n\n1. Point your browser to http://localhost/. This sends a request to the Docker container\n   named 'web', in which Nginx listens on port 80. Nginx sends the request to Play Framework\n   in the 'app' container, port 9000. Play Framework then starts compiling more Scala files — this\n   take a little while; the browser might show a 502 Bad Gateway error message.\n\n   Soon, when done compiling, Play Framework will start. Then this gets logged:\n\n       app_1  | [info] application - Starting... [TyMHELLO]\n       ...\n       ...\n       app_1  | [info] application - Started. [TyMSTARTED]\n\n   If you don't see these messages (maybe they scroll past too fast), you can\n   continue with the next step just below anyway — just keep reloading the browser page until\n   any \"is starting\" message in the browser window disappears.\n\n\n1. Create a forum\n\n   Reload the browser at http://localhost/. A page with a button should appear.\n   Sign up as admin with this email: `admin@example.com` (must be that email).\n   As username and password you can type `admin` and `public1234`.\n\n<!-- Not needed any longer.\n   You'll be asked to confirm your email address, by clicking a link in an email\n   that was sent to you — but in fact the email couldn't be sent, because you haven't configured\n   any email server, and `admin@example.com` isn't your address anyway.\n\n   Instead look at the log messages. (Run `sudo docker-compose logs app` if you've closed\n   the terminal with log messages.) There you'll find\n   the email — it's written to the log files, in development mode. Copy the\n   confirmation link from the `<a href=...>` and paste it in the browser's address bar.\n   -->\n\nShut down everything like so: `make dead`.\n\n\n\nEditing source code\n-----------------------------\n\nIf you edit some code and reload the page in the browser, your changes will\nappear automatically: there's a Docker container, named Gulp, with Node.js\ninstalled, which recompile Typescript and Stylus CSS. And a container,\nnamed App, which runs the Play Framework application server, and looks\nfor changes to Scala files, recompiles and reloads.\n\nIf you edit Typescript, wait five seconds before you reload the page in\nthe browser, otherwise the Typescript code might not yet have been transpiled.\n\nIf you keep editing and reloading Scala files many many times, then eventually\nPlay Framework runs out of memory. Restart it like so: `make restart`.\n\n\n\nBuilding your own images\n-----------------------------\n\nDo this: (`make` is GNU Make)\n\n```\nvi version.txt    # type a new vesion number\nvi .env           # change DOCKER_REPOSITORY to your own repository\nmake prod-images  # this runs tests and builds production images\nmake tag-and-push-latest-images tag=...  # pushes images to your repo\n```\n\nYou can type `make` to see help about the Makefile targets.\n\nAll this has been tested in Ubuntu and Mint Linux only, with Bash. If you're\non Windows, probably you'll need [Cygwin](https://www.cygwin.com)\nor [MinGW](http://www.mingw.org).\n\nTo use the images in your own Docker-Compose installation,\nhave a look here: https://github.com/debiki/talkyard-prod-swarm\n\n\n\nAbout the images\n-----------------------------\n\nHere you can read about the various images in the Talkyard stack:\n[about-the-talkyard-images.md](./docs/about-the-talkyard-images.md).\n\n\n\nTroubleshooting\n-----------------------------\n\nSee [tips.md](./docs/tips.md).\n\n\n\nTests\n-----------------------------\n\n#### End-to-end tests\n\nThe end-to-end tests are written in TypeScript and uses Selenium and Webdriver.io.\nSee the [end-to-end tests readme](./docs/e2e-tests-readme.md).\nAnd, if you want to test in a browser other than Chrome, see [Making *.localhost addresses work](./docs/wildcard-dot-localhost.md).\n\n\n#### Security tests\n\nThe security tests are written in TypeScript and use Tape = test-anything-protocol for Node.js.\nSee the [security tests readme](./docs/security-tests-readme.md).\n\n\n#### Unit tests\n\nStop everything: `sudo docker-compose down` and then: `s/cli` then type `test` + hit Enter.\n\n\n#### Performance tests\n\nInstall Scala SBT, see http://www.scala-sbt.org/download.html. On Linux:\n\n```\necho \"deb https://dl.bintray.com/sbt/debian /\" | sudo tee -a /etc/apt/sources.list.d/sbt.list\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823\nsudo apt-get update\nsudo apt-get install sbt\n```\n\nAppend to `/etc/security/limits.conf` ... hmm but now with Docker-Compose, which container?\n\n    your_login_name hard nofile 65535\n    your_login_name soft nofile 65535\n\nConfigure very high max-requests-per-ip-per-second etc Nginx limits — otherwise during the performance\ntest Nginx will start to rate limit stuff and reply 503 Service Not Available:\n\n```\nsudo docker-compose  -f docker-compose.yml  -f docker-compose-no-limits.yml  up -d\n```\n\n\nTechnology\n-----------------------------\n\n- Client: React.js, TypeScript, Webdriver.io.\n- Server: Scala and Play Framework. Nginx, Nchan, some Lua. React.js in Java's Nashorn Javascript engine.\n- Databases: PostgreSQL, Redis, ElasticSearch.\n\n\n\nDirectories\n-----------------------------\n\nThis project looks like so:\n\n\n    server/\n     |\n     +-Makefile             <-- You can build Talkyard, using GNU Make\n     |                          (work in progress, as of Nov 2018)\n     |\n     +-docker-compose.yml   <-- Tells Docker how to run Talkyard\n     |\n     +-client/         <-- Javascript, CSS, React.js components\n     | +-app/          <-- Client side code\n     | +-server/       <-- React.js components rendered server side,\n     | :                   usually softlinks to ../app/\n     | :\n     |\n     +-app/            <-- Scala code — a Play Framework 2 application\n     |\n     +-tests/\n     | +-app/          <-- Unit tests and functional tests, for the app server\n     | +-e2e/          <-- End-to-end tests\n     | +-security/     <-- Security tests\n     |\n     +-modules/\n     | +-ty-dao-rdb/        <-- A database access object (DAO), for PostgreSQL\n     | +-ed-core/           <-- Code shared by the DAO and by the ./app/ code\n     | +-ed-prod-one-test/  <-- A production installation, for automatic tests\n     | |\n     | ...Third party modules\n     |\n     +-to-talkyard/    <-- For converting e.g. phpBB or Disqus export files\n     |                     to Talkyard's JSON format, so they can be imported\n     |                     into Talkyard. This is a stand-alone Node.js app.\n     |\n     +-images/\n     | +-web/          <-- For building the 'web' Docker image, runs Nginx\n     | | +-Dockerfile\n     | | +-assets/     <-- Typescript and Stylus compiled to JS and CSS\n     | | +-modules/    <-- Nginx modules\n     | |   +-nchan/    <-- WebSocket and PubSub for Nginx (a Git submodule)\n     | |   +-luajit/   <-- Lua\n     | |   ...\n     | |\n     | +-gulp/         <-- An image that runs Node.js and bundles JS and CSS\n     | |\n     | +-...           <-- More images, see: docs/about-the-talkyard-images.md\n     |\n     +-volumes/\n     | +-rdb-data      <-- Mounted as a volume in the Postgres container\n     | +-gulp-home/    <-- Gulp container home-dir = disk cache\n     | +-uploads       <-- Mounted read-write in the Play container, but\n     | |                 read-only in Nginx (to serve static files)\n     | ...\n     |\n     +-s/         <-- Utility scripts (typing \"scripts/\" is so long)\n     |\n     +-conf/      <-- App server (Play Framework) config files\n     | +-my.conf  <-- You can add your localhost config here. Ignored by Git.\n\n\n\nNaming style, tags and a new word\n-----------------------------\n\n### CSS classes and ids\n\n*Example*: `s_P_By_FN-Gst`. Here, `s_` is a prefix used for all classes, and\nit means \"some\". For ids we use `t_` instead, means \"the\". `P` means Post. `By` means\nwho-was-it-written-By. `FN` means Full Name. `Gst` means Guest.\n\nSo, this is BEM (Block Element Modifier) with a few tweaks: Blocks/elements are separated with\nonly one underscore, and modifiers with only one dash. Blocks, elems and modifiers always\nstart with uppercase — because then it's easy to tell if we're dealing with an _abbreviation_\nor not. For example, `FN` (full name) is an abbreviation. But `By` is not (since it continues with\nlowercase letters).\n\nAnother example: `s_Dfs_Df_Ttl` — this means the title (Ttl), of a draft (Df),\nin a list of drafts (Dfs).  You'll find abbreviations like Ttl and Df, in\n[bem-blocks.txt](./docs/bem-blocks.txt).\n\n<!-- I think these short names actually improve readability, once you know what they means.\nSeeing `s_Dfs_Df_Ttl` in the source code — that's brief and quick to read, doesn't steal\nthe attention from other things nearby you're probably more inteested in.\n(too chatty, skip this)  -->\n\nFor stuff with otherwise no class or id, and that should be clicked in end-to-end tests,\nwe use classes only, and the prefix `e_` (instead of `s_` or `t_`).\n\n\n### Single and double quotes\n\nIn Typescript (and any Javascript), use single quotes for strings the computer cares about,\nlike CSS classes or ids, e.g. `className: 's_P'` or `reactRenderMethod = 'hydrate'`,\nor React component display names.\nFor texts that humans read, instead use double quotes, like: `Button({ ...}, \"Undo\")`.\nWhen doing this, you can be fairly certain that if you edit a single quote string,\nwithout knowing what you're doing, something will break.\nWhilst if you edit a double quoted string and fix e.g. a spelling errors: the computer\nwon't care, but humans like it.\n\n\n### Tag the code\n\nSome parts of a software system, knows how other parts of the software system works,\nsometimes in not-obvious ways. Make such otherwise hidden duplicated knowledge visible,\nby tagging the code with tags like: `[1ABCDE2]`.\nExample: `// Also done here: [4JKAM7] when deleting pages.`.\nOr there's a 3rd partly lib bug workaround in one source code file, for a problem that happens\nin a different file, and an end-to-end test that got affected, example: `[5QKBRQ]`.\nTag those three places with the same tag.\nJust type a number, random uppercase letters, and another number, to create a tag.\nAnd copy-paste it to where the related code is.\n\n\n### Message codes and magic underscores\n\nLog messages, and plain text messages sent back to the browser, start with `TyM` if it's\nan info message, and `TyE` if it's an error. Like, `\"Started. [TyMSTARTED]\"` (a log message).\n\nThese messsage codes helps you instantly find the relevat source code, if there's\nan error message anywhere. Otherwise, it can be terribly annoying,\nwhen the browser says \"Not found\", and you have no idea where that message comes from.\nFor example, Nginx didn't find a location handler? Or a user is missing? Or a page? Or a post?\nOr a client side route is missing? Or the hostname is wrong? Or ...?\nAnd you search for \"Not found\" and find 1 000 matches.\nNow, instead, you'll see `\"Not found [TyE123ABC]\"` — and you then search for \"TyE123ABC\"\nand find the relevant source code.\n\nSome message codes sent to the browser are checked for in end to end tests. They shall\nhave an underscore `_` at the *end* (because it's called *end* to *end* tests). So, if you see a\nmessage code like: `\"TyM0APPR_\"` and you change it, you need to search for it\neverywhere and update some end-to-end tests too.\n\nSome message codes are checked for by production code Typescript, i.e. *front*end code.\nThey shall have a `_` at the beginnign (front) of the error code, and here's how they can be used\nserver side: `throwForbidden(\"_TyE403BPWD\", \"Bad username or password\")` and\nclient side: `if (xhr.responseText.indexOf('_TyE403BPWD') ...`. — So, when you're looking at the\nserver side code the `_` tells you that the error code is used in the frontend Typescript code,\nso you cannot just change it.\n\n\n### Hen and henbirds\n\nSource code comments should be concise, but writing \"he or she\" everywhere, when referring\nto e.g. a user, becomes a bit verbose (because \"he or she\" is three words). There's\na short Swedish word that means \"he or she\", namely \"hen\". Let's start using it in English.\n\nSo: \"hen\" = either \"he or she\", or \"him or her\", depending on context.\nAnd \"hens\" = \"his or her\", and \"hen's\" = \"he or she is\".\n\nTo refer to many hen = many-he-or-she, write \"people\". \"Hens\" however\nmeans \"his or her\", just like \"its\" means, well, \"its\" (but not \"things\").\n\nWhat about the bird previously called \"hen\"? Let's call it \"henbird\" instead.\n\nSo, hereafter, the word \"hen\" means \"he or she\". And the henbird, which I cannot\nremember having mentioned or even thought about the past year, no longer gets\nto occupy the short and useful word \"hen\".\n\n\n\nCustom third party builds\n-----------------------------\n\nWe're building & using a smaller version of Lodash, like so:\n(this makes slim-bundle.min.js.gz 8kb = 4% smaller, as of September 2016)\n\n    node_modules/lodash-cli/bin/lodash  include=assign,assignIn,before,bind,chain,clone,compact,concat,create,debounce,defaults,defer,delay,each,escape,every,filter,find,findLast,flatten,flattenDeep,forEach,forOwn,has,head,includes,identity,indexOf,isArguments,isArray,isBoolean,isDate,isEmpty,isEqual,isFinite,isFunction,isNaN,isNull,isNumber,isObject,isRegExp,isString,isUndefined,iteratee,keys,last,map,matches,max,min,mixin,negate,noConflict,noop,once,pick,reduce,remove,result,size,slice,some,sortBy,sumBy,take,tap,throttle,thru,toArray,uniq,uniqBy,uniqueId,value,values \\\n      --output client/third-party/lodash-custom.js\n\n- For security reasons, we checkin only the resulting `.js` file (but not the `.min.js`) file\ninto source control (so that you can read the source code and see what it does).\n- There are some Gulp plugins that builds Lodash but one seems abandonend (gulp-lodash-builder)\nand the other (gulp-lodash-custom) analyzes all .js files, I guess that'd slow down the build\nrather much + won't immediately work with Typescript?\n\n\n\nOld Code\n-----------------------------\n\nIn January 2015 I squashed all old 4300+ commits into one single commit,\nbecause in the past I did some mistakes, so it feels better to start over again\nfrom commit number 1. The old commit history is available here:\nhttps://github.com/debiki/debiki-server-old\n\n\n\nCredits\n-----------------------------\n\nI sometimes copy ideas from [Discourse](http://www.discourse.org/), and look at\nits database structure, HTTP requests, and avatar pixel width. Discourse is\nforum software.\n\n\n\nLicense\n-----------------------------\n\nCurrently AGPL — please let me know if you want me to change to GPL, contact info here: https://www.talkyard.io/contact\n\n\n    Copyright (c) 2010-2019  Kaj Magnus Lindberg and Debiki AB\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\nvim: list et ts=2 sw=2 tw=0 fo=r","approvedHtmlSanitized":"\n<h1>Talkyard</h1>\n<p>Discussion software, a place for questions and answers, ideas and feedback.</p>\n\n<ul>\n<li><strong>Get unstuck</strong> by finding answers in Question-Answers topics, like at StackOverflow.</li>\n<li><strong>Discuss ideas</strong> in open-ended topics, like at Reddit and Hacker News.</li>\n<li><strong>Solve problems</strong> step by step, in traditional flat forum topics.</li>\n<li><strong>Collaborate</strong> in real time chat, like Slack.</li>\n<li><strong>Talk with your blog visitors</strong> in embedded comments, like Disqus.</li>\n</ul>\n<p>This is for development;<br>\n<strong>installation instructions</strong> are elsewhere: <a href=\"https://github.com/debiki/talkyard-prod-one\" rel=\"nofollow\">https://github.com/debiki/talkyard-prod-one</a></p>\n\n\n\n<p><a href=\"https://www.talkyard.io/forum/latest/support\" rel=\"nofollow\"><strong>Support forum here</strong></a>, at Talkyard<i></i>.io — and report bugs there too.</p>\n\n\n<p>Screenshots a bit below.<br><br>\nSee it live: <a href=\"https://www.talkyard.io/forum/latest\" rel=\"nofollow\">https://www.talkyard.io/forum/latest</a><br><br>\nRead about it, and demo forums: <a href=\"https://www.talkyard.io\" rel=\"nofollow\">https://www.talkyard.io</a></p>\n<p>You'll find <strong>Docker image</strong> build files in: <code>./images/<i>image-name</i>/</code></p>\n<p>This is beta software; there might be bugs.</p>\n<h3>Screenshots</h3>\n<p><strong>Topic list:</strong></p>\n\n<p><img src=\"https://cloud.githubusercontent.com/assets/7477359/19650764/bb3a1450-9a0a-11e6-884d-d23c93476db3.jpg\"></p>\n<br>\n<p><strong>Question-Answers:</strong></p>\n<p><img src=\"https://user-images.githubusercontent.com/7477359/44306101-0041eb80-a388-11e8-92e8-b8d417c47139.jpg\"></p>\n<br>\n<p><strong>Chat:</strong></p>\n<p>Currently, Talkyard is a mobile friendly web app.<br>\nWithin half a year or a year (today is August 2018),<br>\nthe plan is that there'll be a white labelled mobile app.<br>\nMeaning, people will be able to install your community, on their mobile phones,<br>\nas a separate app with your custom icon.<br>\nPush notifications for Android<br>\n(however, initially not for iPhone — iPhone currently cannot do PWA mobile app push notifications).</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/7477359/19674424/608c49aa-9a88-11e6-8ccd-c2e7ceebd0c2.jpg\"></p>\n<br>\n\n\n<p><strong>Admin-getting-started guide:</strong></p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/7477359/19679591/99a12098-9aa2-11e6-8b65-705c2548cbea.jpg\"></p>\n<br>\n<p><strong>Users online:</strong></p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/7477359/19680424/f0353f86-9aa5-11e6-84d9-94d46f228b93.jpg\"></p>\n<br>\n<h2>Contributing</h2>\n<p>Want to contribute? Feel free to say hello in our community: <a href=\"https://www.talkyard.io/forum/\" rel=\"nofollow\">https://www.talkyard.io/forum/</a>.<br>\nGood for you if you ask the people there what is currently being worked on, so you won't<br>\naccidentally re-implement something that's almost done already — people<br>\nmight be working in their own work-in-progress topic branches that you<br>\ndon't know about.</p>\n<p>Here's how to translate to a new language: <a href=\"translations/i18n-README.md\" rel=\"nofollow\">i18n-README</a> (step 1 and 2 only).</p>\n<p>You need to read and agree to our <a href=\"./docs/CLA-v2.txt\" rel=\"nofollow\">Contributor License Agreement</a>. You do that by<br>\nreading it (please do — there's a human friendly intro) and appending a single line<br>\nparagraph with your real name (no pseudonyms) and the following text, to all your commit messages:</p>\n<blockquote>\n<p>I, Your Full Name &lt;your@<i></i>email.address&gt;, agree to the Contributor License Agreement, docs/CLA-v2.txt.</p>\n</blockquote>\n<p>Please squash your commits to just one (unless you're doing something complicated that's easier<br>\nto review in separate commits).</p>\n<h2>Getting Started</h2>\n<p>This is for <strong>development</strong>. To install and <em>use</em> the software, instead go here:<br>\n<a href=\"https://github.com/debiki/talkyard-prod-one\" rel=\"nofollow\">talkyard-prod-one</a></p>\n<h4>Before you start</h4>\n<p>You need about 6 GB RAM for the development environment (whereas the production environment needs about 2 GB).<br>\nAnd an internet connection — you'll download perhaps 1 GB Docker images and other files.</p>\n<p>Install Docker and Docker-Compose, see: <a href=\"https://docs.docker.com/compose/install/\" rel=\"nofollow\">https://docs.docker.com/compose/install/</a>.<br>\nOn Linux, you can:</p>\n<pre><code>sudo -i\ncurl -fsSL https://get.docker.com -o install-docker.sh\nsh install-docker.sh\ncurl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\ndocker-compose --version  # should print &quot;docker-compose version ... build ...&quot;\n</code></pre>\n<p>Read <a href=\"docs/intro-to-docker-compose.md\" rel=\"nofollow\">A brief intro to Docker-Compose</a> — unless you know<br>\nhow to use docker-compose already.</p>\n<h4>The instructions</h4>\n<ol>\n<li>\n<p>Append some settings to the system config so that ElasticSearch will work:<br>\n(run this as one single command, not one line at a time)</p>\n<pre><code>sudo tee -a /etc/sysctl.conf &lt;&lt;EOF\n\n###################################################################\n# Talkyard settings\n#\n# Up the max backlog queue size (num connections per port), default = 128\nnet.core.somaxconn=8192\n# ElasticSearch requires (at least) this, default = 65530\n# Docs: https://www.kernel.org/doc/Documentation/sysctl/vm.txt\nvm.max_map_count=262144\nEOF\n</code></pre>\n<p>Reload the system config:</p>\n<pre><code>sudo sysctl --system\n</code></pre>\n</li>\n<li>\n<p>Clone the repository, install GNU Make (and <code>jq</code> for viewing logs), and type <code>make up</code>:</p>\n<pre><code>git clone https://github.com/debiki/talkyard.git talkyard\ncd talkyard\napt install make jq\nmake up\n</code></pre>\n</li>\n<li>\n<p>Wait. <code>make up</code> takes a while: Git submodules and Node.js packages will get downloaded,<br>\nTypescript, Stylus and Scala code gets compiled and packaged, Docker images get built.<br>\nYou can tail the log messages, by typing <code>make tail</code>,<br>\nor <code>sudo s/d logs -f</code>.  (s/d means &quot;scripts&quot; and &quot;docker-compose&quot;)</p>\n<p>The following log message might take 10 - 20 minutes: (to download things)</p>\n<pre><code>Loading project definition from /opt/talkyard/app/project\n</code></pre>\n<p>Wait for these &quot;Server started&quot; log messages to appear:</p>\n<pre><code>app_1     |\napp_1     | --- (Running the application, auto-reloading is enabled) ---\napp_1     |\napp_1     | [info] p.c.s.NettyServer - Listening for HTTP on /0:0:0:0:0:0:0:0:9000\napp_1     | [info] p.c.s.NettyServer - Listening for HTTPS on /0:0:0:0:0:0:0:0:9443\napp_1     |\napp_1     | (Server started, use Ctrl+D to stop and go back to the console...)\napp_1     |\n</code></pre>\n</li>\n<li>\n<p>Point your browser to <a href=\"http://localhost/\" rel=\"nofollow\">http://localhost/</a>. This sends a request to the Docker container<br>\nnamed 'web', in which Nginx listens on port 80. Nginx sends the request to Play Framework<br>\nin the 'app' container, port 9000. Play Framework then starts compiling more Scala files — this<br>\ntake a little while; the browser might show a 502 Bad Gateway error message.</p>\n<p>Soon, when done compiling, Play Framework will start. Then this gets logged:</p>\n<pre><code>app_1  | [info] application - Starting... [TyMHELLO]\n...\n...\napp_1  | [info] application - Started. [TyMSTARTED]\n</code></pre>\n<p>If you don't see these messages (maybe they scroll past too fast), you can<br>\ncontinue with the next step just below anyway — just keep reloading the browser page until<br>\nany &quot;is starting&quot; message in the browser window disappears.</p>\n</li>\n<li>\n<p>Create a forum</p>\n<p>Reload the browser at <a href=\"http://localhost/\" rel=\"nofollow\">http://localhost/</a>. A page with a button should appear.<br>\nSign up as admin with this email: <code>admin@example.com</code> (must be that email).<br>\nAs username and password you can type <code>admin</code> and <code>public1234</code>.</p>\n</li>\n</ol>\n\n<p>Shut down everything like so: <code>make dead</code>.</p>\n<h2>Editing source code</h2>\n<p>If you edit some code and reload the page in the browser, your changes will<br>\nappear automatically: there's a Docker container, named Gulp, with Node.js<br>\ninstalled, which recompile Typescript and Stylus CSS. And a container,<br>\nnamed App, which runs the Play Framework application server, and looks<br>\nfor changes to Scala files, recompiles and reloads.</p>\n<p>If you edit Typescript, wait five seconds before you reload the page in<br>\nthe browser, otherwise the Typescript code might not yet have been transpiled.</p>\n<p>If you keep editing and reloading Scala files many many times, then eventually<br>\nPlay Framework runs out of memory. Restart it like so: <code>make restart</code>.</p>\n<h2>Building your own images</h2>\n<p>Do this: (<code>make</code> is GNU Make)</p>\n<pre><code>vi version.txt    # type a new vesion number\nvi .env           # change DOCKER_REPOSITORY to your own repository\nmake prod-images  # this runs tests and builds production images\nmake tag-and-push-latest-images tag=...  # pushes images to your repo\n</code></pre>\n<p>You can type <code>make</code> to see help about the Makefile targets.</p>\n<p>All this has been tested in Ubuntu and Mint Linux only, with Bash. If you're<br>\non Windows, probably you'll need <a href=\"https://www.cygwin.com\" rel=\"nofollow\">Cygwin</a><br>\nor <a href=\"http://www.mingw.org\" rel=\"nofollow\">MinGW</a>.</p>\n<p>To use the images in your own Docker-Compose installation,<br>\nhave a look here: <a href=\"https://github.com/debiki/talkyard-prod-swarm\" rel=\"nofollow\">https://github.com/debiki/talkyard-prod-swarm</a></p>\n<h2>About the images</h2>\n<p>Here you can read about the various images in the Talkyard stack:<br>\n<a href=\"./docs/about-the-talkyard-images.md\" rel=\"nofollow\">about-the-talkyard-images.md</a>.</p>\n<h2>Troubleshooting</h2>\n<p>See <a href=\"./docs/tips.md\" rel=\"nofollow\">tips.md</a>.</p>\n<h2>Tests</h2>\n<h4>End-to-end tests</h4>\n<p>The end-to-end tests are written in TypeScript and uses Selenium and <a href=\"http://Webdriver.io\" rel=\"nofollow\">Webdriver.io</a>.<br>\nSee the <a href=\"./docs/e2e-tests-readme.md\" rel=\"nofollow\">end-to-end tests readme</a>.<br>\nAnd, if you want to test in a browser other than Chrome, see <a href=\"./docs/wildcard-dot-localhost.md\" rel=\"nofollow\">Making *.localhost addresses work</a>.</p>\n<h4>Security tests</h4>\n<p>The security tests are written in TypeScript and use Tape = test-anything-protocol for Node.js.<br>\nSee the <a href=\"./docs/security-tests-readme.md\" rel=\"nofollow\">security tests readme</a>.</p>\n<h4>Unit tests</h4>\n<p>Stop everything: <code>sudo docker-compose down</code> and then: <code>s/cli</code> then type <code>test</code> + hit Enter.</p>\n<h4>Performance tests</h4>\n<p>Install Scala SBT, see <a href=\"http://www.scala-sbt.org/download.html\" rel=\"nofollow\">http://www.scala-sbt.org/download.html</a>. On Linux:</p>\n<pre><code>echo &quot;deb https://dl.bintray.com/sbt/debian /&quot; | sudo tee -a /etc/apt/sources.list.d/sbt.list\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823\nsudo apt-get update\nsudo apt-get install sbt\n</code></pre>\n<p>Append to <code>/etc/security/limits.conf</code> ... hmm but now with Docker-Compose, which container?</p>\n<pre><code>your_login_name hard nofile 65535\nyour_login_name soft nofile 65535\n</code></pre>\n<p>Configure very high max-requests-per-ip-per-second etc Nginx limits — otherwise during the performance<br>\ntest Nginx will start to rate limit stuff and reply 503 Service Not Available:</p>\n<pre><code>sudo docker-compose  -f docker-compose.yml  -f docker-compose-no-limits.yml  up -d\n</code></pre>\n<h2>Technology</h2>\n<ul>\n<li>Client: React.js, TypeScript, <a href=\"http://Webdriver.io\" rel=\"nofollow\">Webdriver.io</a>.</li>\n<li>Server: Scala and Play Framework. Nginx, Nchan, some Lua. React.js in Java's Nashorn Javascript engine.</li>\n<li>Databases: PostgreSQL, Redis, ElasticSearch.</li>\n</ul>\n<h2>Directories</h2>\n<p>This project looks like so:</p>\n<pre><code>server/\n |\n +-Makefile             &lt;-- You can build Talkyard, using GNU Make\n |                          (work in progress, as of Nov 2018)\n |\n +-docker-compose.yml   &lt;-- Tells Docker how to run Talkyard\n |\n +-client/         &lt;-- Javascript, CSS, React.js components\n | +-app/          &lt;-- Client side code\n | +-server/       &lt;-- React.js components rendered server side,\n | :                   usually softlinks to ../app/\n | :\n |\n +-app/            &lt;-- Scala code — a Play Framework 2 application\n |\n +-tests/\n | +-app/          &lt;-- Unit tests and functional tests, for the app server\n | +-e2e/          &lt;-- End-to-end tests\n | +-security/     &lt;-- Security tests\n |\n +-modules/\n | +-ty-dao-rdb/        &lt;-- A database access object (DAO), for PostgreSQL\n | +-ed-core/           &lt;-- Code shared by the DAO and by the ./app/ code\n | +-ed-prod-one-test/  &lt;-- A production installation, for automatic tests\n | |\n | ...Third party modules\n |\n +-to-talkyard/    &lt;-- For converting e.g. phpBB or Disqus export files\n |                     to Talkyard's JSON format, so they can be imported\n |                     into Talkyard. This is a stand-alone Node.js app.\n |\n +-images/\n | +-web/          &lt;-- For building the 'web' Docker image, runs Nginx\n | | +-Dockerfile\n | | +-assets/     &lt;-- Typescript and Stylus compiled to JS and CSS\n | | +-modules/    &lt;-- Nginx modules\n | |   +-nchan/    &lt;-- WebSocket and PubSub for Nginx (a Git submodule)\n | |   +-luajit/   &lt;-- Lua\n | |   ...\n | |\n | +-gulp/         &lt;-- An image that runs Node.js and bundles JS and CSS\n | |\n | +-...           &lt;-- More images, see: docs/about-the-talkyard-images.md\n |\n +-volumes/\n | +-rdb-data      &lt;-- Mounted as a volume in the Postgres container\n | +-gulp-home/    &lt;-- Gulp container home-dir = disk cache\n | +-uploads       &lt;-- Mounted read-write in the Play container, but\n | |                 read-only in Nginx (to serve static files)\n | ...\n |\n +-s/         &lt;-- Utility scripts (typing &quot;scripts/&quot; is so long)\n |\n +-conf/      &lt;-- App server (Play Framework) config files\n | +-my.conf  &lt;-- You can add your localhost config here. Ignored by Git.\n</code></pre>\n<h2>Naming style, tags and a new word</h2>\n<h3>CSS classes and ids</h3>\n<p><em>Example</em>: <code>s_P_By_FN-Gst</code>. Here, <code>s_</code> is a prefix used for all classes, and<br>\nit means &quot;some&quot;. For ids we use <code>t_</code> instead, means &quot;the&quot;. <code>P</code> means Post. <code>By</code> means<br>\nwho-was-it-written-By. <code>FN</code> means Full Name. <code>Gst</code> means Guest.</p>\n<p>So, this is BEM (Block Element Modifier) with a few tweaks: Blocks/elements are separated with<br>\nonly one underscore, and modifiers with only one dash. Blocks, elems and modifiers always<br>\nstart with uppercase — because then it's easy to tell if we're dealing with an <em>abbreviation</em><br>\nor not. For example, <code>FN</code> (full name) is an abbreviation. But <code>By</code> is not (since it continues with<br>\nlowercase letters).</p>\n<p>Another example: <code>s_Dfs_Df_Ttl</code> — this means the title (Ttl), of a draft (Df),<br>\nin a list of drafts (Dfs).  You'll find abbreviations like Ttl and Df, in<br>\n<a href=\"./docs/bem-blocks.txt\" rel=\"nofollow\">bem-blocks.txt</a>.</p>\n\n<p>For stuff with otherwise no class or id, and that should be clicked in end-to-end tests,<br>\nwe use classes only, and the prefix <code>e_</code> (instead of <code>s_</code> or <code>t_</code>).</p>\n<h3>Single and double quotes</h3>\n<p>In Typescript (and any Javascript), use single quotes for strings the computer cares about,<br>\nlike CSS classes or ids, e.g. <code>className: 's_P'</code> or <code>reactRenderMethod = 'hydrate'</code>,<br>\nor React component display names.<br>\nFor texts that humans read, instead use double quotes, like: <code>Button({ ...}, &quot;Undo&quot;)</code>.<br>\nWhen doing this, you can be fairly certain that if you edit a single quote string,<br>\nwithout knowing what you're doing, something will break.<br>\nWhilst if you edit a double quoted string and fix e.g. a spelling errors: the computer<br>\nwon't care, but humans like it.</p>\n<h3>Tag the code</h3>\n<p>Some parts of a software system, knows how other parts of the software system works,<br>\nsometimes in not-obvious ways. Make such otherwise hidden duplicated knowledge visible,<br>\nby tagging the code with tags like: <code>[1ABCDE2]</code>.<br>\nExample: <code>// Also done here: [4JKAM7] when deleting pages.</code>.<br>\nOr there's a 3rd partly lib bug workaround in one source code file, for a problem that happens<br>\nin a different file, and an end-to-end test that got affected, example: <code>[5QKBRQ]</code>.<br>\nTag those three places with the same tag.<br>\nJust type a number, random uppercase letters, and another number, to create a tag.<br>\nAnd copy-paste it to where the related code is.</p>\n<h3>Message codes and magic underscores</h3>\n<p>Log messages, and plain text messages sent back to the browser, start with <code>TyM</code> if it's<br>\nan info message, and <code>TyE</code> if it's an error. Like, <code>&quot;Started. [TyMSTARTED]&quot;</code> (a log message).</p>\n<p>These messsage codes helps you instantly find the relevat source code, if there's<br>\nan error message anywhere. Otherwise, it can be terribly annoying,<br>\nwhen the browser says &quot;Not found&quot;, and you have no idea where that message comes from.<br>\nFor example, Nginx didn't find a location handler? Or a user is missing? Or a page? Or a post?<br>\nOr a client side route is missing? Or the hostname is wrong? Or ...?<br>\nAnd you search for &quot;Not found&quot; and find 1 000 matches.<br>\nNow, instead, you'll see <code>&quot;Not found [TyE123ABC]&quot;</code> — and you then search for &quot;TyE123ABC&quot;<br>\nand find the relevant source code.</p>\n<p>Some message codes sent to the browser are checked for in end to end tests. They shall<br>\nhave an underscore <code>_</code> at the <em>end</em> (because it's called <em>end</em> to <em>end</em> tests). So, if you see a<br>\nmessage code like: <code>&quot;TyM0APPR_&quot;</code> and you change it, you need to search for it<br>\neverywhere and update some end-to-end tests too.</p>\n<p>Some message codes are checked for by production code Typescript, i.e. <em>front</em>end code.<br>\nThey shall have a <code>_</code> at the beginnign (front) of the error code, and here's how they can be used<br>\nserver side: <code>throwForbidden(&quot;_TyE403BPWD&quot;, &quot;Bad username or password&quot;)</code> and<br>\nclient side: <code>if (xhr.responseText.indexOf('_TyE403BPWD') ...</code>. — So, when you're looking at the<br>\nserver side code the <code>_</code> tells you that the error code is used in the frontend Typescript code,<br>\nso you cannot just change it.</p>\n<h3>Hen and henbirds</h3>\n<p>Source code comments should be concise, but writing &quot;he or she&quot; everywhere, when referring<br>\nto e.g. a user, becomes a bit verbose (because &quot;he or she&quot; is three words). There's<br>\na short Swedish word that means &quot;he or she&quot;, namely &quot;hen&quot;. Let's start using it in English.</p>\n<p>So: &quot;hen&quot; = either &quot;he or she&quot;, or &quot;him or her&quot;, depending on context.<br>\nAnd &quot;hens&quot; = &quot;his or her&quot;, and &quot;hen's&quot; = &quot;he or she is&quot;.</p>\n<p>To refer to many hen = many-he-or-she, write &quot;people&quot;. &quot;Hens&quot; however<br>\nmeans &quot;his or her&quot;, just like &quot;its&quot; means, well, &quot;its&quot; (but not &quot;things&quot;).</p>\n<p>What about the bird previously called &quot;hen&quot;? Let's call it &quot;henbird&quot; instead.</p>\n<p>So, hereafter, the word &quot;hen&quot; means &quot;he or she&quot;. And the henbird, which I cannot<br>\nremember having mentioned or even thought about the past year, no longer gets<br>\nto occupy the short and useful word &quot;hen&quot;.</p>\n<h2>Custom third party builds</h2>\n<p>We're building &amp; using a smaller version of Lodash, like so:<br>\n(this makes slim-bundle.min.js.gz 8kb = 4% smaller, as of September 2016)</p>\n<pre><code>node_modules/lodash-cli/bin/lodash  include=assign,assignIn,before,bind,chain,clone,compact,concat,create,debounce,defaults,defer,delay,each,escape,every,filter,find,findLast,flatten,flattenDeep,forEach,forOwn,has,head,includes,identity,indexOf,isArguments,isArray,isBoolean,isDate,isEmpty,isEqual,isFinite,isFunction,isNaN,isNull,isNumber,isObject,isRegExp,isString,isUndefined,iteratee,keys,last,map,matches,max,min,mixin,negate,noConflict,noop,once,pick,reduce,remove,result,size,slice,some,sortBy,sumBy,take,tap,throttle,thru,toArray,uniq,uniqBy,uniqueId,value,values \\\n  --output client/third-party/lodash-custom.js\n</code></pre>\n<ul>\n<li>For security reasons, we checkin only the resulting <code>.js</code> file (but not the <code>.min.js</code>) file<br>\ninto source control (so that you can read the source code and see what it does).</li>\n<li>There are some Gulp plugins that builds Lodash but one seems abandonend (gulp-lodash-builder)<br>\nand the other (gulp-lodash-custom) analyzes all .js files, I guess that'd slow down the build<br>\nrather much + won't immediately work with Typescript?</li>\n</ul>\n<h2>Old Code</h2>\n<p>In January 2015 I squashed all old 4300+ commits into one single commit,<br>\nbecause in the past I did some mistakes, so it feels better to start over again<br>\nfrom commit number 1. The old commit history is available here:<br>\n<a href=\"https://github.com/debiki/debiki-server-old\" rel=\"nofollow\">https://github.com/debiki/debiki-server-old</a></p>\n<h2>Credits</h2>\n<p>I sometimes copy ideas from <a href=\"http://www.discourse.org/\" rel=\"nofollow\">Discourse</a>, and look at<br>\nits database structure, HTTP requests, and avatar pixel width. Discourse is<br>\nforum software.</p>\n<h2>License</h2>\n<p>Currently AGPL — please let me know if you want me to change to GPL, contact info here: <a href=\"https://www.talkyard.io/contact\" rel=\"nofollow\">https://www.talkyard.io/contact</a></p>\n<pre><code>Copyright (c) 2010-2019  Kaj Magnus Lindberg and Debiki AB\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n</code></pre>\n<p>vim: list et ts=2 sw=2 tw=0 fo=r</p>\n","approvedAt":1557151460376,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":52,"pageId":"10","nr":17,"parentNr":6,"multireplyPostNrs":[],"postType":4,"createdAt":1557151488888,"createdById":100,"currRevById":100,"currRevStartedAt":1557151488888,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"# wrk - a HTTP benchmarking tool\n\n  wrk is a modern HTTP benchmarking tool capable of generating significant\n  load when run on a single multi-core CPU. It combines a multithreaded\n  design with scalable event notification systems such as epoll and kqueue.\n\n  An optional LuaJIT script can perform HTTP request generation, response\n  processing, and custom reporting. Details are available in SCRIPTING and\n  several examples are located in [scripts/](scripts/).\n\n## Basic Usage\n\n    wrk -t12 -c400 -d30s http://127.0.0.1:8080/index.html\n\n  This runs a benchmark for 30 seconds, using 12 threads, and keeping\n  400 HTTP connections open.\n\n  Output:\n\n    Running 30s test @ http://127.0.0.1:8080/index.html\n      12 threads and 400 connections\n      Thread Stats   Avg      Stdev     Max   +/- Stdev\n        Latency   635.91us    0.89ms  12.92ms   93.69%\n        Req/Sec    56.20k     8.07k   62.00k    86.54%\n      22464657 requests in 30.00s, 17.76GB read\n    Requests/sec: 748868.53\n    Transfer/sec:    606.33MB\n\n## Command Line Options\n\n    -c, --connections: total number of HTTP connections to keep open with\n                       each thread handling N = connections/threads\n\n    -d, --duration:    duration of the test, e.g. 2s, 2m, 2h\n\n    -t, --threads:     total number of threads to use\n\n    -s, --script:      LuaJIT script, see SCRIPTING\n\n    -H, --header:      HTTP header to add to request, e.g. \"User-Agent: wrk\"\n\n        --latency:     print detailed latency statistics\n\n        --timeout:     record a timeout if a response is not received within\n                       this amount of time.\n\n## Benchmarking Tips\n\n  The machine running wrk must have a sufficient number of ephemeral ports\n  available and closed sockets should be recycled quickly. To handle the\n  initial connection burst the server's listen(2) backlog should be greater\n  than the number of concurrent connections being tested.\n\n  A user script that only changes the HTTP method, path, adds headers or\n  a body, will have no performance impact. Per-request actions, particularly\n  building a new HTTP request, and use of response() will necessarily reduce\n  the amount of load that can be generated.\n\n## Acknowledgements\n\n  wrk contains code from a number of open source projects including the\n  'ae' event loop from redis, the nginx/joyent/node.js 'http-parser',\n  and Mike Pall's LuaJIT. Please consult the NOTICE file for licensing\n  details.\n\n## Cryptography Notice\n\n  This distribution includes cryptographic software. The country in\n  which you currently reside may have restrictions on the import,\n  possession, use, and/or re-export to another country, of encryption\n  software. BEFORE using any encryption software, please check your\n  country's laws, regulations and policies concerning the import,\n  possession, or use, and re-export of encryption software, to see if\n  this is permitted. See <http://www.wassenaar.org/> for more\n  information.\n\n  The U.S. Government Department of Commerce, Bureau of Industry and\n  Security (BIS), has classified this software as Export Commodity\n  Control Number (ECCN) 5D002.C.1, which includes information security\n  software using or performing cryptographic functions with symmetric\n  algorithms. The form and manner of this distribution makes it\n  eligible for export under the License Exception ENC Technology\n  Software Unrestricted (TSU) exception (see the BIS Export\n  Administration Regulations, Section 740.13) for both object code and\n  source code.","approvedHtmlSanitized":"<h1>wrk - a HTTP benchmarking tool</h1>\n<p>wrk is a modern HTTP benchmarking tool capable of generating significant<br>\nload when run on a single multi-core CPU. It combines a multithreaded<br>\ndesign with scalable event notification systems such as epoll and kqueue.</p>\n<p>An optional LuaJIT script can perform HTTP request generation, response<br>\nprocessing, and custom reporting. Details are available in SCRIPTING and<br>\nseveral examples are located in <a href=\"scripts/\" rel=\"nofollow\">scripts/</a>.</p>\n<h2>Basic Usage</h2>\n<pre><code>wrk -t12 -c400 -d30s http://127.0.0.1:8080/index.html\n</code></pre>\n<p>This runs a benchmark for 30 seconds, using 12 threads, and keeping<br>\n400 HTTP connections open.</p>\n<p>Output:</p>\n<pre><code>Running 30s test @ http://127.0.0.1:8080/index.html\n  12 threads and 400 connections\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\n    Latency   635.91us    0.89ms  12.92ms   93.69%\n    Req/Sec    56.20k     8.07k   62.00k    86.54%\n  22464657 requests in 30.00s, 17.76GB read\nRequests/sec: 748868.53\nTransfer/sec:    606.33MB\n</code></pre>\n<h2>Command Line Options</h2>\n<pre><code>-c, --connections: total number of HTTP connections to keep open with\n                   each thread handling N = connections/threads\n\n-d, --duration:    duration of the test, e.g. 2s, 2m, 2h\n\n-t, --threads:     total number of threads to use\n\n-s, --script:      LuaJIT script, see SCRIPTING\n\n-H, --header:      HTTP header to add to request, e.g. &quot;User-Agent: wrk&quot;\n\n    --latency:     print detailed latency statistics\n\n    --timeout:     record a timeout if a response is not received within\n                   this amount of time.\n</code></pre>\n<h2>Benchmarking Tips</h2>\n<p>The machine running wrk must have a sufficient number of ephemeral ports<br>\navailable and closed sockets should be recycled quickly. To handle the<br>\ninitial connection burst the server's listen(2) backlog should be greater<br>\nthan the number of concurrent connections being tested.</p>\n<p>A user script that only changes the HTTP method, path, adds headers or<br>\na body, will have no performance impact. Per-request actions, particularly<br>\nbuilding a new HTTP request, and use of response() will necessarily reduce<br>\nthe amount of load that can be generated.</p>\n<h2>Acknowledgements</h2>\n<p>wrk contains code from a number of open source projects including the<br>\n'ae' event loop from redis, the nginx/joyent/node.js 'http-parser',<br>\nand Mike Pall's LuaJIT. Please consult the NOTICE file for licensing<br>\ndetails.</p>\n<h2>Cryptography Notice</h2>\n<p>This distribution includes cryptographic software. The country in<br>\nwhich you currently reside may have restrictions on the import,<br>\npossession, use, and/or re-export to another country, of encryption<br>\nsoftware. BEFORE using any encryption software, please check your<br>\ncountry's laws, regulations and policies concerning the import,<br>\npossession, or use, and re-export of encryption software, to see if<br>\nthis is permitted. See <a href=\"http://www.wassenaar.org/\" rel=\"nofollow\">http://www.wassenaar.org/</a> for more<br>\ninformation.</p>\n<p>The U.S. Government Department of Commerce, Bureau of Industry and<br>\nSecurity (BIS), has classified this software as Export Commodity<br>\nControl Number (ECCN) 5D002.C.1, which includes information security<br>\nsoftware using or performing cryptographic functions with symmetric<br>\nalgorithms. The form and manner of this distribution makes it<br>\neligible for export under the License Exception ENC Technology<br>\nSoftware Unrestricted (TSU) exception (see the BIS Export<br>\nAdministration Regulations, Section 740.13) for both object code and<br>\nsource code.</p>\n","approvedAt":1557151488888,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":53,"pageId":"11","nr":0,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1559588177007,"createdById":100,"currRevById":100,"currRevStartedAt":1559588177007,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"Lorem Ipsum","approvedHtmlSanitized":"Lorem Ipsum","approvedAt":1559588177007,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":54,"pageId":"11","nr":1,"parentNr":null,"multireplyPostNrs":[],"postType":1,"createdAt":1559588177007,"createdById":100,"currRevById":100,"currRevStartedAt":1559588177007,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed convallis sem magna, sed sagittis magna scelerisque non. Aliquam sit amet dui imperdiet, gravida ipsum sed, consequat urna. Nullam varius libero nibh, ut mollis quam aliquet nec. Duis interdum quis tortor et eleifend. In accumsan, ligula venenatis volutpat placerat, metus erat euismod neque, a dapibus purus velit quis neque. Fusce in metus consectetur leo pretium pharetra et eget felis. Morbi faucibus condimentum erat, ac gravida lorem tincidunt non. Curabitur nec luctus mi. Vestibulum rhoncus elementum facilisis. Donec justo sapien, condimentum at erat vitae, ultricies congue mi. Donec rutrum risus ut leo sollicitudin, nec vulputate est facilisis.\n\nAenean arcu eros, mattis eu feugiat in, varius id ipsum. Nam lacinia nisl quis semper vulputate. Quisque semper, sapien eu vestibulum euismod, arcu nulla mollis velit, in consectetur turpis tortor et magna. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Phasellus tincidunt fermentum justo, vel dapibus quam vehicula vulputate. Fusce turpis lorem, ultrices in leo id, mollis gravida augue. Vestibulum sit amet purus non ligula viverra sollicitudin quis vel lectus. Phasellus consectetur ante ac volutpat commodo. Morbi blandit sollicitudin ligula vel porta. Nulla in lectus velit. Vestibulum gravida, sem non eleifend accumsan, felis sem elementum leo, at ultrices magna nunc in ligula. Praesent varius felis in augue euismod pretium. Nullam ut varius turpis, sit amet euismod libero. Aliquam tristique ultricies ullamcorper. Fusce sed enim elit. Nunc venenatis ultricies justo, id pulvinar libero pretium quis.\n\nEtiam eget ante aliquet, commodo tortor quis, malesuada nulla. Cras feugiat est sit amet ex porttitor interdum. Aenean laoreet purus nec leo bibendum aliquam. Pellentesque consectetur ut elit eu vestibulum. Donec orci mauris, condimentum quis luctus id, dignissim eu felis. Fusce nunc ante, scelerisque ac viverra tincidunt, aliquet ac enim. Cras suscipit commodo orci, eget varius quam. Praesent luctus justo quis consequat scelerisque.\n\nMaecenas diam odio, fringilla nec neque id, auctor placerat justo. Duis tincidunt vel nisl non consectetur. Proin scelerisque, sapien eu sollicitudin luctus, nisi elit ultricies ligula, eget pretium sapien magna at magna. Cras a ex dui. Phasellus lacus metus, ullamcorper vitae lobortis in, vestibulum vel tortor. Phasellus nisl elit, posuere et venenatis nec, efficitur et arcu. Nam eget ex ut ligula scelerisque rutrum ac in ipsum.\n\nIn semper consectetur tortor quis dapibus. Etiam tristique augue vel neque efficitur fermentum. Nulla dui arcu, aliquet vel gravida quis, molestie vitae risus. Aliquam in interdum purus, at ultrices velit. Vestibulum justo metus, rutrum ultricies eros ac, imperdiet pulvinar mi. Sed ornare cursus est eget gravida. Donec nunc lorem, dapibus non rutrum eu, hendrerit eget mi. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Ut laoreet elit quam. Nulla facilisi. Sed sodales massa sit amet velit sagittis, ac vulputate felis tempor. Nullam commodo nulla porta leo dignissim congue. Cras ac mattis lectus, rhoncus ultricies erat. ","approvedHtmlSanitized":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed convallis sem magna, sed sagittis magna scelerisque non. Aliquam sit amet dui imperdiet, gravida ipsum sed, consequat urna. Nullam varius libero nibh, ut mollis quam aliquet nec. Duis interdum quis tortor et eleifend. In accumsan, ligula venenatis volutpat placerat, metus erat euismod neque, a dapibus purus velit quis neque. Fusce in metus consectetur leo pretium pharetra et eget felis. Morbi faucibus condimentum erat, ac gravida lorem tincidunt non. Curabitur nec luctus mi. Vestibulum rhoncus elementum facilisis. Donec justo sapien, condimentum at erat vitae, ultricies congue mi. Donec rutrum risus ut leo sollicitudin, nec vulputate est facilisis.</p>\n<p>Aenean arcu eros, mattis eu feugiat in, varius id ipsum. Nam lacinia nisl quis semper vulputate. Quisque semper, sapien eu vestibulum euismod, arcu nulla mollis velit, in consectetur turpis tortor et magna. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Phasellus tincidunt fermentum justo, vel dapibus quam vehicula vulputate. Fusce turpis lorem, ultrices in leo id, mollis gravida augue. Vestibulum sit amet purus non ligula viverra sollicitudin quis vel lectus. Phasellus consectetur ante ac volutpat commodo. Morbi blandit sollicitudin ligula vel porta. Nulla in lectus velit. Vestibulum gravida, sem non eleifend accumsan, felis sem elementum leo, at ultrices magna nunc in ligula. Praesent varius felis in augue euismod pretium. Nullam ut varius turpis, sit amet euismod libero. Aliquam tristique ultricies ullamcorper. Fusce sed enim elit. Nunc venenatis ultricies justo, id pulvinar libero pretium quis.</p>\n<p>Etiam eget ante aliquet, commodo tortor quis, malesuada nulla. Cras feugiat est sit amet ex porttitor interdum. Aenean laoreet purus nec leo bibendum aliquam. Pellentesque consectetur ut elit eu vestibulum. Donec orci mauris, condimentum quis luctus id, dignissim eu felis. Fusce nunc ante, scelerisque ac viverra tincidunt, aliquet ac enim. Cras suscipit commodo orci, eget varius quam. Praesent luctus justo quis consequat scelerisque.</p>\n<p>Maecenas diam odio, fringilla nec neque id, auctor placerat justo. Duis tincidunt vel nisl non consectetur. Proin scelerisque, sapien eu sollicitudin luctus, nisi elit ultricies ligula, eget pretium sapien magna at magna. Cras a ex dui. Phasellus lacus metus, ullamcorper vitae lobortis in, vestibulum vel tortor. Phasellus nisl elit, posuere et venenatis nec, efficitur et arcu. Nam eget ex ut ligula scelerisque rutrum ac in ipsum.</p>\n<p>In semper consectetur tortor quis dapibus. Etiam tristique augue vel neque efficitur fermentum. Nulla dui arcu, aliquet vel gravida quis, molestie vitae risus. Aliquam in interdum purus, at ultrices velit. Vestibulum justo metus, rutrum ultricies eros ac, imperdiet pulvinar mi. Sed ornare cursus est eget gravida. Donec nunc lorem, dapibus non rutrum eu, hendrerit eget mi. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Ut laoreet elit quam. Nulla facilisi. Sed sodales massa sit amet velit sagittis, ac vulputate felis tempor. Nullam commodo nulla porta leo dignissim congue. Cras ac mattis lectus, rhoncus ultricies erat.</p>\n","approvedAt":1559588177007,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":55,"pageId":"11","nr":2,"parentNr":1,"multireplyPostNrs":[],"postType":1,"createdAt":1559588228803,"createdById":100,"currRevById":100,"currRevStartedAt":1559588228803,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"<!--\nOld GitHub one-line description:\n- Discussion forums with Question & Answers and Team Chat features. Plus embedded comments for your blog.\n\nCurrent:\n- Open source StackOverflow, Slack, Discourse, Reddit, Disqus hybrid — for your online community.\n\nOther alternatives?:\n- Community software, brings together the best from StackOverflow + Slack + Reddit + Discourse.\n- Online community software. Find ideas and answers together, and pick the right things\nto do, to change society, or grow your startup.\n-->\n\n\nTalkyard\n=============================\n\nDiscussion software, a place for questions and answers, ideas and feedback.\n\n<!--\nCreate a place to talk,\nwhere your audience find answers to their questions, and discuss ideas.<br>\nPlace it at `talkyard.Your-Website.org`.\n-->\n\n - **Get unstuck** by finding answers in Question-Answers topics, like at StackOverflow.\n - **Discuss ideas** in open-ended topics, like at Reddit and Hacker News.\n - **Solve problems** step by step, in traditional flat forum topics.\n - **Collaborate** in real time chat, like Slack.\n - **Talk with your blog visitors** in embedded comments, like Disqus.\n\nThis is for development;\n**installation instructions** are elsewhere: https://github.com/debiki/talkyard-prod-one\n\n<!--\nFor your students / volunteers / colleagues / customers / donors /\nopen source users / city / community. -->\n\n\n<!--\n - **Improve your API docs**, by embedding comments at the end of each docs page, to make it easy for people to ask and tell you if something is unclear.\n   -->\n\n<!-- (The staff configure the topic type just once, in a per category setting.) -->\n\n[**Support forum here**](https://www.talkyard.io/forum/latest/support), at Talkyard<i></i>.io — and report bugs there too.\n\n<!--\nUse Talkyard for your workplace, as a self building FAQ. Or for customer support.\nOr for your teachers and students, to help each other. Or your non-profit volunteers.\nOr an open source project and its users.\nWe'd like to build a tool tha *people who change the world or their neighborhood* can use\nto solve problems and pick the right things to do. That's why we have\nfind-solutions Question-Answers topics, and HackerNews & Reddit type topics\nwhere good ideas rise to the top.<! - — And you can use this tool,\nfor your workplace and your colleagues & customers,\nor your non-profit and its volunteers,\nor an open source project and its users,\nor a school and its students, etc.  -->\n\n<!--\nTalkyard (formerly EffectiveDiscussions) is discussion forum software, with chat and question-answers features.\nAnd embedded comments for static websites / blogs.\nInspired by Discourse, Slack, StackOverflow, Reddit and Hacker News, Disqus. -->\n\nScreenshots a bit below.<br>\nSee it live: https://www.talkyard.io/forum/latest<br>\nRead about it, and demo forums: https://www.talkyard.io\n\nYou'll find **Docker image** build files in: <code>./images/<i>image-name</i>/</code>\n\nThis is beta software; there might be bugs.\n\n\n### Screenshots\n\n**Topic list:**\n\n<!--\n![topic-list-borders](https://user-images.githubusercontent.com/7477359/44306130-a3930080-a388-11e8-9cbc-e569f5ddb7a1.jpg)\n the old demo forum looks better? so use instead.  -->\n\n![ed-demo-forum-index](https://cloud.githubusercontent.com/assets/7477359/19650764/bb3a1450-9a0a-11e6-884d-d23c93476db3.jpg)\n\n<br>\n\n**Question-Answers:**\n\n\n![how-work-from-home-vpn-broken-borders](https://user-images.githubusercontent.com/7477359/44306101-0041eb80-a388-11e8-92e8-b8d417c47139.jpg)\n\n<br>\n\n**Chat:**\n\nCurrently, Talkyard is a mobile friendly web app.\nWithin half a year or a year (today is August 2018),\nthe plan is that there'll be a white labelled mobile app.\nMeaning, people will be able to install your community, on their mobile phones,\nas a separate app with your custom icon.\nPush notifications for Android\n(however, initially not for iPhone — iPhone currently cannot do PWA mobile app push notifications).\n\n![ed-e2e-chat-owen-maria](https://cloud.githubusercontent.com/assets/7477359/19674424/608c49aa-9a88-11e6-8ccd-c2e7ceebd0c2.jpg)\n\n<br>\n<!--\n![Q&A about how to wake up on time](https://user-images.githubusercontent.com/7477359/39368115-0549fad0-4a39-11e8-9bba-703d595d2b96.jpg)\n-->\n<!--\nHacker News / Reddit style discussion:\n![ed-discussion-semantics-of-upvote-2013](https://cloud.githubusercontent.com/assets/7477359/19650769/bea906aa-9a0a-11e6-8ea2-9ad771981f46.jpg)\n-->\n\n**Admin-getting-started guide:**\n\n![ed-admin-intro-guide](https://cloud.githubusercontent.com/assets/7477359/19679591/99a12098-9aa2-11e6-8b65-705c2548cbea.jpg)\n\n<br>\n\n**Users online:**\n\n![ed-online-users](https://cloud.githubusercontent.com/assets/7477359/19680424/f0353f86-9aa5-11e6-84d9-94d46f228b93.jpg)\n\n<br>\n\n\nContributing\n-----------------------------\n\nWant to contribute? Feel free to say hello in our community: <https://www.talkyard.io/forum/>.\nGood for you if you ask the people there what is currently being worked on, so you won't\naccidentally re-implement something that's almost done already — people\nmight be working in their own work-in-progress topic branches that you\ndon't know about.\n\nHere's how to translate to a new language: [i18n-README](translations/i18n-README.md) (step 1 and 2 only).\n\nYou need to read and agree to our [Contributor License Agreement](./docs/CLA-v2.txt). You do that by\nreading it (please do — there's a human friendly intro) and appending a single line\nparagraph with your real name (no pseudonyms) and the following text, to all your commit messages:\n\n> I, Your Full Name \\<your@<i></i>email.address\\>, agree to the Contributor License Agreement, docs/CLA-v2.txt.\n\nPlease squash your commits to just one (unless you're doing something complicated that's easier\nto review in separate commits).\n\n\n\n\nGetting Started\n-----------------------------\n\nThis is for **development**. To install and *use* the software, instead go here:\n[talkyard-prod-one](https://github.com/debiki/talkyard-prod-one)\n\n\n#### Before you start\n\nYou need about 6 GB RAM for the development environment (whereas the production environment needs about 2 GB).\nAnd an internet connection — you'll download perhaps 1 GB Docker images and other files.\n\nInstall Docker and Docker-Compose, see: https://docs.docker.com/compose/install/.\nOn Linux, you can:\n\n```\nsudo -i\ncurl -fsSL https://get.docker.com -o install-docker.sh\nsh install-docker.sh\ncurl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\ndocker-compose --version  # should print \"docker-compose version ... build ...\"\n```\n\nRead [A brief intro to Docker-Compose](docs/intro-to-docker-compose.md) — unless you know\nhow to use docker-compose already.\n\n#### The instructions\n\n\n1. Append some settings to the system config so that ElasticSearch will work:\n   (run this as one single command, not one line at a time)\n\n       sudo tee -a /etc/sysctl.conf <<EOF\n\n       ###################################################################\n       # Talkyard settings\n       #\n       # Up the max backlog queue size (num connections per port), default = 128\n       net.core.somaxconn=8192\n       # ElasticSearch requires (at least) this, default = 65530\n       # Docs: https://www.kernel.org/doc/Documentation/sysctl/vm.txt\n       vm.max_map_count=262144\n       EOF\n\n    Reload the system config:\n\n       sudo sysctl --system\n\n\n1. Clone the repository, install GNU Make (and `jq` for viewing logs), and type `make up`:\n\n       git clone https://github.com/debiki/talkyard.git talkyard\n       cd talkyard\n       apt install make jq\n       make up\n\n\n1. Wait. `make up` takes a while: Git submodules and Node.js packages will get downloaded,\n   Typescript, Stylus and Scala code gets compiled and packaged, Docker images get built. \n   You can tail the log messages, by typing `make tail`,\n   or `sudo s/d logs -f`.  (s/d means \"scripts\" and \"docker-compose\")\n\n   The following log message might take 10 - 20 minutes: (to download things)\n\n       Loading project definition from /opt/talkyard/app/project\n\n   Wait for these \"Server started\" log messages to appear:\n\n       app_1     |\n       app_1     | --- (Running the application, auto-reloading is enabled) ---\n       app_1     |\n       app_1     | [info] p.c.s.NettyServer - Listening for HTTP on /0:0:0:0:0:0:0:0:9000\n       app_1     | [info] p.c.s.NettyServer - Listening for HTTPS on /0:0:0:0:0:0:0:0:9443\n       app_1     |\n       app_1     | (Server started, use Ctrl+D to stop and go back to the console...)\n       app_1     |\n\n\n1. Point your browser to http://localhost/. This sends a request to the Docker container\n   named 'web', in which Nginx listens on port 80. Nginx sends the request to Play Framework\n   in the 'app' container, port 9000. Play Framework then starts compiling more Scala files — this\n   take a little while; the browser might show a 502 Bad Gateway error message.\n\n   Soon, when done compiling, Play Framework will start. Then this gets logged:\n\n       app_1  | [info] application - Starting... [TyMHELLO]\n       ...\n       ...\n       app_1  | [info] application - Started. [TyMSTARTED]\n\n   If you don't see these messages (maybe they scroll past too fast), you can\n   continue with the next step just below anyway — just keep reloading the browser page until\n   any \"is starting\" message in the browser window disappears.\n\n\n1. Create a forum\n\n   Reload the browser at http://localhost/. A page with a button should appear.\n   Sign up as admin with this email: `admin@example.com` (must be that email).\n   As username and password you can type `admin` and `public1234`.\n\n<!-- Not needed any longer.\n   You'll be asked to confirm your email address, by clicking a link in an email\n   that was sent to you — but in fact the email couldn't be sent, because you haven't configured\n   any email server, and `admin@example.com` isn't your address anyway.\n\n   Instead look at the log messages. (Run `sudo docker-compose logs app` if you've closed\n   the terminal with log messages.) There you'll find\n   the email — it's written to the log files, in development mode. Copy the\n   confirmation link from the `<a href=...>` and paste it in the browser's address bar.\n   -->\n\nShut down everything like so: `make dead`.\n\n\n\nEditing source code\n-----------------------------\n\nIf you edit some code and reload the page in the browser, your changes will\nappear automatically: there's a Docker container, named Gulp, with Node.js\ninstalled, which recompile Typescript and Stylus CSS. And a container,\nnamed App, which runs the Play Framework application server, and looks\nfor changes to Scala files, recompiles and reloads.\n\nIf you edit Typescript, wait five seconds before you reload the page in\nthe browser, otherwise the Typescript code might not yet have been transpiled.\n\nIf you keep editing and reloading Scala files many many times, then eventually\nPlay Framework runs out of memory. Restart it like so: `make restart`.\n\n\n\nBuilding your own images\n-----------------------------\n\nDo this: (`make` is GNU Make)\n\n```\nvi version.txt    # type a new vesion number\nvi .env           # change DOCKER_REPOSITORY to your own repository\nmake prod-images  # this runs tests and builds production images\nmake tag-and-push-latest-images tag=...  # pushes images to your repo\n```\n\nYou can type `make` to see help about the Makefile targets.\n\nAll this has been tested in Ubuntu and Mint Linux only, with Bash. If you're\non Windows, probably you'll need [Cygwin](https://www.cygwin.com)\nor [MinGW](http://www.mingw.org).\n\nTo use the images in your own Docker-Compose installation,\nhave a look here: https://github.com/debiki/talkyard-prod-swarm\n\n\n\nAbout the images\n-----------------------------\n\nHere you can read about the various images in the Talkyard stack:\n[about-the-talkyard-images.md](./docs/about-the-talkyard-images.md).\n\n\n\nTroubleshooting\n-----------------------------\n\nSee [tips.md](./docs/tips.md).\n\n\n\nTests\n-----------------------------\n\n#### End-to-end tests\n\nThe end-to-end tests are written in TypeScript and uses Selenium and Webdriver.io.\nSee the [end-to-end tests readme](./docs/e2e-tests-readme.md).\nAnd, if you want to test in a browser other than Chrome, see [Making *.localhost addresses work](./docs/wildcard-dot-localhost.md).\n\n\n#### Security tests\n\nThe security tests are written in TypeScript and use Tape = test-anything-protocol for Node.js.\nSee the [security tests readme](./docs/security-tests-readme.md).\n\n\n#### Unit tests\n\nStop everything: `sudo docker-compose down` and then: `s/cli` then type `test` + hit Enter.\n\n\n#### Performance tests\n\nInstall Scala SBT, see http://www.scala-sbt.org/download.html. On Linux:\n\n```\necho \"deb https://dl.bintray.com/sbt/debian /\" | sudo tee -a /etc/apt/sources.list.d/sbt.list\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823\nsudo apt-get update\nsudo apt-get install sbt\n```\n\nAppend to `/etc/security/limits.conf` ... hmm but now with Docker-Compose, which container?\n\n    your_login_name hard nofile 65535\n    your_login_name soft nofile 65535\n\nConfigure very high max-requests-per-ip-per-second etc Nginx limits — otherwise during the performance\ntest Nginx will start to rate limit stuff and reply 503 Service Not Available:\n\n```\nsudo docker-compose  -f docker-compose.yml  -f docker-compose-no-limits.yml  up -d\n```\n\n\nTechnology\n-----------------------------\n\n- Client: React.js, TypeScript, Webdriver.io.\n- Server: Scala and Play Framework. Nginx, Nchan, some Lua. React.js in Java's Nashorn Javascript engine.\n- Databases: PostgreSQL, Redis, ElasticSearch.\n\n\n\nDirectories\n-----------------------------\n\nThis project looks like so:\n\n\n    server/\n     |\n     +-Makefile             <-- You can build Talkyard, using GNU Make\n     |                          (work in progress, as of Nov 2018)\n     |\n     +-docker-compose.yml   <-- Tells Docker how to run Talkyard\n     |\n     +-client/         <-- Javascript, CSS, React.js components\n     | +-app/          <-- Client side code\n     | +-server/       <-- React.js components rendered server side,\n     | :                   usually softlinks to ../app/\n     | :\n     |\n     +-app/            <-- Scala code — a Play Framework 2 application\n     |\n     +-tests/\n     | +-app/          <-- Unit tests and functional tests, for the app server\n     | +-e2e/          <-- End-to-end tests\n     | +-security/     <-- Security tests\n     |\n     +-modules/\n     | +-ty-dao-rdb/        <-- A database access object (DAO), for PostgreSQL\n     | +-ed-core/           <-- Code shared by the DAO and by the ./app/ code\n     | +-ed-prod-one-test/  <-- A production installation, for automatic tests\n     | |\n     | ...Third party modules\n     |\n     +-to-talkyard/    <-- For converting e.g. phpBB or Disqus export files\n     |                     to Talkyard's JSON format, so they can be imported\n     |                     into Talkyard. This is a stand-alone Node.js app.\n     |\n     +-images/\n     | +-web/          <-- For building the 'web' Docker image, runs Nginx\n     | | +-Dockerfile\n     | | +-assets/     <-- Typescript and Stylus compiled to JS and CSS\n     | | +-modules/    <-- Nginx modules\n     | |   +-nchan/    <-- WebSocket and PubSub for Nginx (a Git submodule)\n     | |   +-luajit/   <-- Lua\n     | |   ...\n     | |\n     | +-gulp/         <-- An image that runs Node.js and bundles JS and CSS\n     | |\n     | +-...           <-- More images, see: docs/about-the-talkyard-images.md\n     |\n     +-volumes/\n     | +-rdb-data      <-- Mounted as a volume in the Postgres container\n     | +-gulp-home/    <-- Gulp container home-dir = disk cache\n     | +-uploads       <-- Mounted read-write in the Play container, but\n     | |                 read-only in Nginx (to serve static files)\n     | ...\n     |\n     +-s/         <-- Utility scripts (typing \"scripts/\" is so long)\n     |\n     +-conf/      <-- App server (Play Framework) config files\n     | +-my.conf  <-- You can add your localhost config here. Ignored by Git.\n\n\n\nNaming style, tags and a new word\n-----------------------------\n\n### CSS classes and ids\n\n*Example*: `s_P_By_FN-Gst`. Here, `s_` is a prefix used for all classes, and\nit means \"some\". For ids we use `t_` instead, means \"the\". `P` means Post. `By` means\nwho-was-it-written-By. `FN` means Full Name. `Gst` means Guest.\n\nSo, this is BEM (Block Element Modifier) with a few tweaks: Blocks/elements are separated with\nonly one underscore, and modifiers with only one dash. Blocks, elems and modifiers always\nstart with uppercase — because then it's easy to tell if we're dealing with an _abbreviation_\nor not. For example, `FN` (full name) is an abbreviation. But `By` is not (since it continues with\nlowercase letters).\n\nAnother example: `s_Dfs_Df_Ttl` — this means the title (Ttl), of a draft (Df),\nin a list of drafts (Dfs).  You'll find abbreviations like Ttl and Df, in\n[bem-blocks.txt](./docs/bem-blocks.txt).\n\n<!-- I think these short names actually improve readability, once you know what they means.\nSeeing `s_Dfs_Df_Ttl` in the source code — that's brief and quick to read, doesn't steal\nthe attention from other things nearby you're probably more inteested in.\n(too chatty, skip this)  -->\n\nFor stuff with otherwise no class or id, and that should be clicked in end-to-end tests,\nwe use classes only, and the prefix `e_` (instead of `s_` or `t_`).\n\n\n### Single and double quotes\n\nIn Typescript (and any Javascript), use single quotes for strings the computer cares about,\nlike CSS classes or ids, e.g. `className: 's_P'` or `reactRenderMethod = 'hydrate'`,\nor React component display names.\nFor texts that humans read, instead use double quotes, like: `Button({ ...}, \"Undo\")`.\nWhen doing this, you can be fairly certain that if you edit a single quote string,\nwithout knowing what you're doing, something will break.\nWhilst if you edit a double quoted string and fix e.g. a spelling errors: the computer\nwon't care, but humans like it.\n\n\n### Tag the code\n\nSome parts of a software system, knows how other parts of the software system works,\nsometimes in not-obvious ways. Make such otherwise hidden duplicated knowledge visible,\nby tagging the code with tags like: `[1ABCDE2]`.\nExample: `// Also done here: [4JKAM7] when deleting pages.`.\nOr there's a 3rd partly lib bug workaround in one source code file, for a problem that happens\nin a different file, and an end-to-end test that got affected, example: `[5QKBRQ]`.\nTag those three places with the same tag.\nJust type a number, random uppercase letters, and another number, to create a tag.\nAnd copy-paste it to where the related code is.\n\n\n### Message codes and magic underscores\n\nLog messages, and plain text messages sent back to the browser, start with `TyM` if it's\nan info message, and `TyE` if it's an error. Like, `\"Started. [TyMSTARTED]\"` (a log message).\n\nThese messsage codes helps you instantly find the relevat source code, if there's\nan error message anywhere. Otherwise, it can be terribly annoying,\nwhen the browser says \"Not found\", and you have no idea where that message comes from.\nFor example, Nginx didn't find a location handler? Or a user is missing? Or a page? Or a post?\nOr a client side route is missing? Or the hostname is wrong? Or ...?\nAnd you search for \"Not found\" and find 1 000 matches.\nNow, instead, you'll see `\"Not found [TyE123ABC]\"` — and you then search for \"TyE123ABC\"\nand find the relevant source code.\n\nSome message codes sent to the browser are checked for in end to end tests. They shall\nhave an underscore `_` at the *end* (because it's called *end* to *end* tests). So, if you see a\nmessage code like: `\"TyM0APPR_\"` and you change it, you need to search for it\neverywhere and update some end-to-end tests too.\n\nSome message codes are checked for by production code Typescript, i.e. *front*end code.\nThey shall have a `_` at the beginnign (front) of the error code, and here's how they can be used\nserver side: `throwForbidden(\"_TyE403BPWD\", \"Bad username or password\")` and\nclient side: `if (xhr.responseText.indexOf('_TyE403BPWD') ...`. — So, when you're looking at the\nserver side code the `_` tells you that the error code is used in the frontend Typescript code,\nso you cannot just change it.\n\n\n### Hen and henbirds\n\nSource code comments should be concise, but writing \"he or she\" everywhere, when referring\nto e.g. a user, becomes a bit verbose (because \"he or she\" is three words). There's\na short Swedish word that means \"he or she\", namely \"hen\". Let's start using it in English.\n\nSo: \"hen\" = either \"he or she\", or \"him or her\", depending on context.\nAnd \"hens\" = \"his or her\", and \"hen's\" = \"he or she is\".\n\nTo refer to many hen = many-he-or-she, write \"people\". \"Hens\" however\nmeans \"his or her\", just like \"its\" means, well, \"its\" (but not \"things\").\n\nWhat about the bird previously called \"hen\"? Let's call it \"henbird\" instead.\n\nSo, hereafter, the word \"hen\" means \"he or she\". And the henbird, which I cannot\nremember having mentioned or even thought about the past year, no longer gets\nto occupy the short and useful word \"hen\".\n\n\n\nCustom third party builds\n-----------------------------\n\nWe're building & using a smaller version of Lodash, like so:\n(this makes slim-bundle.min.js.gz 8kb = 4% smaller, as of September 2016)\n\n    node_modules/lodash-cli/bin/lodash \\\n      include=\"assign,assignIn,before,bind,chain,clone,compact,concat,create,debounce,defaults,defer,delay,each,escape,every,filter,find,findLast,flatten,flattenDeep,forEach,forOwn,groupBy,has,head,includes,identity,indexOf,isArguments,isArray,isBoolean,isDate,isEmpty,isEqual,isFinite,isFunction,isNaN,isNull,isNumber,isObject,isRegExp,isString,isUndefined,iteratee,keys,last,map,mapValues,matches,max,min,mixin,negate,noConflict,noop,once,partition,pick,reduce,remove,result,size,slice,some,sortBy,sumBy,take,tap,throttle,thru,toArray,uniq,uniqBy,uniqueId,value,values\" \\\n      --output client/third-party/lodash-custom.js\n\n- For security reasons, we checkin only the resulting `.js` file (but not the `.min.js`) file\ninto source control (so that you can read the source code and see what it does).\n- There are some Gulp plugins that builds Lodash but one seems abandonend (gulp-lodash-builder)\nand the other (gulp-lodash-custom) analyzes all .js files, I guess that'd slow down the build\nrather much + won't immediately work with Typescript?\n\n\n\nOld Code\n-----------------------------\n\nIn January 2015 I squashed all old 4300+ commits into one single commit,\nbecause in the past I did some mistakes, so it feels better to start over again\nfrom commit number 1. The old commit history is available here:\nhttps://github.com/debiki/debiki-server-old\n\n\n\nCredits\n-----------------------------\n\nI sometimes copy ideas from [Discourse](http://www.discourse.org/), and look at\nits database structure, HTTP requests, and avatar pixel width. Discourse is\nforum software.\n\n\n\nLicense\n-----------------------------\n\nCurrently AGPL — please let me know if you want me to change to GPL, contact info here: https://www.talkyard.io/contact\n\n\n    Copyright (c) 2010-2019  Kaj Magnus Lindberg and Debiki AB\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as\n    published by the Free Software Foundation, either version 3 of the\n    License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n\nvim: list et ts=2 sw=2 tw=0 fo=r","approvedHtmlSanitized":"\n<h1>Talkyard</h1>\n<p>Discussion software, a place for questions and answers, ideas and feedback.</p>\n\n<ul>\n<li><strong>Get unstuck</strong> by finding answers in Question-Answers topics, like at StackOverflow.</li>\n<li><strong>Discuss ideas</strong> in open-ended topics, like at Reddit and Hacker News.</li>\n<li><strong>Solve problems</strong> step by step, in traditional flat forum topics.</li>\n<li><strong>Collaborate</strong> in real time chat, like Slack.</li>\n<li><strong>Talk with your blog visitors</strong> in embedded comments, like Disqus.</li>\n</ul>\n<p>This is for development;<br>\n<strong>installation instructions</strong> are elsewhere: <a href=\"https://github.com/debiki/talkyard-prod-one\" rel=\"nofollow\">https://github.com/debiki/talkyard-prod-one</a></p>\n\n\n\n<p><a href=\"https://www.talkyard.io/forum/latest/support\" rel=\"nofollow\"><strong>Support forum here</strong></a>, at Talkyard<i></i>.io — and report bugs there too.</p>\n\n\n<p>Screenshots a bit below.<br><br>\nSee it live: <a href=\"https://www.talkyard.io/forum/latest\" rel=\"nofollow\">https://www.talkyard.io/forum/latest</a><br><br>\nRead about it, and demo forums: <a href=\"https://www.talkyard.io\" rel=\"nofollow\">https://www.talkyard.io</a></p>\n<p>You'll find <strong>Docker image</strong> build files in: <code>./images/<i>image-name</i>/</code></p>\n<p>This is beta software; there might be bugs.</p>\n<h3>Screenshots</h3>\n<p><strong>Topic list:</strong></p>\n\n<p><img src=\"https://cloud.githubusercontent.com/assets/7477359/19650764/bb3a1450-9a0a-11e6-884d-d23c93476db3.jpg\"></p>\n<br>\n<p><strong>Question-Answers:</strong></p>\n<p><img src=\"https://user-images.githubusercontent.com/7477359/44306101-0041eb80-a388-11e8-92e8-b8d417c47139.jpg\"></p>\n<br>\n<p><strong>Chat:</strong></p>\n<p>Currently, Talkyard is a mobile friendly web app.<br>\nWithin half a year or a year (today is August 2018),<br>\nthe plan is that there'll be a white labelled mobile app.<br>\nMeaning, people will be able to install your community, on their mobile phones,<br>\nas a separate app with your custom icon.<br>\nPush notifications for Android<br>\n(however, initially not for iPhone — iPhone currently cannot do PWA mobile app push notifications).</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/7477359/19674424/608c49aa-9a88-11e6-8ccd-c2e7ceebd0c2.jpg\"></p>\n<br>\n\n\n<p><strong>Admin-getting-started guide:</strong></p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/7477359/19679591/99a12098-9aa2-11e6-8b65-705c2548cbea.jpg\"></p>\n<br>\n<p><strong>Users online:</strong></p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/7477359/19680424/f0353f86-9aa5-11e6-84d9-94d46f228b93.jpg\"></p>\n<br>\n<h2>Contributing</h2>\n<p>Want to contribute? Feel free to say hello in our community: <a href=\"https://www.talkyard.io/forum/\" rel=\"nofollow\">https://www.talkyard.io/forum/</a>.<br>\nGood for you if you ask the people there what is currently being worked on, so you won't<br>\naccidentally re-implement something that's almost done already — people<br>\nmight be working in their own work-in-progress topic branches that you<br>\ndon't know about.</p>\n<p>Here's how to translate to a new language: <a href=\"translations/i18n-README.md\" rel=\"nofollow\">i18n-README</a> (step 1 and 2 only).</p>\n<p>You need to read and agree to our <a href=\"./docs/CLA-v2.txt\" rel=\"nofollow\">Contributor License Agreement</a>. You do that by<br>\nreading it (please do — there's a human friendly intro) and appending a single line<br>\nparagraph with your real name (no pseudonyms) and the following text, to all your commit messages:</p>\n<blockquote>\n<p>I, Your Full Name &lt;your@<i></i>email.address&gt;, agree to the Contributor License Agreement, docs/CLA-v2.txt.</p>\n</blockquote>\n<p>Please squash your commits to just one (unless you're doing something complicated that's easier<br>\nto review in separate commits).</p>\n<h2>Getting Started</h2>\n<p>This is for <strong>development</strong>. To install and <em>use</em> the software, instead go here:<br>\n<a href=\"https://github.com/debiki/talkyard-prod-one\" rel=\"nofollow\">talkyard-prod-one</a></p>\n<h4>Before you start</h4>\n<p>You need about 6 GB RAM for the development environment (whereas the production environment needs about 2 GB).<br>\nAnd an internet connection — you'll download perhaps 1 GB Docker images and other files.</p>\n<p>Install Docker and Docker-Compose, see: <a href=\"https://docs.docker.com/compose/install/\" rel=\"nofollow\">https://docs.docker.com/compose/install/</a>.<br>\nOn Linux, you can:</p>\n<pre><code>sudo -i\ncurl -fsSL https://get.docker.com -o install-docker.sh\nsh install-docker.sh\ncurl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\ndocker-compose --version  # should print &quot;docker-compose version ... build ...&quot;\n</code></pre>\n<p>Read <a href=\"docs/intro-to-docker-compose.md\" rel=\"nofollow\">A brief intro to Docker-Compose</a> — unless you know<br>\nhow to use docker-compose already.</p>\n<h4>The instructions</h4>\n<ol>\n<li>\n<p>Append some settings to the system config so that ElasticSearch will work:<br>\n(run this as one single command, not one line at a time)</p>\n<pre><code>sudo tee -a /etc/sysctl.conf &lt;&lt;EOF\n\n###################################################################\n# Talkyard settings\n#\n# Up the max backlog queue size (num connections per port), default = 128\nnet.core.somaxconn=8192\n# ElasticSearch requires (at least) this, default = 65530\n# Docs: https://www.kernel.org/doc/Documentation/sysctl/vm.txt\nvm.max_map_count=262144\nEOF\n</code></pre>\n<p>Reload the system config:</p>\n<pre><code>sudo sysctl --system\n</code></pre>\n</li>\n<li>\n<p>Clone the repository, install GNU Make (and <code>jq</code> for viewing logs), and type <code>make up</code>:</p>\n<pre><code>git clone https://github.com/debiki/talkyard.git talkyard\ncd talkyard\napt install make jq\nmake up\n</code></pre>\n</li>\n<li>\n<p>Wait. <code>make up</code> takes a while: Git submodules and Node.js packages will get downloaded,<br>\nTypescript, Stylus and Scala code gets compiled and packaged, Docker images get built.<br>\nYou can tail the log messages, by typing <code>make tail</code>,<br>\nor <code>sudo s/d logs -f</code>.  (s/d means &quot;scripts&quot; and &quot;docker-compose&quot;)</p>\n<p>The following log message might take 10 - 20 minutes: (to download things)</p>\n<pre><code>Loading project definition from /opt/talkyard/app/project\n</code></pre>\n<p>Wait for these &quot;Server started&quot; log messages to appear:</p>\n<pre><code>app_1     |\napp_1     | --- (Running the application, auto-reloading is enabled) ---\napp_1     |\napp_1     | [info] p.c.s.NettyServer - Listening for HTTP on /0:0:0:0:0:0:0:0:9000\napp_1     | [info] p.c.s.NettyServer - Listening for HTTPS on /0:0:0:0:0:0:0:0:9443\napp_1     |\napp_1     | (Server started, use Ctrl+D to stop and go back to the console...)\napp_1     |\n</code></pre>\n</li>\n<li>\n<p>Point your browser to <a href=\"http://localhost/\" rel=\"nofollow\">http://localhost/</a>. This sends a request to the Docker container<br>\nnamed 'web', in which Nginx listens on port 80. Nginx sends the request to Play Framework<br>\nin the 'app' container, port 9000. Play Framework then starts compiling more Scala files — this<br>\ntake a little while; the browser might show a 502 Bad Gateway error message.</p>\n<p>Soon, when done compiling, Play Framework will start. Then this gets logged:</p>\n<pre><code>app_1  | [info] application - Starting... [TyMHELLO]\n...\n...\napp_1  | [info] application - Started. [TyMSTARTED]\n</code></pre>\n<p>If you don't see these messages (maybe they scroll past too fast), you can<br>\ncontinue with the next step just below anyway — just keep reloading the browser page until<br>\nany &quot;is starting&quot; message in the browser window disappears.</p>\n</li>\n<li>\n<p>Create a forum</p>\n<p>Reload the browser at <a href=\"http://localhost/\" rel=\"nofollow\">http://localhost/</a>. A page with a button should appear.<br>\nSign up as admin with this email: <code>admin@example.com</code> (must be that email).<br>\nAs username and password you can type <code>admin</code> and <code>public1234</code>.</p>\n</li>\n</ol>\n\n<p>Shut down everything like so: <code>make dead</code>.</p>\n<h2>Editing source code</h2>\n<p>If you edit some code and reload the page in the browser, your changes will<br>\nappear automatically: there's a Docker container, named Gulp, with Node.js<br>\ninstalled, which recompile Typescript and Stylus CSS. And a container,<br>\nnamed App, which runs the Play Framework application server, and looks<br>\nfor changes to Scala files, recompiles and reloads.</p>\n<p>If you edit Typescript, wait five seconds before you reload the page in<br>\nthe browser, otherwise the Typescript code might not yet have been transpiled.</p>\n<p>If you keep editing and reloading Scala files many many times, then eventually<br>\nPlay Framework runs out of memory. Restart it like so: <code>make restart</code>.</p>\n<h2>Building your own images</h2>\n<p>Do this: (<code>make</code> is GNU Make)</p>\n<pre><code>vi version.txt    # type a new vesion number\nvi .env           # change DOCKER_REPOSITORY to your own repository\nmake prod-images  # this runs tests and builds production images\nmake tag-and-push-latest-images tag=...  # pushes images to your repo\n</code></pre>\n<p>You can type <code>make</code> to see help about the Makefile targets.</p>\n<p>All this has been tested in Ubuntu and Mint Linux only, with Bash. If you're<br>\non Windows, probably you'll need <a href=\"https://www.cygwin.com\" rel=\"nofollow\">Cygwin</a><br>\nor <a href=\"http://www.mingw.org\" rel=\"nofollow\">MinGW</a>.</p>\n<p>To use the images in your own Docker-Compose installation,<br>\nhave a look here: <a href=\"https://github.com/debiki/talkyard-prod-swarm\" rel=\"nofollow\">https://github.com/debiki/talkyard-prod-swarm</a></p>\n<h2>About the images</h2>\n<p>Here you can read about the various images in the Talkyard stack:<br>\n<a href=\"./docs/about-the-talkyard-images.md\" rel=\"nofollow\">about-the-talkyard-images.md</a>.</p>\n<h2>Troubleshooting</h2>\n<p>See <a href=\"./docs/tips.md\" rel=\"nofollow\">tips.md</a>.</p>\n<h2>Tests</h2>\n<h4>End-to-end tests</h4>\n<p>The end-to-end tests are written in TypeScript and uses Selenium and <a href=\"http://Webdriver.io\" rel=\"nofollow\">Webdriver.io</a>.<br>\nSee the <a href=\"./docs/e2e-tests-readme.md\" rel=\"nofollow\">end-to-end tests readme</a>.<br>\nAnd, if you want to test in a browser other than Chrome, see <a href=\"./docs/wildcard-dot-localhost.md\" rel=\"nofollow\">Making *.localhost addresses work</a>.</p>\n<h4>Security tests</h4>\n<p>The security tests are written in TypeScript and use Tape = test-anything-protocol for Node.js.<br>\nSee the <a href=\"./docs/security-tests-readme.md\" rel=\"nofollow\">security tests readme</a>.</p>\n<h4>Unit tests</h4>\n<p>Stop everything: <code>sudo docker-compose down</code> and then: <code>s/cli</code> then type <code>test</code> + hit Enter.</p>\n<h4>Performance tests</h4>\n<p>Install Scala SBT, see <a href=\"http://www.scala-sbt.org/download.html\" rel=\"nofollow\">http://www.scala-sbt.org/download.html</a>. On Linux:</p>\n<pre><code>echo &quot;deb https://dl.bintray.com/sbt/debian /&quot; | sudo tee -a /etc/apt/sources.list.d/sbt.list\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823\nsudo apt-get update\nsudo apt-get install sbt\n</code></pre>\n<p>Append to <code>/etc/security/limits.conf</code> ... hmm but now with Docker-Compose, which container?</p>\n<pre><code>your_login_name hard nofile 65535\nyour_login_name soft nofile 65535\n</code></pre>\n<p>Configure very high max-requests-per-ip-per-second etc Nginx limits — otherwise during the performance<br>\ntest Nginx will start to rate limit stuff and reply 503 Service Not Available:</p>\n<pre><code>sudo docker-compose  -f docker-compose.yml  -f docker-compose-no-limits.yml  up -d\n</code></pre>\n<h2>Technology</h2>\n<ul>\n<li>Client: React.js, TypeScript, <a href=\"http://Webdriver.io\" rel=\"nofollow\">Webdriver.io</a>.</li>\n<li>Server: Scala and Play Framework. Nginx, Nchan, some Lua. React.js in Java's Nashorn Javascript engine.</li>\n<li>Databases: PostgreSQL, Redis, ElasticSearch.</li>\n</ul>\n<h2>Directories</h2>\n<p>This project looks like so:</p>\n<pre><code>server/\n |\n +-Makefile             &lt;-- You can build Talkyard, using GNU Make\n |                          (work in progress, as of Nov 2018)\n |\n +-docker-compose.yml   &lt;-- Tells Docker how to run Talkyard\n |\n +-client/         &lt;-- Javascript, CSS, React.js components\n | +-app/          &lt;-- Client side code\n | +-server/       &lt;-- React.js components rendered server side,\n | :                   usually softlinks to ../app/\n | :\n |\n +-app/            &lt;-- Scala code — a Play Framework 2 application\n |\n +-tests/\n | +-app/          &lt;-- Unit tests and functional tests, for the app server\n | +-e2e/          &lt;-- End-to-end tests\n | +-security/     &lt;-- Security tests\n |\n +-modules/\n | +-ty-dao-rdb/        &lt;-- A database access object (DAO), for PostgreSQL\n | +-ed-core/           &lt;-- Code shared by the DAO and by the ./app/ code\n | +-ed-prod-one-test/  &lt;-- A production installation, for automatic tests\n | |\n | ...Third party modules\n |\n +-to-talkyard/    &lt;-- For converting e.g. phpBB or Disqus export files\n |                     to Talkyard's JSON format, so they can be imported\n |                     into Talkyard. This is a stand-alone Node.js app.\n |\n +-images/\n | +-web/          &lt;-- For building the 'web' Docker image, runs Nginx\n | | +-Dockerfile\n | | +-assets/     &lt;-- Typescript and Stylus compiled to JS and CSS\n | | +-modules/    &lt;-- Nginx modules\n | |   +-nchan/    &lt;-- WebSocket and PubSub for Nginx (a Git submodule)\n | |   +-luajit/   &lt;-- Lua\n | |   ...\n | |\n | +-gulp/         &lt;-- An image that runs Node.js and bundles JS and CSS\n | |\n | +-...           &lt;-- More images, see: docs/about-the-talkyard-images.md\n |\n +-volumes/\n | +-rdb-data      &lt;-- Mounted as a volume in the Postgres container\n | +-gulp-home/    &lt;-- Gulp container home-dir = disk cache\n | +-uploads       &lt;-- Mounted read-write in the Play container, but\n | |                 read-only in Nginx (to serve static files)\n | ...\n |\n +-s/         &lt;-- Utility scripts (typing &quot;scripts/&quot; is so long)\n |\n +-conf/      &lt;-- App server (Play Framework) config files\n | +-my.conf  &lt;-- You can add your localhost config here. Ignored by Git.\n</code></pre>\n<h2>Naming style, tags and a new word</h2>\n<h3>CSS classes and ids</h3>\n<p><em>Example</em>: <code>s_P_By_FN-Gst</code>. Here, <code>s_</code> is a prefix used for all classes, and<br>\nit means &quot;some&quot;. For ids we use <code>t_</code> instead, means &quot;the&quot;. <code>P</code> means Post. <code>By</code> means<br>\nwho-was-it-written-By. <code>FN</code> means Full Name. <code>Gst</code> means Guest.</p>\n<p>So, this is BEM (Block Element Modifier) with a few tweaks: Blocks/elements are separated with<br>\nonly one underscore, and modifiers with only one dash. Blocks, elems and modifiers always<br>\nstart with uppercase — because then it's easy to tell if we're dealing with an <em>abbreviation</em><br>\nor not. For example, <code>FN</code> (full name) is an abbreviation. But <code>By</code> is not (since it continues with<br>\nlowercase letters).</p>\n<p>Another example: <code>s_Dfs_Df_Ttl</code> — this means the title (Ttl), of a draft (Df),<br>\nin a list of drafts (Dfs).  You'll find abbreviations like Ttl and Df, in<br>\n<a href=\"./docs/bem-blocks.txt\" rel=\"nofollow\">bem-blocks.txt</a>.</p>\n\n<p>For stuff with otherwise no class or id, and that should be clicked in end-to-end tests,<br>\nwe use classes only, and the prefix <code>e_</code> (instead of <code>s_</code> or <code>t_</code>).</p>\n<h3>Single and double quotes</h3>\n<p>In Typescript (and any Javascript), use single quotes for strings the computer cares about,<br>\nlike CSS classes or ids, e.g. <code>className: 's_P'</code> or <code>reactRenderMethod = 'hydrate'</code>,<br>\nor React component display names.<br>\nFor texts that humans read, instead use double quotes, like: <code>Button({ ...}, &quot;Undo&quot;)</code>.<br>\nWhen doing this, you can be fairly certain that if you edit a single quote string,<br>\nwithout knowing what you're doing, something will break.<br>\nWhilst if you edit a double quoted string and fix e.g. a spelling errors: the computer<br>\nwon't care, but humans like it.</p>\n<h3>Tag the code</h3>\n<p>Some parts of a software system, knows how other parts of the software system works,<br>\nsometimes in not-obvious ways. Make such otherwise hidden duplicated knowledge visible,<br>\nby tagging the code with tags like: <code>[1ABCDE2]</code>.<br>\nExample: <code>// Also done here: [4JKAM7] when deleting pages.</code>.<br>\nOr there's a 3rd partly lib bug workaround in one source code file, for a problem that happens<br>\nin a different file, and an end-to-end test that got affected, example: <code>[5QKBRQ]</code>.<br>\nTag those three places with the same tag.<br>\nJust type a number, random uppercase letters, and another number, to create a tag.<br>\nAnd copy-paste it to where the related code is.</p>\n<h3>Message codes and magic underscores</h3>\n<p>Log messages, and plain text messages sent back to the browser, start with <code>TyM</code> if it's<br>\nan info message, and <code>TyE</code> if it's an error. Like, <code>&quot;Started. [TyMSTARTED]&quot;</code> (a log message).</p>\n<p>These messsage codes helps you instantly find the relevat source code, if there's<br>\nan error message anywhere. Otherwise, it can be terribly annoying,<br>\nwhen the browser says &quot;Not found&quot;, and you have no idea where that message comes from.<br>\nFor example, Nginx didn't find a location handler? Or a user is missing? Or a page? Or a post?<br>\nOr a client side route is missing? Or the hostname is wrong? Or ...?<br>\nAnd you search for &quot;Not found&quot; and find 1 000 matches.<br>\nNow, instead, you'll see <code>&quot;Not found [TyE123ABC]&quot;</code> — and you then search for &quot;TyE123ABC&quot;<br>\nand find the relevant source code.</p>\n<p>Some message codes sent to the browser are checked for in end to end tests. They shall<br>\nhave an underscore <code>_</code> at the <em>end</em> (because it's called <em>end</em> to <em>end</em> tests). So, if you see a<br>\nmessage code like: <code>&quot;TyM0APPR_&quot;</code> and you change it, you need to search for it<br>\neverywhere and update some end-to-end tests too.</p>\n<p>Some message codes are checked for by production code Typescript, i.e. <em>front</em>end code.<br>\nThey shall have a <code>_</code> at the beginnign (front) of the error code, and here's how they can be used<br>\nserver side: <code>throwForbidden(&quot;_TyE403BPWD&quot;, &quot;Bad username or password&quot;)</code> and<br>\nclient side: <code>if (xhr.responseText.indexOf('_TyE403BPWD') ...</code>. — So, when you're looking at the<br>\nserver side code the <code>_</code> tells you that the error code is used in the frontend Typescript code,<br>\nso you cannot just change it.</p>\n<h3>Hen and henbirds</h3>\n<p>Source code comments should be concise, but writing &quot;he or she&quot; everywhere, when referring<br>\nto e.g. a user, becomes a bit verbose (because &quot;he or she&quot; is three words). There's<br>\na short Swedish word that means &quot;he or she&quot;, namely &quot;hen&quot;. Let's start using it in English.</p>\n<p>So: &quot;hen&quot; = either &quot;he or she&quot;, or &quot;him or her&quot;, depending on context.<br>\nAnd &quot;hens&quot; = &quot;his or her&quot;, and &quot;hen's&quot; = &quot;he or she is&quot;.</p>\n<p>To refer to many hen = many-he-or-she, write &quot;people&quot;. &quot;Hens&quot; however<br>\nmeans &quot;his or her&quot;, just like &quot;its&quot; means, well, &quot;its&quot; (but not &quot;things&quot;).</p>\n<p>What about the bird previously called &quot;hen&quot;? Let's call it &quot;henbird&quot; instead.</p>\n<p>So, hereafter, the word &quot;hen&quot; means &quot;he or she&quot;. And the henbird, which I cannot<br>\nremember having mentioned or even thought about the past year, no longer gets<br>\nto occupy the short and useful word &quot;hen&quot;.</p>\n<h2>Custom third party builds</h2>\n<p>We're building &amp; using a smaller version of Lodash, like so:<br>\n(this makes slim-bundle.min.js.gz 8kb = 4% smaller, as of September 2016)</p>\n<pre><code>node_modules/lodash-cli/bin/lodash \\\n  include=&quot;assign,assignIn,before,bind,chain,clone,compact,concat,create,debounce,defaults,defer,delay,each,escape,every,filter,find,findLast,flatten,flattenDeep,forEach,forOwn,groupBy,has,head,includes,identity,indexOf,isArguments,isArray,isBoolean,isDate,isEmpty,isEqual,isFinite,isFunction,isNaN,isNull,isNumber,isObject,isRegExp,isString,isUndefined,iteratee,keys,last,map,mapValues,matches,max,min,mixin,negate,noConflict,noop,once,partition,pick,reduce,remove,result,size,slice,some,sortBy,sumBy,take,tap,throttle,thru,toArray,uniq,uniqBy,uniqueId,value,values&quot; \\\n  --output client/third-party/lodash-custom.js\n</code></pre>\n<ul>\n<li>For security reasons, we checkin only the resulting <code>.js</code> file (but not the <code>.min.js</code>) file<br>\ninto source control (so that you can read the source code and see what it does).</li>\n<li>There are some Gulp plugins that builds Lodash but one seems abandonend (gulp-lodash-builder)<br>\nand the other (gulp-lodash-custom) analyzes all .js files, I guess that'd slow down the build<br>\nrather much + won't immediately work with Typescript?</li>\n</ul>\n<h2>Old Code</h2>\n<p>In January 2015 I squashed all old 4300+ commits into one single commit,<br>\nbecause in the past I did some mistakes, so it feels better to start over again<br>\nfrom commit number 1. The old commit history is available here:<br>\n<a href=\"https://github.com/debiki/debiki-server-old\" rel=\"nofollow\">https://github.com/debiki/debiki-server-old</a></p>\n<h2>Credits</h2>\n<p>I sometimes copy ideas from <a href=\"http://www.discourse.org/\" rel=\"nofollow\">Discourse</a>, and look at<br>\nits database structure, HTTP requests, and avatar pixel width. Discourse is<br>\nforum software.</p>\n<h2>License</h2>\n<p>Currently AGPL — please let me know if you want me to change to GPL, contact info here: <a href=\"https://www.talkyard.io/contact\" rel=\"nofollow\">https://www.talkyard.io/contact</a></p>\n<pre><code>Copyright (c) 2010-2019  Kaj Magnus Lindberg and Debiki AB\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n</code></pre>\n<p>vim: list et ts=2 sw=2 tw=0 fo=r</p>\n","approvedAt":1559588228803,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":56,"pageId":"11","nr":3,"parentNr":2,"multireplyPostNrs":[],"postType":1,"createdAt":1559588255076,"createdById":100,"currRevById":100,"currRevStartedAt":1559588255076,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. In est leo, porttitor ut tortor eu, mattis posuere neque. Sed posuere sem in augue luctus eleifend. Nunc ullamcorper libero id volutpat tincidunt. Donec lacinia urna sed tincidunt tempor. Ut est lacus, sollicitudin quis fringilla sed, ultricies quis diam. Etiam lobortis justo metus, non gravida neque consequat non. Vivamus sit amet augue dolor. Nulla efficitur turpis mauris. Duis fringilla vehicula porttitor. Donec luctus consequat mi, in gravida libero condimentum et. Etiam faucibus mi ac mauris porttitor, eu pulvinar libero aliquam. Duis et mi at tellus auctor consequat in eget diam. Vestibulum ac feugiat dui. Aliquam eget ante at erat imperdiet suscipit vitae eu nunc.\n\nProin blandit lorem a euismod auctor. Sed turpis nunc, bibendum id lacus vel, bibendum tincidunt arcu. Quisque vulputate mi diam, quis sollicitudin lorem tincidunt at. Suspendisse nec sem pulvinar, ultricies sem sed, blandit ligula. In pellentesque turpis vitae quam blandit, tincidunt molestie est mollis. Etiam ut ligula sem. Sed fermentum et risus a vestibulum.","approvedHtmlSanitized":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. In est leo, porttitor ut tortor eu, mattis posuere neque. Sed posuere sem in augue luctus eleifend. Nunc ullamcorper libero id volutpat tincidunt. Donec lacinia urna sed tincidunt tempor. Ut est lacus, sollicitudin quis fringilla sed, ultricies quis diam. Etiam lobortis justo metus, non gravida neque consequat non. Vivamus sit amet augue dolor. Nulla efficitur turpis mauris. Duis fringilla vehicula porttitor. Donec luctus consequat mi, in gravida libero condimentum et. Etiam faucibus mi ac mauris porttitor, eu pulvinar libero aliquam. Duis et mi at tellus auctor consequat in eget diam. Vestibulum ac feugiat dui. Aliquam eget ante at erat imperdiet suscipit vitae eu nunc.</p>\n<p>Proin blandit lorem a euismod auctor. Sed turpis nunc, bibendum id lacus vel, bibendum tincidunt arcu. Quisque vulputate mi diam, quis sollicitudin lorem tincidunt at. Suspendisse nec sem pulvinar, ultricies sem sed, blandit ligula. In pellentesque turpis vitae quam blandit, tincidunt molestie est mollis. Etiam ut ligula sem. Sed fermentum et risus a vestibulum.</p>\n","approvedAt":1559588255076,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":57,"pageId":"11","nr":4,"parentNr":1,"multireplyPostNrs":[],"postType":1,"createdAt":1559588291761,"createdById":100,"currRevById":100,"currRevStartedAt":1559588291761,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"[![Join the chat at https://gitter.im/graalvm/graaljs](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/graalvm/graaljs?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nA high performance implementation of the JavaScript programming language.\nBuilt on the GraalVM by Oracle Labs.\n\nThe goals of GraalVM JavaScript are:\n\n* Execute JavaScript code with best possible performance\n* [Full compatibility with the latest ECMAScript specification](docs/user/JavaScriptCompatibility.md)\n* Support Node.js applications, including native packages ([check](https://www.graalvm.org/docs/reference-manual/compatibility/))\n* Allow simple upgrading from [Nashorn](docs/user/NashornMigrationGuide.md) or [Rhino](docs/user/RhinoMigrationGuide.md) based applications\n* [Fast interoperability](https://www.graalvm.org/docs/reference-manual/polyglot/) with Java, Scala, or Kotlin, or with other GraalVM languages like Ruby, Python, or R\n* Be embeddable in systems like [Oracle RDBMS](https://oracle.github.io/oracle-db-mle/) or MySQL\n\n\n## Getting Started\nSee the documentation on the [GraalVM website](https://www.graalvm.org/docs/getting-started/) how to install and use GraalVM JavaScript.\n\n```\n$ $GRAALVM/bin/js\n> print(\"Hello JavaScript\");\nHello JavaScript\n>\n```\n\nThe preferred way to run GraalVM JavaScript is from a [GraalVM](https://www.graalvm.org/downloads/).\nIf you prefer running it on a stock JVM, please have a look at the documentation in [`RunOnJDK.md`](docs/user/RunOnJDK.md).\n\n## Documentation\n\nExtensive documentation is available in [`docs`](docs), for [`users`](docs/user) and [`contributors`](docs/contributor) of the engine.\n\nFor contributors, a guide how to build GraalVM JavaScript from source code can be found in [`Building.md`](docs/Building.md).\n\n## Current Status\n\nGraalVM JavaScript is compatible with the ECMAScript 2019 specification.\nNew features, e.g. for the upcoming 2020 edition, are added frequently.\nIn addition, some popular extensions of other engines are supported, see [`JavaScriptCompatibility.md`](docs/user/JavaScriptCompatibility.md).\n\nGraalVM JavaScript can execute Node.js applications.\nIt provides high compatibility with existing npm packages, with high likelyhood that your application will run out of the box.\nThis includes npm packages with native implementations.\nNote that you will need to re-compile from source with GraalVM JavaScript if you want to run binaries that have been compiled for Node.js based on V8, or any other compatible engine.\n\n### Compatibility on Operating Systems\n\nThe core JavaScript engine is a Java application and is thus in principle compatible with every operating system that provides a compatible JVM, [see `RunOnJDK.md`](docs/user/RunOnJDK.md).\nWe test and support GraalVM JavaScript currently in full extent on Linux and MacOS.\nFor Windows, a preliminary preview version is available.\n\nSome features, including the Node.js support, are currently not supported on all platforms (e.g. Windows).\n\n## GraalVM JavaScript Reference Manual\n\nA reference manual for GraalVM JavaScript is available on the [GraalVM website](https://www.graalvm.org/docs/reference-manual/languages/js/).\n\n## Stay connected with the community\n\nSee [graalvm.org/community](https://www.graalvm.org/community/) on how to stay connected with the development community.\nThe discussion on [gitter](https://gitter.im/graalvm/graal-core) is a good way to get in touch with us.\n\n## Authors\n\nThe main authors of GraalVM JavaScript in order of joining the project are:\n\nAndreas Woess, Christian Wirth, Danilo Ansaloni, Daniele Bonetta, Jan Stola, Jakub Podlesak, Tomas Mysik, Jirka Marsik, Josef Haider\n\nAdditionally:\n\nThomas Würthinger, Christian Humer\n\nCollaborations with:\n\n* [Institut für Systemsoftware at Johannes Kepler University Linz](http://ssw.jku.at)\n\nand others.\n\n## Licence\n\nGraalVM JavaScript is available under the following license:\n\n* [The Universal Permissive License (UPL), Version 1.0](https://opensource.org/licenses/UPL)","approvedHtmlSanitized":"<p><a href=\"https://gitter.im/graalvm/graaljs?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img src=\"https://badges.gitter.im/Join%20Chat.svg\"></a></p>\n<p>A high performance implementation of the JavaScript programming language.<br>\nBuilt on the GraalVM by Oracle Labs.</p>\n<p>The goals of GraalVM JavaScript are:</p>\n<ul>\n<li>Execute JavaScript code with best possible performance</li>\n<li><a href=\"docs/user/JavaScriptCompatibility.md\" rel=\"nofollow\">Full compatibility with the latest ECMAScript specification</a></li>\n<li>Support Node.js applications, including native packages (<a href=\"https://www.graalvm.org/docs/reference-manual/compatibility/\" rel=\"nofollow\">check</a>)</li>\n<li>Allow simple upgrading from <a href=\"docs/user/NashornMigrationGuide.md\" rel=\"nofollow\">Nashorn</a> or <a href=\"docs/user/RhinoMigrationGuide.md\" rel=\"nofollow\">Rhino</a> based applications</li>\n<li><a href=\"https://www.graalvm.org/docs/reference-manual/polyglot/\" rel=\"nofollow\">Fast interoperability</a> with Java, Scala, or Kotlin, or with other GraalVM languages like Ruby, Python, or R</li>\n<li>Be embeddable in systems like <a href=\"https://oracle.github.io/oracle-db-mle/\" rel=\"nofollow\">Oracle RDBMS</a> or MySQL</li>\n</ul>\n<h2>Getting Started</h2>\n<p>See the documentation on the <a href=\"https://www.graalvm.org/docs/getting-started/\" rel=\"nofollow\">GraalVM website</a> how to install and use GraalVM JavaScript.</p>\n<pre><code>$ $GRAALVM/bin/js\n&gt; print(&quot;Hello JavaScript&quot;);\nHello JavaScript\n&gt;\n</code></pre>\n<p>The preferred way to run GraalVM JavaScript is from a <a href=\"https://www.graalvm.org/downloads/\" rel=\"nofollow\">GraalVM</a>.<br>\nIf you prefer running it on a stock JVM, please have a look at the documentation in <a href=\"docs/user/RunOnJDK.md\" rel=\"nofollow\"><code>RunOnJDK.md</code></a>.</p>\n<h2>Documentation</h2>\n<p>Extensive documentation is available in <a href=\"docs\" rel=\"nofollow\"><code>docs</code></a>, for <a href=\"docs/user\" rel=\"nofollow\"><code>users</code></a> and <a href=\"docs/contributor\" rel=\"nofollow\"><code>contributors</code></a> of the engine.</p>\n<p>For contributors, a guide how to build GraalVM JavaScript from source code can be found in <a href=\"docs/Building.md\" rel=\"nofollow\"><code>Building.md</code></a>.</p>\n<h2>Current Status</h2>\n<p>GraalVM JavaScript is compatible with the ECMAScript 2019 specification.<br>\nNew features, e.g. for the upcoming 2020 edition, are added frequently.<br>\nIn addition, some popular extensions of other engines are supported, see <a href=\"docs/user/JavaScriptCompatibility.md\" rel=\"nofollow\"><code>JavaScriptCompatibility.md</code></a>.</p>\n<p>GraalVM JavaScript can execute Node.js applications.<br>\nIt provides high compatibility with existing npm packages, with high likelyhood that your application will run out of the box.<br>\nThis includes npm packages with native implementations.<br>\nNote that you will need to re-compile from source with GraalVM JavaScript if you want to run binaries that have been compiled for Node.js based on V8, or any other compatible engine.</p>\n<h3>Compatibility on Operating Systems</h3>\n<p>The core JavaScript engine is a Java application and is thus in principle compatible with every operating system that provides a compatible JVM, <a href=\"docs/user/RunOnJDK.md\" rel=\"nofollow\">see <code>RunOnJDK.md</code></a>.<br>\nWe test and support GraalVM JavaScript currently in full extent on Linux and MacOS.<br>\nFor Windows, a preliminary preview version is available.</p>\n<p>Some features, including the Node.js support, are currently not supported on all platforms (e.g. Windows).</p>\n<h2>GraalVM JavaScript Reference Manual</h2>\n<p>A reference manual for GraalVM JavaScript is available on the <a href=\"https://www.graalvm.org/docs/reference-manual/languages/js/\" rel=\"nofollow\">GraalVM website</a>.</p>\n<h2>Stay connected with the community</h2>\n<p>See <a href=\"https://www.graalvm.org/community/\" rel=\"nofollow\">graalvm.org/community</a> on how to stay connected with the development community.<br>\nThe discussion on <a href=\"https://gitter.im/graalvm/graal-core\" rel=\"nofollow\">gitter</a> is a good way to get in touch with us.</p>\n<h2>Authors</h2>\n<p>The main authors of GraalVM JavaScript in order of joining the project are:</p>\n<p>Andreas Woess, Christian Wirth, Danilo Ansaloni, Daniele Bonetta, Jan Stola, Jakub Podlesak, Tomas Mysik, Jirka Marsik, Josef Haider</p>\n<p>Additionally:</p>\n<p>Thomas Würthinger, Christian Humer</p>\n<p>Collaborations with:</p>\n<ul>\n<li><a href=\"http://ssw.jku.at\" rel=\"nofollow\">Institut für Systemsoftware at Johannes Kepler University Linz</a></li>\n</ul>\n<p>and others.</p>\n<h2>Licence</h2>\n<p>GraalVM JavaScript is available under the following license:</p>\n<ul>\n<li><a href=\"https://opensource.org/licenses/UPL\" rel=\"nofollow\">The Universal Permissive License (UPL), Version 1.0</a></li>\n</ul>\n","approvedAt":1559588291761,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":58,"pageId":"11","nr":5,"parentNr":2,"multireplyPostNrs":[],"postType":1,"createdAt":1559588316637,"createdById":100,"currRevById":100,"currRevStartedAt":1559588316637,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean in ex eget nunc ullamcorper pharetra. Sed diam arcu, gravida nec risus laoreet, lobortis eleifend orci. Suspendisse est ante, varius vel lectus vel, condimentum volutpat dui. Nam et dictum velit, non vestibulum ligula. Curabitur accumsan felis justo, rhoncus vehicula risus egestas et. Sed convallis faucibus elit ut semper. Ut accumsan mauris ac lorem vulputate hendrerit.","approvedHtmlSanitized":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean in ex eget nunc ullamcorper pharetra. Sed diam arcu, gravida nec risus laoreet, lobortis eleifend orci. Suspendisse est ante, varius vel lectus vel, condimentum volutpat dui. Nam et dictum velit, non vestibulum ligula. Curabitur accumsan felis justo, rhoncus vehicula risus egestas et. Sed convallis faucibus elit ut semper. Ut accumsan mauris ac lorem vulputate hendrerit.</p>\n","approvedAt":1559588316637,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":59,"pageId":"11","nr":6,"parentNr":3,"multireplyPostNrs":[],"postType":1,"createdAt":1559588337187,"createdById":100,"currRevById":100,"currRevStartedAt":1559588337187,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget justo id neque laoreet consectetur. Maecenas quis mauris sed nisl imperdiet efficitur. Nullam ut orci odio. Donec vitae eros eget libero vestibulum blandit sodales at erat. Maecenas eget est at nibh convallis fringilla. Proin in ante vitae felis eleifend faucibus blandit id mi. Maecenas ullamcorper arcu at iaculis tempus. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nunc ut purus quam. Donec libero nunc, vulputate et justo quis, faucibus dignissim mi.\n\nNullam a sollicitudin justo. Praesent et ipsum mi. Donec a lacus erat. Morbi ut magna in tellus interdum tempor. Curabitur vestibulum elit vel eros pretium, ac viverra risus fermentum. Praesent ac rhoncus mi. Mauris nec blandit odio, eget consectetur sem. Integer feugiat euismod mauris et laoreet. Mauris nulla nunc, consectetur sed facilisis eget, aliquam et ex. Duis nec magna id ligula lobortis ornare in nec magna. Pellentesque tempus turpis quis augue scelerisque convallis. Ut vel ipsum congue, fermentum diam eleifend, posuere dui. Vestibulum consectetur felis vel sapien iaculis, vitae finibus dolor rhoncus. Vestibulum vel tempor nisi, et euismod justo. Suspendisse egestas leo sed est venenatis varius. Nullam suscipit, sapien ac dictum venenatis, ante justo tempor nisl, in sagittis ligula nibh in ligula.\n\nAenean ac ullamcorper mauris. Donec vitae erat felis. Nullam lectus quam, mattis quis ex nec, iaculis ultricies elit. Nunc non dapibus ipsum. Aliquam erat volutpat. Suspendisse eleifend nulla eget egestas auctor. Etiam ultricies arcu aliquam magna elementum euismod. Nulla eu turpis in arcu bibendum venenatis vel quis orci. Morbi aliquam turpis at ex fermentum facilisis.","approvedHtmlSanitized":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget justo id neque laoreet consectetur. Maecenas quis mauris sed nisl imperdiet efficitur. Nullam ut orci odio. Donec vitae eros eget libero vestibulum blandit sodales at erat. Maecenas eget est at nibh convallis fringilla. Proin in ante vitae felis eleifend faucibus blandit id mi. Maecenas ullamcorper arcu at iaculis tempus. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nunc ut purus quam. Donec libero nunc, vulputate et justo quis, faucibus dignissim mi.</p>\n<p>Nullam a sollicitudin justo. Praesent et ipsum mi. Donec a lacus erat. Morbi ut magna in tellus interdum tempor. Curabitur vestibulum elit vel eros pretium, ac viverra risus fermentum. Praesent ac rhoncus mi. Mauris nec blandit odio, eget consectetur sem. Integer feugiat euismod mauris et laoreet. Mauris nulla nunc, consectetur sed facilisis eget, aliquam et ex. Duis nec magna id ligula lobortis ornare in nec magna. Pellentesque tempus turpis quis augue scelerisque convallis. Ut vel ipsum congue, fermentum diam eleifend, posuere dui. Vestibulum consectetur felis vel sapien iaculis, vitae finibus dolor rhoncus. Vestibulum vel tempor nisi, et euismod justo. Suspendisse egestas leo sed est venenatis varius. Nullam suscipit, sapien ac dictum venenatis, ante justo tempor nisl, in sagittis ligula nibh in ligula.</p>\n<p>Aenean ac ullamcorper mauris. Donec vitae erat felis. Nullam lectus quam, mattis quis ex nec, iaculis ultricies elit. Nunc non dapibus ipsum. Aliquam erat volutpat. Suspendisse eleifend nulla eget egestas auctor. Etiam ultricies arcu aliquam magna elementum euismod. Nulla eu turpis in arcu bibendum venenatis vel quis orci. Morbi aliquam turpis at ex fermentum facilisis.</p>\n","approvedAt":1559588337187,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":60,"pageId":"11","nr":7,"parentNr":4,"multireplyPostNrs":[],"postType":1,"createdAt":1559588376336,"createdById":100,"currRevById":100,"currRevStartedAt":1559588376336,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"# GraalVM\n\n[![Join the chat at https://gitter.im/graalvm/home](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/graalvm/home?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nGraalVM is a universal virtual machine for running applications written in JavaScript, Python, Ruby, R, JVM-based languages like Java, Scala, Clojure, Kotlin, and LLVM-based languages such as C and C++.\n\nThe project website at [https://www.graalvm.org](https://www.graalvm.org) describes how to [get started](https://www.graalvm.org/docs/getting-started/), how to [stay connected](https://www.graalvm.org/community/), and how to [contribute](https://www.graalvm.org/community/contributors/).\n\n\n## Repository Structure\n\nThe GraalVM main source repository includes the following components:\n\n* [GraalVM SDK](sdk/README.md) contains long term supported APIs of GraalVM.\n\n* [GraalVM compiler](compiler/README.md) written in Java that supports both dynamic and static compilation and can integrate with\nthe Java HotSpot VM or run standalone.\n\n* [Truffle](truffle/README.md) language implementation framework for creating languages and instrumentations for GraalVM.\n\n* [Tools](tools/README.md) contains a set of tools for GraalVM languages\nimplemented with the instrumentation framework.\n\n* [Substrate VM](substratevm/README.md) framework that allows ahead-of-time (AOT)\ncompilation of Java applications under closed-world assumption into executable\nimages or shared objects.\n\n* [Sulong](sulong/README.md) is an engine for running LLVM bitcode on GraalVM.\n\n* [TRegex](regex/README.md) is an implementation of regular expressions which leverages GraalVM for efficient compilation of automata.\n\n* [VM](vm/README.md) includes the components to build a modular GraalVM image.\n\n\n## Reporting Vulnerabilities\n\nPlease report security vulnerabilities not via GitHub issues or the public mailing lists, but via the process outlined at [Reporting Vulnerabilities guide](https://www.oracle.com/corporate/security-practices/assurance/vulnerability/reporting.html).\n\n\n## Related Repositories\n\nGraalVM allows running of following languages which are being developed and tested in related repositories with GraalVM core to run on top of it using Truffle and the GraalVM compiler. These are:\n* [GraalJS](https://github.com/graalvm/graaljs) - JavaScript (ECMAScript 2019 compatible) and Node.js 10.15.2\n* [FastR](https://github.com/oracle/fastr) - R Language 3.5.1\n* [GraalPython](https://github.com/graalvm/graalpython) - Python 3.7\n* [TruffleRuby](https://github.com/oracle/truffleruby/) - Ruby Programming Language 2.6.2\n* [SimpleLanguage](https://github.com/graalvm/simplelanguage) - A simple demonstration language for the GraalVM.\n\n\n## License\n\nEach GraalVM component is licensed:\n* [Truffle Framework](/truffle/) and its dependency [GraalVM SDK](/sdk/) are licensed under the [Universal Permissive License](truffle/LICENSE.md).\n* [Tools](/tools/) project is licensed under the [GPL 2 with Classpath exception](tools/LICENSE.GPL.md).\n* [TRegex](/regex/) project is licensed under the [GPL 2 with Classpath exception](regex/LICENSE.GPL.md).\n* [GraalVM compiler](/compiler/) is licensed under the [GPL 2 with Classpath exception](compiler/LICENSE.md).\n* [Substrate VM](/substratevm/) is licensed under the [GPL 2 with Classpath exception](substratevm/LICENSE.md).\n* [Sulong](/sulong/) is licensed under [3-clause BSD](sulong/LICENSE).\n* [VM](/vm/) is licensed under the [GPL 2 with Classpath exception](vm/LICENSE_GRAALVM_CE).","approvedHtmlSanitized":"<h1>GraalVM</h1>\n<p><a href=\"https://gitter.im/graalvm/home?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img src=\"https://badges.gitter.im/Join%20Chat.svg\"></a></p>\n<p>GraalVM is a universal virtual machine for running applications written in JavaScript, Python, Ruby, R, JVM-based languages like Java, Scala, Clojure, Kotlin, and LLVM-based languages such as C and C++.</p>\n<p>The project website at <a href=\"https://www.graalvm.org\" rel=\"nofollow\">https://www.graalvm.org</a> describes how to <a href=\"https://www.graalvm.org/docs/getting-started/\" rel=\"nofollow\">get started</a>, how to <a href=\"https://www.graalvm.org/community/\" rel=\"nofollow\">stay connected</a>, and how to <a href=\"https://www.graalvm.org/community/contributors/\" rel=\"nofollow\">contribute</a>.</p>\n<h2>Repository Structure</h2>\n<p>The GraalVM main source repository includes the following components:</p>\n<ul>\n<li>\n<p><a href=\"sdk/README.md\" rel=\"nofollow\">GraalVM SDK</a> contains long term supported APIs of GraalVM.</p>\n</li>\n<li>\n<p><a href=\"compiler/README.md\" rel=\"nofollow\">GraalVM compiler</a> written in Java that supports both dynamic and static compilation and can integrate with<br>\nthe Java HotSpot VM or run standalone.</p>\n</li>\n<li>\n<p><a href=\"truffle/README.md\" rel=\"nofollow\">Truffle</a> language implementation framework for creating languages and instrumentations for GraalVM.</p>\n</li>\n<li>\n<p><a href=\"tools/README.md\" rel=\"nofollow\">Tools</a> contains a set of tools for GraalVM languages<br>\nimplemented with the instrumentation framework.</p>\n</li>\n<li>\n<p><a href=\"substratevm/README.md\" rel=\"nofollow\">Substrate VM</a> framework that allows ahead-of-time (AOT)<br>\ncompilation of Java applications under closed-world assumption into executable<br>\nimages or shared objects.</p>\n</li>\n<li>\n<p><a href=\"sulong/README.md\" rel=\"nofollow\">Sulong</a> is an engine for running LLVM bitcode on GraalVM.</p>\n</li>\n<li>\n<p><a href=\"regex/README.md\" rel=\"nofollow\">TRegex</a> is an implementation of regular expressions which leverages GraalVM for efficient compilation of automata.</p>\n</li>\n<li>\n<p><a href=\"vm/README.md\" rel=\"nofollow\">VM</a> includes the components to build a modular GraalVM image.</p>\n</li>\n</ul>\n<h2>Reporting Vulnerabilities</h2>\n<p>Please report security vulnerabilities not via GitHub issues or the public mailing lists, but via the process outlined at <a href=\"https://www.oracle.com/corporate/security-practices/assurance/vulnerability/reporting.html\" rel=\"nofollow\">Reporting Vulnerabilities guide</a>.</p>\n<h2>Related Repositories</h2>\n<p>GraalVM allows running of following languages which are being developed and tested in related repositories with GraalVM core to run on top of it using Truffle and the GraalVM compiler. These are:</p>\n<ul>\n<li><a href=\"https://github.com/graalvm/graaljs\" rel=\"nofollow\">GraalJS</a> - JavaScript (ECMAScript 2019 compatible) and Node.js 10.15.2</li>\n<li><a href=\"https://github.com/oracle/fastr\" rel=\"nofollow\">FastR</a> - R Language 3.5.1</li>\n<li><a href=\"https://github.com/graalvm/graalpython\" rel=\"nofollow\">GraalPython</a> - Python 3.7</li>\n<li><a href=\"https://github.com/oracle/truffleruby/\" rel=\"nofollow\">TruffleRuby</a> - Ruby Programming Language 2.6.2</li>\n<li><a href=\"https://github.com/graalvm/simplelanguage\" rel=\"nofollow\">SimpleLanguage</a> - A simple demonstration language for the GraalVM.</li>\n</ul>\n<h2>License</h2>\n<p>Each GraalVM component is licensed:</p>\n<ul>\n<li><a href=\"/truffle/\">Truffle Framework</a> and its dependency <a href=\"/sdk/\">GraalVM SDK</a> are licensed under the <a href=\"truffle/LICENSE.md\" rel=\"nofollow\">Universal Permissive License</a>.</li>\n<li><a href=\"/tools/\">Tools</a> project is licensed under the <a href=\"tools/LICENSE.GPL.md\" rel=\"nofollow\">GPL 2 with Classpath exception</a>.</li>\n<li><a href=\"/regex/\">TRegex</a> project is licensed under the <a href=\"regex/LICENSE.GPL.md\" rel=\"nofollow\">GPL 2 with Classpath exception</a>.</li>\n<li><a href=\"/compiler/\">GraalVM compiler</a> is licensed under the <a href=\"compiler/LICENSE.md\" rel=\"nofollow\">GPL 2 with Classpath exception</a>.</li>\n<li><a href=\"/substratevm/\">Substrate VM</a> is licensed under the <a href=\"substratevm/LICENSE.md\" rel=\"nofollow\">GPL 2 with Classpath exception</a>.</li>\n<li><a href=\"/sulong/\">Sulong</a> is licensed under <a href=\"sulong/LICENSE\" rel=\"nofollow\">3-clause BSD</a>.</li>\n<li><a href=\"/vm/\">VM</a> is licensed under the <a href=\"vm/LICENSE_GRAALVM_CE\" rel=\"nofollow\">GPL 2 with Classpath exception</a>.</li>\n</ul>\n","approvedAt":1559588376336,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":61,"pageId":"11","nr":8,"parentNr":7,"multireplyPostNrs":[],"postType":1,"createdAt":1559588479110,"createdById":100,"currRevById":100,"currRevStartedAt":1559588479110,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"# Graal Standard Development Kit\n\nThe GraalVM SDK is a collection of APIs for the components of GraalVM.\n\n* The [`org.graalvm.polyglot`](http://www.graalvm.org/sdk/javadoc/org/graalvm/polyglot/package-summary.html) module contains APIs to embed Graal languages in Java host applications.\n* The [`org.graalvm.collections`](http://www.graalvm.org/sdk/javadoc/org/graalvm/collections/package-summary.html) module contains memory efficient common collection data structures used across Graal projects.\n* The [`org.graalvm.options`](http://www.graalvm.org/sdk/javadoc/org/graalvm/options/package-summary.html) module contains reusable classes for options.\n\n## Getting Started\n\n1. Download GraalVM from [Oracle Technology Network](https://www.oracle.com/technetwork/graalvm/downloads/index.html).\n2. Use any of the Java executables in `./bin` or import GraalVM as JDK in your favorite IDE.\n3. Use GraalVM SDK, the jar is put on the class path for you automatically.\n\nThe GraalVM SDK bits are also uploaded to Maven central.\nYou can use it from your `pom.xml` file as:\n\n```xml\n  <dependencies>\n    <dependency>\n      <groupId>org.graalvm</groupId>\n      <artifactId>graal-sdk</artifactId>\n      <version>0.30</version>\n    </dependency>\n  </dependencies>\n```\n\nPlease note that GraalVM SDK requires GraalVM to run.\n\n## Tutorials\n\n* [Tutorial](http://www.graalvm.org/docs/graalvm-as-a-platform/embed/) on using the polyglot API to embed Graal languages in Java host applications.\n\n## Changes\n\nImportant API changes and additions are tracked in the [SDK changelog](./CHANGELOG.md).  \n\n\n## License\n\n[GraalVM SDK](../sdk) is licensed under the [Universal Permissive License](./LICENSE.md).","approvedHtmlSanitized":"<h1>Graal Standard Development Kit</h1>\n<p>The GraalVM SDK is a collection of APIs for the components of GraalVM.</p>\n<ul>\n<li>The <a href=\"http://www.graalvm.org/sdk/javadoc/org/graalvm/polyglot/package-summary.html\" rel=\"nofollow\"><code>org.graalvm.polyglot</code></a> module contains APIs to embed Graal languages in Java host applications.</li>\n<li>The <a href=\"http://www.graalvm.org/sdk/javadoc/org/graalvm/collections/package-summary.html\" rel=\"nofollow\"><code>org.graalvm.collections</code></a> module contains memory efficient common collection data structures used across Graal projects.</li>\n<li>The <a href=\"http://www.graalvm.org/sdk/javadoc/org/graalvm/options/package-summary.html\" rel=\"nofollow\"><code>org.graalvm.options</code></a> module contains reusable classes for options.</li>\n</ul>\n<h2>Getting Started</h2>\n<ol>\n<li>Download GraalVM from <a href=\"https://www.oracle.com/technetwork/graalvm/downloads/index.html\" rel=\"nofollow\">Oracle Technology Network</a>.</li>\n<li>Use any of the Java executables in <code>./bin</code> or import GraalVM as JDK in your favorite IDE.</li>\n<li>Use GraalVM SDK, the jar is put on the class path for you automatically.</li>\n</ol>\n<p>The GraalVM SDK bits are also uploaded to Maven central.<br>\nYou can use it from your <code>pom.xml</code> file as:</p>\n<pre><code class=\"language-xml\">  &lt;dependencies&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.graalvm&lt;/groupId&gt;\n      &lt;artifactId&gt;graal-sdk&lt;/artifactId&gt;\n      &lt;version&gt;0.30&lt;/version&gt;\n    &lt;/dependency&gt;\n  &lt;/dependencies&gt;\n</code></pre>\n<p>Please note that GraalVM SDK requires GraalVM to run.</p>\n<h2>Tutorials</h2>\n<ul>\n<li><a href=\"http://www.graalvm.org/docs/graalvm-as-a-platform/embed/\" rel=\"nofollow\">Tutorial</a> on using the polyglot API to embed Graal languages in Java host applications.</li>\n</ul>\n<h2>Changes</h2>\n<p>Important API changes and additions are tracked in the <a href=\"./CHANGELOG.md\" rel=\"nofollow\">SDK changelog</a>.</p>\n<h2>License</h2>\n<p><a href=\"../sdk\" rel=\"nofollow\">GraalVM SDK</a> is licensed under the <a href=\"./LICENSE.md\" rel=\"nofollow\">Universal Permissive License</a>.</p>\n","approvedAt":1559588479110,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":62,"pageId":"11","nr":9,"parentNr":1,"multireplyPostNrs":[],"postType":1,"createdAt":1559588509809,"createdById":100,"currRevById":100,"currRevStartedAt":1559588509809,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc vestibulum mi a lorem bibendum, et rutrum urna venenatis. Praesent laoreet tortor non purus interdum dignissim. Sed sagittis bibendum mauris, a mattis nulla gravida id. Ut lectus dui, facilisis ut viverra tempus, dapibus ut metus. Suspendisse sed lacinia velit. Vestibulum vulputate egestas diam vitae rhoncus. Suspendisse ultricies ex non gravida pellentesque. Etiam ullamcorper feugiat rhoncus. Morbi luctus erat libero, condimentum porttitor libero mattis eget. Suspendisse vitae mauris ornare, rutrum risus sed, sollicitudin nisi. Aenean scelerisque diam ac quam auctor, non rhoncus ex facilisis. Suspendisse quis posuere sapien. Ut finibus pharetra malesuada. Quisque neque nibh, dapibus sit amet ipsum ac, pulvinar fermentum est. Fusce eget magna dignissim, sodales odio ac, vestibulum nisi. Ut auctor urna commodo risus auctor commodo.\n\nQuisque vel vehicula leo. Praesent nibh elit, blandit vitae tempor suscipit, mollis imperdiet nunc. Cras mi lorem, consectetur ut mattis nec, aliquam non felis. Nunc eu iaculis felis. In ac consequat mauris, at efficitur ex. Phasellus lectus nibh, aliquet ac finibus et, aliquet et dolor. Cras ut dolor pretium, laoreet odio sit amet, porttitor lorem.\n\nUt arcu sapien, laoreet finibus posuere non, malesuada a augue. Proin fermentum ut metus vel congue. Vestibulum euismod arcu at ex venenatis, ac interdum metus auctor. Aliquam nec dui imperdiet, luctus ante vitae, porta turpis. Nulla laoreet orci et sem placerat rutrum. Curabitur vel libero rutrum, efficitur erat et, malesuada tellus. Maecenas maximus ornare finibus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Suspendisse sodales porttitor augue quis pretium. Nulla pretium nec tortor id venenatis. In consequat tincidunt risus at euismod. Suspendisse rhoncus eleifend urna, ac hendrerit ante iaculis ornare. Nullam id justo aliquam neque fermentum aliquet. Sed condimentum euismod nisi a lacinia. Nullam tincidunt enim efficitur, lobortis nisl vitae, hendrerit purus.\n\nSed iaculis ac ipsum sit amet dignissim. Fusce finibus enim eget libero elementum mollis. Curabitur euismod eget urna vitae feugiat. In lacinia pharetra massa, in pellentesque velit euismod ac. Nunc ut vehicula ipsum, vitae feugiat enim. Suspendisse nec vestibulum mi, eget posuere dolor. Etiam vel lacus neque. Sed a placerat nulla. Fusce nulla elit, suscipit nec dui eget, commodo consequat lorem. In efficitur pellentesque lorem, id aliquet sem varius id. Maecenas vulputate sem ut varius euismod. Ut sagittis, ex nec tempor efficitur, lectus lorem accumsan lacus, ac rhoncus ex arcu a quam.\n\nCurabitur et nibh leo. Vivamus auctor nisl non dolor suscipit vehicula. Suspendisse potenti. Proin sapien urna, consectetur vitae tellus non, scelerisque venenatis velit. Donec sed volutpat arcu, et imperdiet diam. Nunc id enim porta, porta ante nec, placerat urna. Curabitur hendrerit aliquet ex id tincidunt. Duis malesuada orci id lacus porta, quis accumsan felis iaculis. Maecenas gravida placerat luctus.\n\nSuspendisse scelerisque arcu odio, id rhoncus justo faucibus et. Phasellus volutpat ante ut pellentesque gravida. Sed cursus dolor metus, at venenatis lorem dictum eget. Nullam maximus lectus sed nunc malesuada, vitae facilisis eros semper. Aliquam pellentesque rhoncus arcu vel sodales. Donec volutpat posuere ipsum, eget volutpat turpis eleifend ut. Donec vulputate posuere orci et convallis. Nunc nec euismod eros, quis scelerisque nisl. Curabitur vitae elementum tortor.\n\nNam interdum vitae tortor eget tempus. Aliquam erat quam, lacinia nec hendrerit sit amet, iaculis id tortor. Suspendisse sodales aliquet aliquam. Donec eu semper erat, eget accumsan nulla. In sed varius urna. Vestibulum vestibulum commodo ex. Proin sed ante magna. Vestibulum sapien massa, posuere vel tempor et, ultricies non ligula. Aenean aliquam diam eros, iaculis suscipit sapien laoreet id. Praesent sit amet mi venenatis, varius quam porta, hendrerit augue. In nec vulputate metus. Quisque quis eros ac ligula vestibulum finibus. Phasellus nec elit risus. Cras augue tortor, interdum non mollis at, facilisis at nisl. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n\nAenean gravida dolor vitae massa vulputate malesuada. Etiam iaculis ligula quis luctus scelerisque. Vestibulum porta at augue vitae posuere. Morbi ac quam augue. Nunc sit amet gravida velit. Proin lacinia imperdiet quam id convallis. Suspendisse consectetur eu lorem vitae dictum. Cras finibus sollicitudin nisi, in pellentesque risus mollis id. Maecenas lacinia interdum sem eu bibendum. Suspendisse potenti. Proin cursus malesuada mollis.\n\nNulla quis nisl a nulla fringilla maximus eget quis neque. Vestibulum id aliquet turpis. Aenean sagittis elementum finibus. Nunc aliquet gravida feugiat. Proin commodo erat tortor, ut vehicula felis dignissim nec. Nulla luctus diam quis massa lobortis vulputate. Morbi suscipit leo ac scelerisque tincidunt. Etiam fermentum erat odio, pellentesque ultrices erat dapibus et. In congue, lacus id luctus posuere, lacus risus convallis velit, at iaculis nulla arcu a ligula. Donec a luctus nisl. Vestibulum quis pulvinar arcu. Praesent pellentesque id magna at porta. Praesent dapibus dolor vestibulum, molestie nibh in, tempus eros. Pellentesque sed velit dui. Vestibulum et justo orci. Vivamus in bibendum turpis.\n\nVestibulum faucibus sem nec massa venenatis posuere. Sed consectetur erat tortor, vitae venenatis augue pulvinar eget. Aliquam convallis urna velit, non luctus lectus rhoncus eget. Nam porttitor interdum erat, ac gravida dui sodales a. Ut euismod aliquam magna, a eleifend arcu vulputate id. Praesent non placerat risus. Quisque lacinia, quam sit amet porta tempor, ex diam pharetra lectus, vel porttitor ex turpis ac purus. Ut a nunc lacus. Aliquam hendrerit eros ut purus posuere rhoncus. Fusce vitae libero eu justo accumsan interdum vitae eget mauris.","approvedHtmlSanitized":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc vestibulum mi a lorem bibendum, et rutrum urna venenatis. Praesent laoreet tortor non purus interdum dignissim. Sed sagittis bibendum mauris, a mattis nulla gravida id. Ut lectus dui, facilisis ut viverra tempus, dapibus ut metus. Suspendisse sed lacinia velit. Vestibulum vulputate egestas diam vitae rhoncus. Suspendisse ultricies ex non gravida pellentesque. Etiam ullamcorper feugiat rhoncus. Morbi luctus erat libero, condimentum porttitor libero mattis eget. Suspendisse vitae mauris ornare, rutrum risus sed, sollicitudin nisi. Aenean scelerisque diam ac quam auctor, non rhoncus ex facilisis. Suspendisse quis posuere sapien. Ut finibus pharetra malesuada. Quisque neque nibh, dapibus sit amet ipsum ac, pulvinar fermentum est. Fusce eget magna dignissim, sodales odio ac, vestibulum nisi. Ut auctor urna commodo risus auctor commodo.</p>\n<p>Quisque vel vehicula leo. Praesent nibh elit, blandit vitae tempor suscipit, mollis imperdiet nunc. Cras mi lorem, consectetur ut mattis nec, aliquam non felis. Nunc eu iaculis felis. In ac consequat mauris, at efficitur ex. Phasellus lectus nibh, aliquet ac finibus et, aliquet et dolor. Cras ut dolor pretium, laoreet odio sit amet, porttitor lorem.</p>\n<p>Ut arcu sapien, laoreet finibus posuere non, malesuada a augue. Proin fermentum ut metus vel congue. Vestibulum euismod arcu at ex venenatis, ac interdum metus auctor. Aliquam nec dui imperdiet, luctus ante vitae, porta turpis. Nulla laoreet orci et sem placerat rutrum. Curabitur vel libero rutrum, efficitur erat et, malesuada tellus. Maecenas maximus ornare finibus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Suspendisse sodales porttitor augue quis pretium. Nulla pretium nec tortor id venenatis. In consequat tincidunt risus at euismod. Suspendisse rhoncus eleifend urna, ac hendrerit ante iaculis ornare. Nullam id justo aliquam neque fermentum aliquet. Sed condimentum euismod nisi a lacinia. Nullam tincidunt enim efficitur, lobortis nisl vitae, hendrerit purus.</p>\n<p>Sed iaculis ac ipsum sit amet dignissim. Fusce finibus enim eget libero elementum mollis. Curabitur euismod eget urna vitae feugiat. In lacinia pharetra massa, in pellentesque velit euismod ac. Nunc ut vehicula ipsum, vitae feugiat enim. Suspendisse nec vestibulum mi, eget posuere dolor. Etiam vel lacus neque. Sed a placerat nulla. Fusce nulla elit, suscipit nec dui eget, commodo consequat lorem. In efficitur pellentesque lorem, id aliquet sem varius id. Maecenas vulputate sem ut varius euismod. Ut sagittis, ex nec tempor efficitur, lectus lorem accumsan lacus, ac rhoncus ex arcu a quam.</p>\n<p>Curabitur et nibh leo. Vivamus auctor nisl non dolor suscipit vehicula. Suspendisse potenti. Proin sapien urna, consectetur vitae tellus non, scelerisque venenatis velit. Donec sed volutpat arcu, et imperdiet diam. Nunc id enim porta, porta ante nec, placerat urna. Curabitur hendrerit aliquet ex id tincidunt. Duis malesuada orci id lacus porta, quis accumsan felis iaculis. Maecenas gravida placerat luctus.</p>\n<p>Suspendisse scelerisque arcu odio, id rhoncus justo faucibus et. Phasellus volutpat ante ut pellentesque gravida. Sed cursus dolor metus, at venenatis lorem dictum eget. Nullam maximus lectus sed nunc malesuada, vitae facilisis eros semper. Aliquam pellentesque rhoncus arcu vel sodales. Donec volutpat posuere ipsum, eget volutpat turpis eleifend ut. Donec vulputate posuere orci et convallis. Nunc nec euismod eros, quis scelerisque nisl. Curabitur vitae elementum tortor.</p>\n<p>Nam interdum vitae tortor eget tempus. Aliquam erat quam, lacinia nec hendrerit sit amet, iaculis id tortor. Suspendisse sodales aliquet aliquam. Donec eu semper erat, eget accumsan nulla. In sed varius urna. Vestibulum vestibulum commodo ex. Proin sed ante magna. Vestibulum sapien massa, posuere vel tempor et, ultricies non ligula. Aenean aliquam diam eros, iaculis suscipit sapien laoreet id. Praesent sit amet mi venenatis, varius quam porta, hendrerit augue. In nec vulputate metus. Quisque quis eros ac ligula vestibulum finibus. Phasellus nec elit risus. Cras augue tortor, interdum non mollis at, facilisis at nisl. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n<p>Aenean gravida dolor vitae massa vulputate malesuada. Etiam iaculis ligula quis luctus scelerisque. Vestibulum porta at augue vitae posuere. Morbi ac quam augue. Nunc sit amet gravida velit. Proin lacinia imperdiet quam id convallis. Suspendisse consectetur eu lorem vitae dictum. Cras finibus sollicitudin nisi, in pellentesque risus mollis id. Maecenas lacinia interdum sem eu bibendum. Suspendisse potenti. Proin cursus malesuada mollis.</p>\n<p>Nulla quis nisl a nulla fringilla maximus eget quis neque. Vestibulum id aliquet turpis. Aenean sagittis elementum finibus. Nunc aliquet gravida feugiat. Proin commodo erat tortor, ut vehicula felis dignissim nec. Nulla luctus diam quis massa lobortis vulputate. Morbi suscipit leo ac scelerisque tincidunt. Etiam fermentum erat odio, pellentesque ultrices erat dapibus et. In congue, lacus id luctus posuere, lacus risus convallis velit, at iaculis nulla arcu a ligula. Donec a luctus nisl. Vestibulum quis pulvinar arcu. Praesent pellentesque id magna at porta. Praesent dapibus dolor vestibulum, molestie nibh in, tempus eros. Pellentesque sed velit dui. Vestibulum et justo orci. Vivamus in bibendum turpis.</p>\n<p>Vestibulum faucibus sem nec massa venenatis posuere. Sed consectetur erat tortor, vitae venenatis augue pulvinar eget. Aliquam convallis urna velit, non luctus lectus rhoncus eget. Nam porttitor interdum erat, ac gravida dui sodales a. Ut euismod aliquam magna, a eleifend arcu vulputate id. Praesent non placerat risus. Quisque lacinia, quam sit amet porta tempor, ex diam pharetra lectus, vel porttitor ex turpis ac purus. Ut a nunc lacus. Aliquam hendrerit eros ut purus posuere rhoncus. Fusce vitae libero eu justo accumsan interdum vitae eget mauris.</p>\n","approvedAt":1559588509809,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0},{"id":63,"pageId":"11","nr":10,"parentNr":4,"multireplyPostNrs":[],"postType":1,"createdAt":1559588551362,"createdById":100,"currRevById":100,"currRevStartedAt":1559588551362,"currRevLastEditedAt":null,"currRevSourcePatch":null,"currRevNr":1,"prevRevNr":null,"lastApprovedEditAt":null,"lastApprovedEditById":null,"numDistinctEditors":1,"safeRevNr":1,"approvedSource":"# VM suite\n\nThe VM suite allows you to build custom GraalVM distributions, as well as installable components.\nIt defines a base GraalVM distribution that contains the JVMCI-enabled JDK, the GraalVM SDK, Truffle, and the GraalVM component installer.\nMore components are added by dynamically importing additional suites.\nThis can be done either by:\n1. running `mx --dynamicimports <suite...> build`\n2. setting the `DEFAULT_DYNAMIC_IMPORTS` or `DYNAMIC_IMPORTS` environment variables before running `mx build`\n3. running `mx --env <env file> build`\n\nAfter the compilation:\n- the `latest_graalvm` symbolic link points to the latest built GraalVM\n- `$ mx [build-time arguments] graalvm-home` prints the path to the GraalVM home directory\n\nNote that the build dependencies of each component are specified in the README file of the corresponding repository.\nA common requirement is that the `JAVA_HOME` environment variable must point to the latest JVMCI-enabled JDK8 ([pre-built archives](https://github.com/graalvm/openjdk8-jvmci-builder/releases); [build instructions](https://github.com/graalvm/openjdk8-jvmci-builder)).\n\n\n### Example: build the base GraalVM CE image\nThe base GraalVM CE image includes:\n- SubstrateVM (with the `native-image` tool)\n- GraalVM compiler & the Truffle partial evaluator (imported as a dependency of `substratevm`)\n- The inspector, profiler, and VisualVM tools\n- Sulong\n- Graal.nodejs\n- Graal.js (imported as a dependency of `graal-nodejs`)\n- the `polyglot` launcher\n- the `libpolyglot` shared library\n\nIn our CI, we build it using:\n- the latest JVMCI-enabled JDK8 ([pre-built archives](https://github.com/graalvm/openjdk8-jvmci-builder/releases); [build instructions](https://github.com/graalvm/openjdk8-jvmci-builder)). The `JAVA_HOME` environment variable must point to it.\n- `gcc`: `4.9.1`\n- `make`: `3.83`\n- `binutils`: `2.23.2`\n- `llvm`: `3.8` on linux; `4.0.1` on darwin\n\nNewer versions might also work. For more details, please check the README file of each component.\n\nTo start the build, you can either run:\n\n1.\n```bash\n$ mx --dynamicimports /substratevm,/tools,sulong,/graal-nodejs build\n```\n\n2.\n```bash\n$ export DEFAULT_DYNAMIC_IMPORTS=/substratevm,/tools,sulong,/graal-nodejs\n$ mx build\n```\nor:\n```bash\n$ export DYNAMIC_IMPORTS=/substratevm,/tools,sulong,/graal-nodejs\n$ mx build\n```\nNote that the suites listed in:\n- `DYNAMIC_IMPORTS` are always imported\n- `DEFAULT_DYNAMIC_IMPORTS` are imported only if no other dynamic import is specified (via command line, env file, or environment variable)\n\n3.\n```bash\n$ mx --env ce build\n```\nWhich uses the settings in the env file in `mx.vm/ce`. Note that you can add custom env files to your `mx.vm` directory, and call `mx --env <env file name> build`.\n\n\n## Installable components\nInstallable components for the Graal Updater (`gu`) are built alongside the GraalVM for languages other than JS.\nFor example:\n```bash\n$ env FASTR_RELEASE=true mx --dynamicimports fastr,truffleruby,graalpython,/substratevm build\n```\ncreates:\n- a GraalVM image which includes the base CE components plus FastR, TruffleRuby, and Graal.Python\n- the installables for FastR, TruffleRuby, and Graal.Python\n\n\n## Native images\nWhen `substratevm` is imported, the build system creates native launchers for the supported languages and for `polyglot`, plus the shared polyglot library (`libpolyglot`).\nOtherwise, it creates bash launchers for the languages and for `polyglot`, and does not create the shared polyglot library.\n\nTo override the default behavior, the `vm` suite defines the following `mx` arguments:\n```\n  --disable-libpolyglot         Disable the 'polyglot' library project\n  --disable-polyglot            Disable the 'polyglot' launcher project\n  --force-bash-launchers=...    Force the use of bash launchers instead of native images.\n                                This can be a comma-separated list of disabled launchers or `true` to disable all native launchers.\n```\nAnd the following environment variables:\n```\n  DISABLE_LIBPOLYGLOT           Same as '--disable-libpolyglot'\n  DISABLE_POLYGLOT              Same as '--disable-polyglot'\n  FORCE_BASH_LAUNCHERS          Same as '--force-bash-launchers'\n```\n\nNote that when the shared polyglot library is not built, Graal.nodejs can only work in JVM-mode (`node --jvm [args]`).\n\n\n### Example: avoid building the polyglot image and the polyglot shared library\n\n```bash\n$ mx --disable-polyglot --disable-libpolyglot --dynamicimports /substratevm,/tools,sulong,/graal-js build\n```\nbuilds the native SubstrateVM launchers for native-image, Graal.js, and Sulong, but no polyglot launcher and polyglot library.\n\n\n### Example: force bash launchers\n```bash\n$ mx --force-bash-launchers=true --dynamicimports /substratevm,/tools,sulong,/graal-nodejs\n```\nbuilds the native SubstrateVM launcher for native-image, and creates bash launchers for Sulong, Graal.js, and `polyglot`\n\n\n### Example: create an env file that builds only the SubstrateVM, Graal.Python, and their dependencies (no `polyglot`; no `libpolyglot`)\n```bash\n$ echo \"DYNAMIC_IMPORTS=/substratevm,graalpython\" > mx.vm/python\n$ echo \"DISABLE_LIBPOLYGLOT=true\" >> mx.vm/python\n$ echo \"DISABLE_POLYGLOT=true\" >> mx.vm/python\n$ mx --env python build\n```\nNow, if you want to add Graal.js:\n```bash\n$ mx --env python --dynamicimports /graal-js build\n```\n\n\n## Versioned dynamic imports\nDynamic imports typically require the user to locate and clone the dynamically imported suites.\nThere is also no indication of which version of those suites would work.\nTo avoid this issue, the `vm` suite uses \"versioned dynamic imports\".\n\nThe `mx.vm/suite.py` file contains references to all the suites that might be imported to compose a GraalVM.\nUnlike usual suite imports, they are marked as `dynamic`, which means they are only considered if they are part of the dynamically imported suites.\nHowever, when they are included, they have URLs and versions which allow mx to automatically clone the correct version.\n\nMore details can be found in `docs/dynamic-imports.md` in the `mx` repository.\n\n\n### Example: checkout the correct imports of Graal.js and Sulong, then build a GraalVM CE image\n```bash\n$ mx --env ce sforceimports\n$ mx --env ce build\n```\n\n## Registering custom components\nSuites can register new, custom components calling`mx_sdk.register_graalvm_component()`.","approvedHtmlSanitized":"<h1>VM suite</h1>\n<p>The VM suite allows you to build custom GraalVM distributions, as well as installable components.<br>\nIt defines a base GraalVM distribution that contains the JVMCI-enabled JDK, the GraalVM SDK, Truffle, and the GraalVM component installer.<br>\nMore components are added by dynamically importing additional suites.<br>\nThis can be done either by:</p>\n<ol>\n<li>running <code>mx --dynamicimports &lt;suite...&gt; build</code></li>\n<li>setting the <code>DEFAULT_DYNAMIC_IMPORTS</code> or <code>DYNAMIC_IMPORTS</code> environment variables before running <code>mx build</code></li>\n<li>running <code>mx --env &lt;env file&gt; build</code></li>\n</ol>\n<p>After the compilation:</p>\n<ul>\n<li>the <code>latest_graalvm</code> symbolic link points to the latest built GraalVM</li>\n<li><code>$ mx [build-time arguments] graalvm-home</code> prints the path to the GraalVM home directory</li>\n</ul>\n<p>Note that the build dependencies of each component are specified in the README file of the corresponding repository.<br>\nA common requirement is that the <code>JAVA_HOME</code> environment variable must point to the latest JVMCI-enabled JDK8 (<a href=\"https://github.com/graalvm/openjdk8-jvmci-builder/releases\" rel=\"nofollow\">pre-built archives</a>; <a href=\"https://github.com/graalvm/openjdk8-jvmci-builder\" rel=\"nofollow\">build instructions</a>).</p>\n<h3>Example: build the base GraalVM CE image</h3>\n<p>The base GraalVM CE image includes:</p>\n<ul>\n<li>SubstrateVM (with the <code>native-image</code> tool)</li>\n<li>GraalVM compiler &amp; the Truffle partial evaluator (imported as a dependency of <code>substratevm</code>)</li>\n<li>The inspector, profiler, and VisualVM tools</li>\n<li>Sulong</li>\n<li>Graal.nodejs</li>\n<li>Graal.js (imported as a dependency of <code>graal-nodejs</code>)</li>\n<li>the <code>polyglot</code> launcher</li>\n<li>the <code>libpolyglot</code> shared library</li>\n</ul>\n<p>In our CI, we build it using:</p>\n<ul>\n<li>the latest JVMCI-enabled JDK8 (<a href=\"https://github.com/graalvm/openjdk8-jvmci-builder/releases\" rel=\"nofollow\">pre-built archives</a>; <a href=\"https://github.com/graalvm/openjdk8-jvmci-builder\" rel=\"nofollow\">build instructions</a>). The <code>JAVA_HOME</code> environment variable must point to it.</li>\n<li><code>gcc</code>: <code>4.9.1</code></li>\n<li><code>make</code>: <code>3.83</code></li>\n<li><code>binutils</code>: <code>2.23.2</code></li>\n<li><code>llvm</code>: <code>3.8</code> on linux; <code>4.0.1</code> on darwin</li>\n</ul>\n<p>Newer versions might also work. For more details, please check the README file of each component.</p>\n<p>To start the build, you can either run:</p>\n<ol>\n<li></li>\n</ol>\n<pre><code class=\"language-bash\">$ mx --dynamicimports /substratevm,/tools,sulong,/graal-nodejs build\n</code></pre>\n<ol>\n<li></li>\n</ol>\n<pre><code class=\"language-bash\">$ export DEFAULT_DYNAMIC_IMPORTS=/substratevm,/tools,sulong,/graal-nodejs\n$ mx build\n</code></pre>\n<p>or:</p>\n<pre><code class=\"language-bash\">$ export DYNAMIC_IMPORTS=/substratevm,/tools,sulong,/graal-nodejs\n$ mx build\n</code></pre>\n<p>Note that the suites listed in:</p>\n<ul>\n<li><code>DYNAMIC_IMPORTS</code> are always imported</li>\n<li><code>DEFAULT_DYNAMIC_IMPORTS</code> are imported only if no other dynamic import is specified (via command line, env file, or environment variable)</li>\n</ul>\n<ol>\n<li></li>\n</ol>\n<pre><code class=\"language-bash\">$ mx --env ce build\n</code></pre>\n<p>Which uses the settings in the env file in <code>mx.vm/ce</code>. Note that you can add custom env files to your <code>mx.vm</code> directory, and call <code>mx --env &lt;env file name&gt; build</code>.</p>\n<h2>Installable components</h2>\n<p>Installable components for the Graal Updater (<code>gu</code>) are built alongside the GraalVM for languages other than JS.<br>\nFor example:</p>\n<pre><code class=\"language-bash\">$ env FASTR_RELEASE=true mx --dynamicimports fastr,truffleruby,graalpython,/substratevm build\n</code></pre>\n<p>creates:</p>\n<ul>\n<li>a GraalVM image which includes the base CE components plus FastR, TruffleRuby, and Graal.Python</li>\n<li>the installables for FastR, TruffleRuby, and Graal.Python</li>\n</ul>\n<h2>Native images</h2>\n<p>When <code>substratevm</code> is imported, the build system creates native launchers for the supported languages and for <code>polyglot</code>, plus the shared polyglot library (<code>libpolyglot</code>).<br>\nOtherwise, it creates bash launchers for the languages and for <code>polyglot</code>, and does not create the shared polyglot library.</p>\n<p>To override the default behavior, the <code>vm</code> suite defines the following <code>mx</code> arguments:</p>\n<pre><code>  --disable-libpolyglot         Disable the 'polyglot' library project\n  --disable-polyglot            Disable the 'polyglot' launcher project\n  --force-bash-launchers=...    Force the use of bash launchers instead of native images.\n                                This can be a comma-separated list of disabled launchers or `true` to disable all native launchers.\n</code></pre>\n<p>And the following environment variables:</p>\n<pre><code>  DISABLE_LIBPOLYGLOT           Same as '--disable-libpolyglot'\n  DISABLE_POLYGLOT              Same as '--disable-polyglot'\n  FORCE_BASH_LAUNCHERS          Same as '--force-bash-launchers'\n</code></pre>\n<p>Note that when the shared polyglot library is not built, Graal.nodejs can only work in JVM-mode (<code>node --jvm [args]</code>).</p>\n<h3>Example: avoid building the polyglot image and the polyglot shared library</h3>\n<pre><code class=\"language-bash\">$ mx --disable-polyglot --disable-libpolyglot --dynamicimports /substratevm,/tools,sulong,/graal-js build\n</code></pre>\n<p>builds the native SubstrateVM launchers for native-image, Graal.js, and Sulong, but no polyglot launcher and polyglot library.</p>\n<h3>Example: force bash launchers</h3>\n<pre><code class=\"language-bash\">$ mx --force-bash-launchers=true --dynamicimports /substratevm,/tools,sulong,/graal-nodejs\n</code></pre>\n<p>builds the native SubstrateVM launcher for native-image, and creates bash launchers for Sulong, Graal.js, and <code>polyglot</code></p>\n<h3>Example: create an env file that builds only the SubstrateVM, Graal.Python, and their dependencies (no <code>polyglot</code>; no <code>libpolyglot</code>)</h3>\n<pre><code class=\"language-bash\">$ echo &quot;DYNAMIC_IMPORTS=/substratevm,graalpython&quot; &gt; mx.vm/python\n$ echo &quot;DISABLE_LIBPOLYGLOT=true&quot; &gt;&gt; mx.vm/python\n$ echo &quot;DISABLE_POLYGLOT=true&quot; &gt;&gt; mx.vm/python\n$ mx --env python build\n</code></pre>\n<p>Now, if you want to add Graal.js:</p>\n<pre><code class=\"language-bash\">$ mx --env python --dynamicimports /graal-js build\n</code></pre>\n<h2>Versioned dynamic imports</h2>\n<p>Dynamic imports typically require the user to locate and clone the dynamically imported suites.<br>\nThere is also no indication of which version of those suites would work.<br>\nTo avoid this issue, the <code>vm</code> suite uses &quot;versioned dynamic imports&quot;.</p>\n<p>The <code>mx.vm/suite.py</code> file contains references to all the suites that might be imported to compose a GraalVM.<br>\nUnlike usual suite imports, they are marked as <code>dynamic</code>, which means they are only considered if they are part of the dynamically imported suites.<br>\nHowever, when they are included, they have URLs and versions which allow mx to automatically clone the correct version.</p>\n<p>More details can be found in <code>docs/dynamic-imports.md</code> in the <code>mx</code> repository.</p>\n<h3>Example: checkout the correct imports of Graal.js and Sulong, then build a GraalVM CE image</h3>\n<pre><code class=\"language-bash\">$ mx --env ce sforceimports\n$ mx --env ce build\n</code></pre>\n<h2>Registering custom components</h2>\n<p>Suites can register new, custom components calling<code>mx_sdk.register_graalvm_component()</code>.</p>\n","approvedAt":1559588551362,"approvedById":100,"approvedRevNr":1,"collapsedStatus":0,"collapsedAt":null,"collapsedById":null,"closedStatus":0,"closedAt":null,"closedById":null,"bodyHiddenAt":null,"bodyHiddenById":null,"bodyHiddenReason":null,"deletedStatus":0,"deletedAt":null,"deletedById":null,"pinnedPosition":null,"branchSideways":null,"numPendingFlags":0,"numHandledFlags":0,"numPendingEditSuggestions":0,"numLikeVotes":0,"numWrongVotes":0,"numBuryVotes":0,"numUnwantedVotes":0,"numTimesRead":0}],"permsOnPages":[{"maySee":true,"mayEditOwn":true,"mayEditComment":true,"mayDeleteComment":true,"mayCreatePage":true,"mayDeletePage":true,"forPeopleId":17,"mayEditWiki":true,"mayPostComment":true,"id":1001,"onCategoryId":2,"mayEditPage":true,"maySeeOwn":true},{"maySee":true,"mayEditOwn":true,"forPeopleId":10,"mayPostComment":true,"id":1002,"onCategoryId":3,"mayCreatePage":true,"maySeeOwn":true},{"maySee":true,"mayEditOwn":true,"mayEditComment":true,"mayDeleteComment":true,"mayCreatePage":true,"mayDeletePage":true,"forPeopleId":17,"mayEditWiki":true,"mayPostComment":true,"id":1003,"onCategoryId":3,"mayEditPage":true,"maySeeOwn":true},{"maySee":true,"mayEditOwn":true,"forPeopleId":10,"mayPostComment":true,"id":1004,"onCategoryId":4,"mayCreatePage":true,"maySeeOwn":true},{"maySee":true,"mayEditOwn":true,"mayEditComment":true,"mayDeleteComment":true,"mayCreatePage":true,"mayDeletePage":true,"forPeopleId":17,"mayEditWiki":true,"mayPostComment":true,"id":1005,"onCategoryId":4,"mayEditPage":true,"maySeeOwn":true}],"categories":[{"id":1,"sectionPageId":"1","parentId":null,"defaultSubCatId":3,"name":"(Root Category)","slug":"(root-category)","position":1,"description":null,"newTopicTypes":[],"unlistCategory":false,"unlistTopics":false,"includeInSummaries":0,"createdAtMs":1555510000112,"updatedAtMs":1555510000112,"lockedAtMs":null,"frozenAtMs":null,"deletedAtMs":null},{"id":2,"sectionPageId":"1","parentId":1,"defaultSubCatId":null,"name":"Staff","slug":"staff","position":1010,"description":"Private category for staff discussions.","newTopicTypes":[12],"unlistCategory":false,"unlistTopics":false,"includeInSummaries":0,"createdAtMs":1555510000112,"updatedAtMs":1555510000112,"lockedAtMs":null,"frozenAtMs":null,"deletedAtMs":null},{"id":3,"sectionPageId":"1","parentId":1,"defaultSubCatId":null,"name":"General","slug":"general","position":1000,"description":"For topics that don't fit in other categories.","newTopicTypes":[10],"unlistCategory":false,"unlistTopics":false,"includeInSummaries":0,"createdAtMs":1555510000112,"updatedAtMs":1555510000112,"lockedAtMs":null,"frozenAtMs":null,"deletedAtMs":null},{"id":4,"sectionPageId":"1","parentId":1,"defaultSubCatId":null,"name":"Sample Topics","slug":"sample-topics","position":1100,"description":"Sample topics of different types, okay to delete.","newTopicTypes":[12],"unlistCategory":false,"unlistTopics":false,"includeInSummaries":3,"createdAtMs":1555510000112,"updatedAtMs":1555510000112,"lockedAtMs":null,"frozenAtMs":null,"deletedAtMs":null}],"groups":[{"grantsTrustLevel":null,"summaryEmailIfActive":null,"fullName":"Everyone","id":10,"isGroup":true,"summaryEmailIntervalMins":null,"uiPrefs":null,"username":"everyone"},{"grantsTrustLevel":null,"summaryEmailIfActive":null,"fullName":"Basic Members","id":12,"isGroup":true,"summaryEmailIntervalMins":null,"uiPrefs":null,"username":"basic_members"},{"grantsTrustLevel":null,"summaryEmailIfActive":null,"fullName":"Full Members","id":13,"isGroup":true,"summaryEmailIntervalMins":null,"uiPrefs":null,"username":"full_members"},{"grantsTrustLevel":null,"summaryEmailIfActive":null,"fullName":"Trusted Members","id":14,"isGroup":true,"summaryEmailIntervalMins":null,"uiPrefs":null,"username":"trusted_members"},{"grantsTrustLevel":null,"summaryEmailIfActive":null,"fullName":"Core Members","id":16,"isGroup":true,"summaryEmailIntervalMins":null,"uiPrefs":null,"username":"core_members"},{"grantsTrustLevel":null,"summaryEmailIfActive":null,"fullName":"Staff","id":17,"isGroup":true,"summaryEmailIntervalMins":null,"uiPrefs":null,"username":"staff"},{"grantsTrustLevel":null,"summaryEmailIfActive":null,"fullName":"Moderators","id":18,"isGroup":true,"summaryEmailIntervalMins":null,"uiPrefs":null,"username":"moderators"},{"grantsTrustLevel":null,"summaryEmailIfActive":null,"fullName":"Admins","id":19,"isGroup":true,"summaryEmailIntervalMins":null,"uiPrefs":null,"username":"admins"},{"grantsTrustLevel":null,"summaryEmailIfActive":null,"fullName":"All Members","id":11,"isGroup":true,"summaryEmailIntervalMins":null,"uiPrefs":null,"username":"all_members"},{"grantsTrustLevel":null,"summaryEmailIfActive":null,"fullName":"Trusted Regulars","id":15,"isGroup":true,"summaryEmailIntervalMins":null,"uiPrefs":null,"username":"trusted_regulars"}],"pagePaths":[{"value":"/","folder":"/","pageId":"1","showId":false,"slug":"","canonical":true},{"value":"/-2/about-staff","folder":"/","pageId":"2","showId":true,"slug":"about-staff","canonical":true},{"value":"/-3/about-general","folder":"/","pageId":"3","showId":true,"slug":"about-general","canonical":true},{"value":"/-4/about-sample-topics","folder":"/","pageId":"4","showId":true,"slug":"about-sample-topics","canonical":true},{"value":"/-5/welcome","folder":"/","pageId":"5","showId":true,"slug":"welcome","canonical":true},{"value":"/-6/sample-discussion","folder":"/","pageId":"6","showId":true,"slug":"sample-discussion","canonical":true},{"value":"/-7/sample-idea","folder":"/","pageId":"7","showId":true,"slug":"sample-idea","canonical":true},{"value":"/-8/sample-question","folder":"/","pageId":"8","showId":true,"slug":"sample-question","canonical":true},{"value":"/-9/staff-chat","folder":"/","pageId":"9","showId":true,"slug":"staff-chat","canonical":true},{"value":"/-10/the-standard-lorem-ipsum-passage-used-since-the-1500s","folder":"/","pageId":"10","showId":true,"slug":"the-standard-lorem-ipsum-passage-used-since-the-1500s","canonical":true},{"value":"/-11/lorem-ipsum","folder":"/","pageId":"11","showId":true,"slug":"lorem-ipsum","canonical":true}],"guests":[],"meta":{"id":1,"pubId":"phg507xdeb","name":"Main Site","status":2,"createdAtMs":1555509748865,"createdFromIp":"0.0.0.0","creatorEmailAddress":null,"nextPageId":12,"quotaLimitMbs":null,"version":2,"numGuests":0,"numIdentities":0,"numRoles":14,"numRoleSettings":8,"numPages":11,"numPosts":63,"numPostTextBytes":95314,"numPostsRead":0,"numActions":0,"numNotfs":0,"numEmailsSent":0,"numAuditRows":0,"numUploads":0,"numUploadBytes":0,"numPostRevisions":0,"numPostRevBytes":0,"hostnames":[{"hostname":"benchmark.localhost","role":1,"addedAt":1560357812109}]},"members":[{"country":null,"approvedByUsername":null,"isModerator":false,"createdAtMs":1555509889854,"about":null,"suspendedReason":null,"hasPassword":true,"createdAtEpoch":1555509889854,"summaryEmailIntervalMinsOwn":null,"suspendedAtEpoch":null,"suspendedByUsername":null,"effectiveTrustLevel":2,"emailAddress":"admin@example.com","emailVerifiedAtMs":1555509889854,"avatarSmallHashPath":null,"suspendedById":null,"approvedByName":null,"id":100,"isApproved":null,"approvedById":null,"summaryEmailIfActiveOwn":null,"email":"admin@example.com","threatLevel":3,"suspendedAtMs":null,"deletedAtMs":null,"approvedAtMs":null,"externalId":null,"fullName":"Jirka Maršík","lockedThreatLevel":null,"isAdmin":true,"deactivatedAt":null,"suspendedTillMs":null,"trustLevel":2,"approvedAt":null,"lockedTrustLevel":null,"url":null,"avatarMediumHashPath":null,"suspendedTillEpoch":null,"deactivatedAtMs":null,"deletedAt":null,"emailVerifiedAt":1555509889854,"seeActivityMinTrustLevel":null,"avatarTinyHashPath":null,"uiPrefs":{},"username":"jirkamarsik"}],"memberEmailAddresses":[{"userId":100,"emailAddress":"admin@example.com","addedAt":1555509889854,"verifiedAt":1555509889854}],"settings":{"userMustBeAuthenticated":null,"userMustBeApproved":null,"expireIdleAfterMins":null,"inviteOnly":null,"allowSignup":null,"allowLocalSignup":null,"allowGuestLogin":null,"enableGoogleLogin":null,"enableFacebookLogin":null,"enableTwitterLogin":null,"enableGitHubLogin":null,"enableGitLabLogin":null,"enableLinkedInLogin":null,"enableVkLogin":null,"enableInstagramLogin":null,"requireVerifiedEmail":null,"emailDomainBlacklist":null,"emailDomainWhitelist":null,"mayComposeBeforeSignup":null,"mayPostBeforeEmailVerified":null,"doubleTypeEmailAddress":null,"doubleTypePassword":null,"minPasswordLength":null,"begForEmailAddress":null,"enableSso":null,"ssoUrl":null,"ssoNotApprovedUrl":null,"forumMainView":null,"forumTopicsSortButtons":null,"forumCategoryLinks":null,"forumTopicsLayout":null,"forumCategoriesLayout":null,"showCategories":null,"showTopicFilterButton":null,"showTopicTypes":null,"selectTopicType":null,"showAuthorHow":null,"watchbarStartsOpen":null,"numFirstPostsToReview":null,"numFirstPostsToApprove":null,"numFirstPostsToAllow":null,"enableStopForumSpam":null,"enableAkismet":null,"akismetApiKey":null,"sendEmailToAkismet":null,"faviconUrl":null,"headStylesHtml":null,"headScriptsHtml":null,"endOfBodyHtml":null,"headerHtml":null,"footerHtml":null,"horizontalComments":null,"socialLinksHtml":null,"logoUrlOrHtml":null,"companyDomain":null,"companyFullName":"Unnamed Organization","companyShortName":null,"termsOfUseUrl":null,"privacyUrl":null,"rulesUrl":null,"contactEmailAddr":null,"contactUrl":null,"contribAgreement":null,"contentLicense":null,"languageCode":null,"googleUniversalAnalyticsTrackingId":null,"enableForum":null,"enableApi":null,"enableTags":null,"enableChat":null,"enableDirectMessages":null,"showSubCommunities":null,"showExperimental":null,"featureFlags":null,"allowEmbeddingFrom":null,"embeddedCommentsCategoryId":null,"htmlTagCssClasses":null,"numFlagsToHidePost":null,"cooldownMinutesAfterFlaggedHidden":null,"numFlagsToBlockNewUser":null,"numFlaggersToBlockNewUser":null,"notifyModsIfUserBlocked":null,"regularMemberFlagWeight":null,"coreMemberFlagWeight":null},"invites":[],"pages":[{"id":"8","pageType":10,"version":5,"createdAtMs":1555510001449,"updatedAtMs":1555510503565,"publishedAtMs":1555510001449,"bumpedAtMs":1555510001552,"lastApprovedReplyAt":1555510001552,"lastApprovedReplyById":1,"categoryId":4,"embeddingPageUrl":null,"authorId":1,"frequentPosterIds":[],"layout":0,"pinOrder":null,"pinWhere":null,"numLikes":0,"numWrongs":0,"numBurys":0,"numUnwanteds":0,"numRepliesVisible":3,"numRepliesTotal":3,"numPostsTotal":5,"numOrigPostLikeVotes":0,"numOrigPostWrongVotes":0,"numOrigPostBuryVotes":0,"numOrigPostUnwantedVotes":0,"numOrigPostRepliesVisible":2,"answeredAt":1555510503564,"answerPostId":25,"doingStatus":1,"plannedAt":null,"startedAt":null,"doneAt":null,"closedAt":1555510503564,"lockedAt":null,"frozenAt":null,"unwantedAt":null,"hiddenAt":null,"deletedAt":null,"htmlTagCssClasses":"","htmlHeadTitle":"","htmlHeadDescription":""},{"id":"4","pageType":9,"version":1,"createdAtMs":1555510001047,"updatedAtMs":1555510001047,"publishedAtMs":1555510001047,"bumpedAtMs":null,"lastApprovedReplyAt":null,"lastApprovedReplyById":null,"categoryId":4,"embeddingPageUrl":null,"authorId":1,"frequentPosterIds":[],"layout":0,"pinOrder":null,"pinWhere":null,"numLikes":0,"numWrongs":0,"numBurys":0,"numUnwanteds":0,"numRepliesVisible":0,"numRepliesTotal":0,"numPostsTotal":2,"numOrigPostLikeVotes":0,"numOrigPostWrongVotes":0,"numOrigPostBuryVotes":0,"numOrigPostUnwantedVotes":0,"numOrigPostRepliesVisible":0,"answeredAt":null,"answerPostId":null,"doingStatus":1,"plannedAt":null,"startedAt":null,"doneAt":null,"closedAt":null,"lockedAt":null,"frozenAt":null,"unwantedAt":null,"hiddenAt":null,"deletedAt":null,"htmlTagCssClasses":"","htmlHeadTitle":"","htmlHeadDescription":""},{"id":"11","pageType":10,"version":11,"createdAtMs":1559588177007,"updatedAtMs":1559588551363,"publishedAtMs":1559588177007,"bumpedAtMs":1559588551362,"lastApprovedReplyAt":1559588551362,"lastApprovedReplyById":100,"categoryId":3,"embeddingPageUrl":null,"authorId":100,"frequentPosterIds":[],"layout":0,"pinOrder":null,"pinWhere":null,"numLikes":0,"numWrongs":0,"numBurys":0,"numUnwanteds":0,"numRepliesVisible":9,"numRepliesTotal":9,"numPostsTotal":11,"numOrigPostLikeVotes":0,"numOrigPostWrongVotes":0,"numOrigPostBuryVotes":0,"numOrigPostUnwantedVotes":0,"numOrigPostRepliesVisible":3,"answeredAt":1559588388280,"answerPostId":60,"doingStatus":1,"plannedAt":null,"startedAt":null,"doneAt":null,"closedAt":1559588388280,"lockedAt":null,"frozenAt":null,"unwantedAt":null,"hiddenAt":null,"deletedAt":null,"htmlTagCssClasses":"","htmlHeadTitle":"","htmlHeadDescription":""},{"id":"9","pageType":18,"version":2,"createdAtMs":1555510001567,"updatedAtMs":1555510377308,"publishedAtMs":1555510001567,"bumpedAtMs":1555510377307,"lastApprovedReplyAt":1555510377307,"lastApprovedReplyById":100,"categoryId":2,"embeddingPageUrl":null,"authorId":1,"frequentPosterIds":[],"layout":0,"pinOrder":null,"pinWhere":null,"numLikes":0,"numWrongs":0,"numBurys":0,"numUnwanteds":0,"numRepliesVisible":1,"numRepliesTotal":1,"numPostsTotal":3,"numOrigPostLikeVotes":0,"numOrigPostWrongVotes":0,"numOrigPostBuryVotes":0,"numOrigPostUnwantedVotes":0,"numOrigPostRepliesVisible":0,"answeredAt":null,"answerPostId":null,"doingStatus":1,"plannedAt":null,"startedAt":null,"doneAt":null,"closedAt":null,"lockedAt":null,"frozenAt":null,"unwantedAt":null,"hiddenAt":null,"deletedAt":null,"htmlTagCssClasses":"","htmlHeadTitle":"","htmlHeadDescription":""},{"id":"5","pageType":12,"version":3,"createdAtMs":1555510001073,"updatedAtMs":1555510420298,"publishedAtMs":1555510001073,"bumpedAtMs":null,"lastApprovedReplyAt":null,"lastApprovedReplyById":null,"categoryId":3,"embeddingPageUrl":null,"authorId":1,"frequentPosterIds":[],"layout":0,"pinOrder":5,"pinWhere":3,"numLikes":0,"numWrongs":0,"numBurys":0,"numUnwanteds":0,"numRepliesVisible":0,"numRepliesTotal":0,"numPostsTotal":4,"numOrigPostLikeVotes":0,"numOrigPostWrongVotes":0,"numOrigPostBuryVotes":0,"numOrigPostUnwantedVotes":0,"numOrigPostRepliesVisible":0,"answeredAt":null,"answerPostId":null,"doingStatus":1,"plannedAt":null,"startedAt":null,"doneAt":null,"closedAt":null,"lockedAt":null,"frozenAt":null,"unwantedAt":null,"hiddenAt":null,"deletedAt":null,"htmlTagCssClasses":"","htmlHeadTitle":"","htmlHeadDescription":""},{"id":"10","pageType":10,"version":20,"createdAtMs":1557151140217,"updatedAtMs":1557151488889,"publishedAtMs":1557151140217,"bumpedAtMs":1557151488888,"lastApprovedReplyAt":1557151488888,"lastApprovedReplyById":100,"categoryId":3,"embeddingPageUrl":null,"authorId":100,"frequentPosterIds":[],"layout":0,"pinOrder":null,"pinWhere":null,"numLikes":0,"numWrongs":0,"numBurys":0,"numUnwanteds":0,"numRepliesVisible":16,"numRepliesTotal":16,"numPostsTotal":18,"numOrigPostLikeVotes":0,"numOrigPostWrongVotes":0,"numOrigPostBuryVotes":0,"numOrigPostUnwantedVotes":0,"numOrigPostRepliesVisible":1,"answeredAt":1557151190732,"answerPostId":39,"doingStatus":1,"plannedAt":null,"startedAt":null,"doneAt":null,"closedAt":1557151190732,"lockedAt":null,"frozenAt":null,"unwantedAt":null,"hiddenAt":null,"deletedAt":null,"htmlTagCssClasses":"","htmlHeadTitle":"","htmlHeadDescription":""},{"id":"6","pageType":12,"version":5,"createdAtMs":1555510001219,"updatedAtMs":1557147835493,"publishedAtMs":1555510001219,"bumpedAtMs":1557147835487,"lastApprovedReplyAt":1557147835487,"lastApprovedReplyById":100,"categoryId":4,"embeddingPageUrl":null,"authorId":1,"frequentPosterIds":[],"layout":0,"pinOrder":null,"pinWhere":null,"numLikes":0,"numWrongs":0,"numBurys":0,"numUnwanteds":0,"numRepliesVisible":4,"numRepliesTotal":4,"numPostsTotal":6,"numOrigPostLikeVotes":0,"numOrigPostWrongVotes":0,"numOrigPostBuryVotes":0,"numOrigPostUnwantedVotes":0,"numOrigPostRepliesVisible":1,"answeredAt":null,"answerPostId":null,"doingStatus":1,"plannedAt":null,"startedAt":null,"doneAt":null,"closedAt":null,"lockedAt":null,"frozenAt":null,"unwantedAt":null,"hiddenAt":null,"deletedAt":null,"htmlTagCssClasses":"","htmlHeadTitle":"","htmlHeadDescription":""},{"id":"1","pageType":7,"version":2,"createdAtMs":1555510000132,"updatedAtMs":1555510307569,"publishedAtMs":1555510000132,"bumpedAtMs":1555510307568,"lastApprovedReplyAt":null,"lastApprovedReplyById":null,"categoryId":1,"embeddingPageUrl":null,"authorId":100,"frequentPosterIds":[],"layout":3,"pinOrder":null,"pinWhere":null,"numLikes":0,"numWrongs":0,"numBurys":0,"numUnwanteds":0,"numRepliesVisible":0,"numRepliesTotal":0,"numPostsTotal":2,"numOrigPostLikeVotes":0,"numOrigPostWrongVotes":0,"numOrigPostBuryVotes":0,"numOrigPostUnwantedVotes":0,"numOrigPostRepliesVisible":0,"answeredAt":null,"answerPostId":null,"doingStatus":1,"plannedAt":null,"startedAt":null,"doneAt":null,"closedAt":null,"lockedAt":null,"frozenAt":null,"unwantedAt":null,"hiddenAt":null,"deletedAt":null,"htmlTagCssClasses":"","htmlHeadTitle":"","htmlHeadDescription":""},{"id":"2","pageType":9,"version":1,"createdAtMs":1555510000949,"updatedAtMs":1555510000949,"publishedAtMs":1555510000949,"bumpedAtMs":null,"lastApprovedReplyAt":null,"lastApprovedReplyById":null,"categoryId":2,"embeddingPageUrl":null,"authorId":1,"frequentPosterIds":[],"layout":0,"pinOrder":null,"pinWhere":null,"numLikes":0,"numWrongs":0,"numBurys":0,"numUnwanteds":0,"numRepliesVisible":0,"numRepliesTotal":0,"numPostsTotal":2,"numOrigPostLikeVotes":0,"numOrigPostWrongVotes":0,"numOrigPostBuryVotes":0,"numOrigPostUnwantedVotes":0,"numOrigPostRepliesVisible":0,"answeredAt":null,"answerPostId":null,"doingStatus":1,"plannedAt":null,"startedAt":null,"doneAt":null,"closedAt":null,"lockedAt":null,"frozenAt":null,"unwantedAt":null,"hiddenAt":null,"deletedAt":null,"htmlTagCssClasses":"","htmlHeadTitle":"","htmlHeadDescription":""},{"id":"7","pageType":15,"version":7,"createdAtMs":1555510001350,"updatedAtMs":1555510586198,"publishedAtMs":1555510001350,"bumpedAtMs":1555510001436,"lastApprovedReplyAt":1555510001436,"lastApprovedReplyById":1,"categoryId":4,"embeddingPageUrl":null,"authorId":1,"frequentPosterIds":[],"layout":0,"pinOrder":null,"pinWhere":null,"numLikes":0,"numWrongs":0,"numBurys":0,"numUnwanteds":0,"numRepliesVisible":5,"numRepliesTotal":5,"numPostsTotal":8,"numOrigPostLikeVotes":0,"numOrigPostWrongVotes":0,"numOrigPostBuryVotes":0,"numOrigPostUnwantedVotes":0,"numOrigPostRepliesVisible":1,"answeredAt":null,"answerPostId":null,"doingStatus":2,"plannedAt":1555510586194,"startedAt":null,"doneAt":null,"closedAt":null,"lockedAt":null,"frozenAt":null,"unwantedAt":null,"hiddenAt":null,"deletedAt":null,"htmlTagCssClasses":"","htmlHeadTitle":"","htmlHeadDescription":""},{"id":"3","pageType":9,"version":1,"createdAtMs":1555510001011,"updatedAtMs":1555510001011,"publishedAtMs":1555510001011,"bumpedAtMs":null,"lastApprovedReplyAt":null,"lastApprovedReplyById":null,"categoryId":3,"embeddingPageUrl":null,"authorId":1,"frequentPosterIds":[],"layout":0,"pinOrder":null,"pinWhere":null,"numLikes":0,"numWrongs":0,"numBurys":0,"numUnwanteds":0,"numRepliesVisible":0,"numRepliesTotal":0,"numPostsTotal":2,"numOrigPostLikeVotes":0,"numOrigPostWrongVotes":0,"numOrigPostBuryVotes":0,"numOrigPostUnwantedVotes":0,"numOrigPostRepliesVisible":0,"answeredAt":null,"answerPostId":null,"doingStatus":1,"plannedAt":null,"startedAt":null,"doneAt":null,"closedAt":null,"lockedAt":null,"frozenAt":null,"unwantedAt":null,"hiddenAt":null,"deletedAt":null,"htmlTagCssClasses":"","htmlHeadTitle":"","htmlHeadDescription":""}]}
